;-------------------------------------------------------------------------------
; Code was generated by MuleSoft RPA Builder 6.0.15086.1
; Type is: RPA
; Copyright © MuleSoft LLC 2022
; Template Revision: $Revision: 6.0.1.0 $
; RPA-Workflow Author: kmok
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; include of standard functions
;-------------------------------------------------------------------------------
#include "StcFuncLib.stc3"

;-------------------------------------------------------------------------------
; Global value Setting 
;-------------------------------------------------------------------------------
Local $FutureUse = true  ; for now the scriptfeedback is always on!

; Don't change or remove following line! 
$g_UsedWorkflowEditorVersion = "6.0.15086.1"

;-------------------------------------------------------------------------------
; Set the workflow type for this workflow
;-------------------------------------------------------------------------------
_StcSetWfeWorkfowTypeId( 3 )

;-------------------------------------------------------------------------------
; Registering of runtime package cache paths (must be before Init is called!)
;-------------------------------------------------------------------------------

__StcRegisterRuntimePackageModul( "CommonRuntime_6_0_057BEB3330D7CDF6BEB5F9453118434D")  ; Source on WFE generated this script: $item.Value   

__StcRegisterRuntimePackageModul( "Web-Session_6_0_0E1C0D01D60DB01E9EF5AFA2BC0AC6B7")  ; Source on WFE generated this script: $item.Value   

__StcRegisterRuntimePackageModul( "Chrome-Driver_52D2B3366E1D9648F81DFDF08AA8107B")  ; Source on WFE generated this script: $item.Value   


;-------------------------------------------------------------------------------
; Registering of runtime package cache paths (must be before Init is called!)
;-------------------------------------------------------------------------------

;--------------------------------------------------------------------------------

Local $MaxStcLogfile = 1 ;1MB
InitStcFunclib($MaxStcLogfile, $FutureUse, 0)

StcSetScreenShotExtension(".bmp")                                     ; default store as BMP (productive)

writelog("Info - Script was built by X1DS Rev.  : " & $g_UsedWorkflowEditorVersion & " []" & " at 1:20:05 am ; Tuesday, 18 October 2022 (local time)" )
writelog("Info - Script was built on machine    : henryyeung-pc, OS Typ/Version: " & "Windows 10 x64 v10.0.22621" )
writelog("--------------------------------------------------------------------------------------------------------------")


;-------------------------------------------------------------------------------
;STC-Guard Konfiguration
;-------------------------------------------------------------------------------
__SetStcGuardOperationMode( True )    ; enable or disable Guard by project settings.
__StcRegisterKillByStcGuard( "")
__StcRegisterKillOnExit("" )
__StcRegisterKeepAliveList( "" )


;-------------------------------------------------------------------------------
;   Measurement values
;-------------------------------------------------------------------------------
; counter to count the number of tries
$enter = 1


;-------------------------------------------------------------------------------
;   Global Master Data Settings
;-------------------------------------------------------------------------------
$WorkflowName = "Access Looker" ;StcServerMasterDataVariable( "Workflowname", "STRING",  "Access Looker"  )
; For now the Applname ist not configurable in case of RPA type Workflows! 
; So in all cases where the application name is part of an output we should write: n/a !
$ApplName = "<n/a>"


;-------------------------------------------------------------------------------
;  Image processing settings       
;-------------------------------------------------------------------------------
StcEnableAutoBitsPerPixelFallback()                     


;-------------------------------------------------------------------------------
;  External Library Includes       
;-------------------------------------------------------------------------------


;-------------------------------------------------------------------------------
; Check if project uses AIS Functions. If so we call a special init to 
; precompile needed code. Otherwise first pattern search take more time than othhers!
;-------------------------------------------------------------------------------


;-------------------------------------------------------------------------------
;   Start of scheduler and measurement
; 
;-------------------------------------------------------------------------------
schedule()  ; !!! Ths is the main entry!!!!
   
;-------------------------------------------------------------------------------
; Start of Workflow
;   Measurement Workflows
;-------------------------------------------------------------------------------
Func measurement ()

  Local $LoopErrorHandling = 0
  Local $DoNotExecute = False

  __StcAisGlobalConfigs( $g__StcUseLegacyStaticAnalyseImages)
  
  OnWorkflowStart( "4c4d49ac-d76a-47f4-b191-724a7e35662c",  STC_GetWorkflowProtocolTemplate() )

  ;---------------------------------------------------------------------------
  ;  Master Daten Section
  ;-------------------------------------------------------------------------------
  ActionStepFeedbackEx( "Access Looker ()", "Activity", "4c4d49ac-d76a-47f4-b191-724a7e35662c", "Info", "Process name    : Batch Document Uploader.", @ScriptLineNumber ) 
  ActionStepFeedbackEx( "Access Looker ()", "Activity", "4c4d49ac-d76a-47f4-b191-724a7e35662c", "Info", "Activity name   : Access Looker.", @ScriptLineNumber ) 
  ActionStepFeedbackEx( "Access Looker ()", "Activity", "4c4d49ac-d76a-47f4-b191-724a7e35662c", "Info", "Workflow type is: " & StcGetWfeWorkflowType() & ".", @ScriptLineNumber ) 
  ActionStepFeedbackEx( "Access Looker ()", "Activity", "4c4d49ac-d76a-47f4-b191-724a7e35662c", "Info", "Executed by user: '" & @UserName & "' at machine name: '" & @ComputerName & "'. OS-Version: " & @OSVersion & ".", @ScriptLineNumber ) 

  ;-------------------------------------------------------------------------------
  ;   Measurement Point INIT-Section 
  ;-------------------------------------------------------------------------------

  ; Simple Measurement Point Registration 
   
   ; Timer related Measurement Point Registration
   
   
 ;-----------------------------------------------------------------------
 ;# Start of Initialization Section: Workflow Initialization;
 ;-----------------------------------------------------------------------
 Local $__gStcInitSectionSuccess = True ; may set to false in one of the herein called init section AS
     
    If $__gStcInitSectionSuccess  Then  
         
   ;---------<[ Auto generated WFE debug prefix section!  ]>------
   _StcVarSysResetValidation()
   $AsLastResultValue = $AsResultValue
   $AsLastResultInfo  = $AsResultInfo
   $AsResultValue = 0
   $AsResultInfo  = "no Info"
   $g_LastAction = "Activity Parameters"
   
     
   
   _DbgSetCurrentLevel( 2 )
   OnPrefixCodeExecuted( "e3dc6dd8-63e2-4ab2-a20f-e0d03e8813ef", "Activity_Parameters", False, "EhNormal", @ScriptLineNumber)
   If True Then
   $LogfileIdent = 2 
   $TransStep = ("Activity Parameters")
   Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
   $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
   ;---------<[ End of debug prefix section!  ]>------------------
   
   ;-----------------------------------------------------------------------
   ;## Start of Activity Parameter Definitions: Activity Parameters;
   ;-----------------------------------------------------------------------
   Local $__AcitivtyParameter_Path = StcGetLogFileFolder() & "\InputActivityParameters.json"
   Local $__AcitivtyParameter_Success = __StcInitInParameters($__AcitivtyParameter_Path, "e3dc6dd8-63e2-4ab2-a20f-e0d03e8813ef", @ScriptLineNumber, "Activity Parameters"    ) 
   Local $__AcitivtyParameter_Value ; the last retrieved value as it is used within the variable system. Intrinic is as it is, complex is Jason
   Local $__ActivityParameter_Display ; the value i an always readable format.
   
   If $__AcitivtyParameter_Success Then
   Local $__AcitivtyParameter_ReadSuccess = True;
      ; List of in variables 
      Local $__Success = __StcRpaGetActivityParameterValue("candownloadfile", 2, $__AcitivtyParameter_Value, $__ActivityParameter_Display, "{""Magic"":""$__ServiceTraceVariable__$"",""Content"":{""Type"":2,""BoolValue"":false},""Name"":""candownloadfile"",""Id"":""00000000-0000-0000-0000-000000000000"",""Access"":""RW"",""Tags"":null}", "e3dc6dd8-63e2-4ab2-a20f-e0d03e8813ef", @ScriptLineNumber, "Activity Parameters"   )  
      If Not $__Success Then $__AcitivtyParameter_ReadSuccess = False
      Global $Activity_Parameters_candownloadfile = $__AcitivtyParameter_Value
      Local $__Success = __StcRpaGetActivityParameterValue("canlogin", 2, $__AcitivtyParameter_Value, $__ActivityParameter_Display, "{""Magic"":""$__ServiceTraceVariable__$"",""Content"":{""Type"":2,""BoolValue"":false},""Name"":""canlogin"",""Id"":""00000000-0000-0000-0000-000000000000"",""Access"":""RW"",""Tags"":null}", "e3dc6dd8-63e2-4ab2-a20f-e0d03e8813ef", @ScriptLineNumber, "Activity Parameters"   )  
      If Not $__Success Then $__AcitivtyParameter_ReadSuccess = False
      Global $Activity_Parameters_canlogin = $__AcitivtyParameter_Value
      Local $__Success = __StcRpaGetActivityParameterValue("chrome_start", 12, $__AcitivtyParameter_Value, $__ActivityParameter_Display, "{""Magic"":""$__ServiceTraceVariable__$"",""Content"":{""Type"":12,""Id"":""00000000-0000-0000-0000-000000000000""},""Name"":""chrome_start"",""Id"":""00000000-0000-0000-0000-000000000000"",""Access"":""RW"",""Tags"":null}", "e3dc6dd8-63e2-4ab2-a20f-e0d03e8813ef", @ScriptLineNumber, "Activity Parameters"   )  
      If Not $__Success Then $__AcitivtyParameter_ReadSuccess = False
      Global $Activity_Parameters_chrome_start = $__AcitivtyParameter_Value
   If Not $__AcitivtyParameter_ReadSuccess then  $__gStcInitSectionSuccess = False  ; set global error at init flag!
   
   
   ; Register process out variables:
   __StcRpaRegisterOutParams( "Activity_Parameters_candownloadfile", "candownloadfile" )
   Global $Activity_Parameters_candownloadfile_Changed = False
   __StcRpaRegisterOutParams( "Activity_Parameters_canlogin", "canlogin" )
   Global $Activity_Parameters_canlogin_Changed = False
   __StcRpaRegisterOutParams( "Activity_Parameters_chrome_start", "chrome_start" )
   Global $Activity_Parameters_chrome_start_Changed = False
   Else
      $__gStcInitSectionSuccess=False  ; set global error at init flag!
   Endif
   
   $Run = CheckErrorHandling(1, $__AcitivtyParameter_Success ? 1 : -1 , "e3dc6dd8-63e2-4ab2-a20f-e0d03e8813ef", @ScriptLineNumber, "Activity Parameters"  ) 
   
   
   ;-----------------------------------------------------------------------
   ;## End of Activity Parameter Definitions: Activity Parameters;
   ;-----------------------------------------------------------------------
   
   
   EndIf  
    
   ;---------<[ End of debug suffix section!  ]>------------------
 
    EndIf
    OnEndOfInitSectionItem( "e3dc6dd8-63e2-4ab2-a20f-e0d03e8813ef", true )
        
    If $__gStcInitSectionSuccess  Then  
         
   ;---------<[ Auto generated WFE debug prefix section!  ]>------
   _StcVarSysResetValidation()
   $AsLastResultValue = $AsResultValue
   $AsLastResultInfo  = $AsResultInfo
   $AsResultValue = 0
   $AsResultInfo  = "no Info"
   $g_LastAction = "Pattern Gallery"
   
     
   
   _DbgSetCurrentLevel( 2 )
   OnPrefixCodeExecuted( "8ae8bb22-6e70-4714-bf5e-c134b2e8c611", "Pattern_Gallery", True, "EhNormal", @ScriptLineNumber)
   If _StcVarSysValidateVarReference( "Pattern_Gallery", "8ae8bb22-6e70-4714-bf5e-c134b2e8c611", @ScriptLineNumber, "EhNormal" ) Then
   $LogfileIdent = 2 
   $TransStep = ("Pattern Gallery")
   Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
   $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
   ;---------<[ End of debug prefix section!  ]>------------------
   
   ;-----------------------------------------------------------------------
   ;## Start of transaction step: Pattern Gallery;
   ;-----------------------------------------------------------------------
   $ErrorHandling = 1
   
   	
   
   ;-----------------------------------------------------------------------
   ;## End of transaction step: Pattern Gallery;
   ;-----------------------------------------------------------------------
   
   
   EndIf  
    
   ;---------<[ End of debug suffix section!  ]>------------------
 
    EndIf
    OnEndOfInitSectionItem( "8ae8bb22-6e70-4714-bf5e-c134b2e8c611", true )
        
    If $__gStcInitSectionSuccess  Then  
         
   ;---------<[ Auto generated WFE debug prefix section!  ]>------
   _StcVarSysResetValidation()
   $AsLastResultValue = $AsResultValue
   $AsLastResultInfo  = $AsResultInfo
   $AsResultValue = 0
   $AsResultInfo  = "no Info"
   $g_LastAction = "Settings"
   
   $OutboundVar_BasePathOut = Default 
     
   Global $AutoProp_BasePath = "%temp%", $AutoProp_BasePath_HasVarMapping = False 
   Global $AutoProp_RemoveBasePathSubfolderOnExit = True, $AutoProp_RemoveBasePathSubfolderOnExit_HasVarMapping = False   
   Global $AutoProp_GenerateSubFolder = True, $AutoProp_GenerateSubFolder_HasVarMapping = False   
   Global $AutoProp_UseAllowedPathsLimitation = False, $AutoProp_UseAllowedPathsLimitation_HasVarMapping = False   
   Global $AutoProp_ProxySettingAsInt = 0, $AutoProp_ProxySettingAsInt_HasVarMapping = False   
   Global $AutoProp_IsUseProxyAuthChecked = False, $AutoProp_IsUseProxyAuthChecked_HasVarMapping = False   
   Global $AutoProp_ProxyUrl = "", $AutoProp_ProxyUrl_HasVarMapping = False 
   Global $AutoProp_ProxyAccount = "{""Magic"":""$__ServiceTraceVariable__$"",""Content"":{""Type"":8,""UserName"":"""",""Token"":"""",""Password"":"""",""CryptUser"":"""",""CryptPassword"":""""},""Name"":""Name"",""Id"":""fba5cd3c-0048-4792-97f2-30292c6763a8"",""Access"":""RW"",""Tags"":null}", $AutoProp_ProxyAccount_HasVarMapping = False   
   Global $AutoProp_ProxyAccountAsString = "{""Magic"":""$__ServiceTraceVariable__$"",""Content"":{""Type"":8,""UserName"":"""",""Token"":"""",""Password"":"""",""CryptUser"":"""",""CryptPassword"":""""},""Name"":""Name"",""Id"":""fba5cd3c-0048-4792-97f2-30292c6763a8"",""Access"":""RW"",""Tags"":null}", $AutoProp_ProxyAccountAsString_HasVarMapping = False 
   
   _DbgSetCurrentLevel( 2 )
   OnPrefixCodeExecuted( "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", "Settings", True, "EhNormal", @ScriptLineNumber)
   If _StcVarSysValidateVarReference( "Settings", "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", @ScriptLineNumber, "EhNormal" ) Then
   $LogfileIdent = 2 
   $TransStep = ("Settings")
   Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
   $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
   ;---------<[ End of debug prefix section!  ]>------------------
   
   ;-----------------------------------------------------------------------
   ;## Start of transaction step: Settings;
   ;-----------------------------------------------------------------------
   $__gStcRemoveBasePathSubfolderOnExit = $AutoProp_RemoveBasePathSubfolderOnExit
   $translatedBasePath = TranslateText($AutoProp_BasePath)
   
   ;Handle run-sub folder generation & removal
   if $AutoProp_GenerateSubFolder then 
   $OutboundVar_BasePathOut = $translatedBasePath & "\" & $StcRunGuid & "\"
   ActionStepFeedbackEx("Workflow Settings","Action","8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", "Info", "An additional subfolder: " & $StcRunGuid &" will be generated for the current workflow run.",0)
   _NgCoreLogAnnotationText( "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", "An additional subfolder: " & $StcRunGuid &" was generated for the current workflow run.")
   If True then
   ActionStepFeedbackEx("Workflow Settings","Action","8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", "Info", "Removing Base Path subfolder on exit is enabled.",0)
   _NgCoreLogAnnotationText( "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", "Removing Base Path subfolder on exit was enabled.")
   else
   ActionStepFeedbackEx("Workflow Settings","Action","8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", "Info", "Removing Base Path subfolder on exit is disabled.",0)
   EndIf
   
   else
   
   $OutboundVar_BasePathOut = $translatedBasePath & "\"
   
   EndIf
   
   
   
   ;Base Path registration
   If FileExists($translatedBasePath) Then
   
   	StcSetBasePathFolder($OutboundVar_BasePathOut)
   
   	Local $p_ResultText
   	Local $__Success = True ; local check for NgCore Call success
   	$__Success = __StcNgRegisterBasePath($OutboundVar_BasePathOut, $p_ResultText, "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d",  @ScriptLineNumber, "Settings")
   
   	Local $__BasePathFeedbackType = $__Success ? "Info" : "Error"
   	Local $__BasePathMessage = $__Success ? "StwsBasePath registration for the current run succeeded: '" & $OutboundVar_BasePathOut & "'" _
   			  : ("StwsBasePath registration for the current run failed. Error details: " & $p_ResultText)
   
   	ActionStepFeedbackEx("Workflow Settings","Action","8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", $__BasePathFeedbackType, $__BasePathMessage, 0)
   	_NgCoreLogAnnotationText( "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", $__BasePathMessage)
   
   	;Allowed paths registration
   	
   	If $__Success Then
   					__DisableAllowedPathsLimitation("8ab9ef3a-3cc0-4b0b-9735-15341e5e041d",  @ScriptLineNumber, "Settings")
   			writelog("Allowed Path Limitation for File Operations is disabled")
   			ActionStepFeedbackEx("Workflow Settings","Action","8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", "Info", "Allowed Path Limitation for File Operations is disabled.",0)
   		
   		$__Success = __StcNgRegisterProxySettings($AutoProp_ProxySettingAsInt, $AutoProp_ProxyUrl, $AutoProp_IsUseProxyAuthChecked, $AutoProp_ProxyAccount, "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d",  @ScriptLineNumber, "Settings")
   	EndIf
   
   	; if one of the allowed pahts calls failed, we go to error state, but only if error handling is enabled:
   	$__gStcInitSectionSuccess = CheckErrorHandling(1, $__Success ? 1 : -1 , "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", @ScriptLineNumber, "Settings" ) < 0 ? False : True
   	$__gStcGenerateSubBasePathFolder = $AutoProp_GenerateSubFolder
   
   	$Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", @ScriptLineNumber, "Settings"  ) 
   
   Else
   
   	ActionStepFeedbackEx("Workflow Settings","Action","8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", "Error", "Base path does not exist: '" & $translatedBasePath & "'", 0)
   	_NgCoreLogAnnotationText( "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", "Base path does not exist: '" & $translatedBasePath & "'")
   	$__gStcInitSectionSuccess = False
   	$Run = -1;
   
   EndIf
   
   
   ;-----------------------------------------------------------------------
   ;## End of transaction step: Settings;
   ;-----------------------------------------------------------------------
   
   
   EndIf  
     Global $Settings_BasePath = $OutboundVar_BasePathOut  ; declare variable source. Will be referenced by other action steps 
   
   ;---------<[ End of debug suffix section!  ]>------------------
 
    EndIf
    OnEndOfInitSectionItem( "8ab9ef3a-3cc0-4b0b-9735-15341e5e041d", true )
       
 OnEndOfInitSection( "8a31be49-e11a-4ab0-a659-2897bab04f39", true )
 ; Now it's save to enable the protector, because it may use variables defined by SBVs!
 StcProtectorEnable()
 ;-----------------------------------------------------------------------
 ;# End of Initialization Section: Workflow Initialization;
 ;-----------------------------------------------------------------------
  

   
 ;----------------<-----------------------------------------------------------
 ;--------------<
 ;------------<   Measurement: <Activity Workflow>
 ;--------------< 
 ;----------------<-----------------------------------------------------------
    Global $MeasurementName = "Activity Workflow"
    Global $Pass_Activity_Workflow
    Global $UsedErrorCycles = 0
    Global $g_LastControlBlockLevelName = ""
    Global $g_ControlBlockLevelName = "MainMeasurement"
    Global $PrepareCodeSuccess = True
    Global $MeasurementOverallTimeTimer = TimerStart()
    
    ; Set Default current measurement iteration!
    $enter = 1
 
    ; set default uuid as default uuid for actioin feedback:
    ActionFeedbackSetDefaultUuid("09353668-c73d-4971-a5dc-99224127f16d")
    ; Inform user about the disabled STC-Guard. In case of Design Mode run, the Guard may also disabled!
    If $StcDisableGuard Then ActionStepFeedbackEx( "StcGuardMode", "Action", default, "Warning", "The STC Guard is disabled by project setting.!", @ScriptLineNumber )
 
    
    StcSetGeneralTimeout( 30, True ) ;called internally!
    $g_StcMaxConfiguredExecutionTries = 1   ; internal STC funclib used value
    Local $errorcycles = $g_StcMaxConfiguredExecutionTries              ;  old legacy name, may removed in the future!
    ActionStepFeedbackEx( "Activity Workflow", "Workflow", "09353668-c73d-4971-a5dc-99224127f16d", "Info", "///-[ Workflow: 'Activity Workflow' started ]-\\\", @ScriptLineNumber ) 
    If StcIsDesignModeActive()  Then
       If $g_StcMaxConfiguredExecutionTries <> 1 Then
         $g_StcMaxConfiguredExecutionTries = 1
         ActionStepFeedbackEx( "Activity Workflow", "Workflow", "09353668-c73d-4971-a5dc-99224127f16d", "Warning", "The workflow was started from WorkflowEditor in Design mode. Retries reduced to 1.", @ScriptLineNumber ) 
       EndIf
    EndIf
    Local $retrydelay = 60
 
    OnMeasurementStart( $MeasurementName, "09353668-c73d-4971-a5dc-99224127f16d" )
    
 
    
    ;<<<<<<<<<<<<<       P r e p a r e  -- S e c t i o n    >>>>>>>>>>>>>>>>>>>>
    ; Some action steps may have prepare code which must be executed before the measurement starts.
 
 
    Do
       Local  $x = 0
       $Run = 1  ; don't make that local or global !!!
 
       ; if prepare code failed, so do abort workflow before it was started!
       If Not $PrepareCodeSuccess Then $Run = -1
         
       ;---------------------------------------------------------------------------
       ; Applications values
       ;---------------------------------------------------------------------------
       
             
       _StcTraDaHandleErrors() ; check here if TraceData Bridge error has occurred! If so script will be terminated!
 
       
       ;---------------------------------------------------------------------------
       ; Check if one of the InitSection AS has failed. If so, write action step feadback a terminate workflow run!
       If Not $__gStcInitSectionSuccess  Then
         ActionStepFeedbackEx( "Activity Workflow", "Workflow", "09353668-c73d-4971-a5dc-99224127f16d", "Error", "One of the steps in the initialize section has failed, so further execution is not possible!", @ScriptLineNumber ) 
         $Run = -1 ; abort further execution!
       EndIf
 
       ;---------------------------------------------------------------------------
       ; Start of Workflow
       ;---------------------------------------------------------------------------
       $Errortext = ""
   
       If $run > 0 AND NOT OnCheckAbortState() Then
          OnMeasurementBlockStart("Transaction", "7d28f553-ca82-4d69-b08a-0883f68b2ba8", 1, "Transaction")
            
   ;---------<[ Auto generated WFE debug prefix section!  ]>------
   _StcVarSysResetValidation()
   $AsLastResultValue = $AsResultValue
   $AsLastResultInfo  = $AsResultInfo
   $AsResultValue = 0
   $AsResultInfo  = "no Info"
   $g_LastAction = "Transaction"
   
     
   
   _DbgSetCurrentLevel( 2 )
   OnPrefixCodeExecuted( "7d28f553-ca82-4d69-b08a-0883f68b2ba8", "Transaction", False, "$Dbg.Item.ActivityErrorHandling", @ScriptLineNumber)
   If True Then
   $LogfileIdent = 2 
   $TransStep = ("Transaction")
   Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
   $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
   ;---------<[ End of debug prefix section!  ]>------------------
   
   ;---------------------------------------------------------------------------
   ;## Start of Transaction: Transaction;
   ;---------------------------------------------------------------------------
   
   OnTransactionStart("Transaction", "7d28f553-ca82-4d69-b08a-0883f68b2ba8")
   $g_LastControlBlockLevelName = $g_ControlBlockLevelName
   $g_ControlBlockLevelName = "Transaction"
   
   $__gStcTransactionSqx += 1
   $g_TransAction = "Transaction" 
   $TransStep = "Transaction"
   
      ; Actionstep: 'Window set State' is  disabled . No code generated!
   
   If CheckBlockIteration() Then
      OnActionStart("Web Session (Chrome)", "1a563d2d-372b-4223-96a2-77ad2111ea66", 2, "Web Session (Chrome)")
         
      ;---------<[ Auto generated WFE debug prefix section!  ]>------
      _StcVarSysResetValidation()
      $AsLastResultValue = $AsResultValue
      $AsLastResultInfo  = $AsResultInfo
      $AsResultValue = 0
      $AsResultInfo  = "no Info"
      $g_LastAction = "Web Session (Chrome)"
      
        
      Global $AutoProp_ExtraArguments = "--user-data-dir=C:\Users\RPA\AppData\Local\Google\Chrome\User Data", $AutoProp_ExtraArguments_HasVarMapping = False 
      Global $AutoProp_UserAgentString = "", $AutoProp_UserAgentString_HasVarMapping = False 
      Global $AutoProp_EnableVerboseLogging = False, $AutoProp_EnableVerboseLogging_HasVarMapping = False   
      Global $AutoProp_DisableSupportForUnpackedExtensions = False, $AutoProp_DisableSupportForUnpackedExtensions_HasVarMapping = False   
      Global $AutoProp_WebSessionId = _StcVarSysResolveVarReference( "Activity_Parameters_chrome_start"), $AutoProp_WebSessionId_HasVarMapping = True 
      Global $AutoProp_StartUpURL = "https://flexport.looker.com/dashboards/10163", $AutoProp_StartUpURL_HasVarMapping = False 
      Global $AutoProp_StartMaximized = True, $AutoProp_StartMaximized_HasVarMapping = False   
      Global $AutoProp_BrowserMismatchAsInt = 0, $AutoProp_BrowserMismatchAsInt_HasVarMapping = False   
      Global $AutoProp_KeepOutMouse = True, $AutoProp_KeepOutMouse_HasVarMapping = False   
      Global $AutoProp_RepeatMouseKeepOut = False, $AutoProp_RepeatMouseKeepOut_HasVarMapping = False   
      Global $AutoProp_HideCommandPrompt = True, $AutoProp_HideCommandPrompt_HasVarMapping = False   
      Global $AutoProp_ScriptTimeout = 5, $AutoProp_ScriptTimeout_HasVarMapping = False   
      Global $AutoProp_WebDriverTimeoutInSeconds = 60, $AutoProp_WebDriverTimeoutInSeconds_HasVarMapping = False   
      Global $AutoProp_WebdriverStartRetries = 0, $AutoProp_WebdriverStartRetries_HasVarMapping = False   
      Global $AutoProp_MouseParkingPositionValue = 1, $AutoProp_MouseParkingPositionValue_HasVarMapping = False   
      
      _DbgSetCurrentLevel( 3 )
      OnPrefixCodeExecuted( "1a563d2d-372b-4223-96a2-77ad2111ea66", "Web_Session_28Chrome29", True, "EhNormal", @ScriptLineNumber)
      If _StcVarSysValidateVarReference( "Web_Session_28Chrome29", "1a563d2d-372b-4223-96a2-77ad2111ea66", @ScriptLineNumber, "EhNormal" ) Then
      $LogfileIdent = 3 
      $TransStep = ("Web Session (Chrome)")
      Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
      $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
      ;---------<[ End of debug prefix section!  ]>------------------
                   
      ;-----------------------------------------------------------------------
      ;### Start of transaction step: Web Session (Chrome);
      ;-----------------------------------------------------------------------
      $ErrorHandling = 1
      $ActiveBrowserHandle = -1 ; Use this variable within External Scripts!
      If $run > 0 Then 
           
         Local $__AdditonalCmdLine = ""
         Local $__DebugLevel = 0
         Local $__LogFilePath = ""
         Local $__WebDriverOptions = ""
         Local $__ProfileName = ""
         Local $__VersionCheckFailed = false
         Local $__WebdriverTimeout = 100
      
         ; First try to register remote websession host:
         Local $__WebSessionConnectionId = StcInitializeWebSessionController("Servicetrace.WebSessionHost-1.3.0.0.dll")
      
         ; further step make only sense on a valied web session connection!
         If $__WebSessionConnectionId = "" Then 
             ActionStepFeedbackEx("Web Session (Chrome)", "WebAutomation", "1a563d2d-372b-4223-96a2-77ad2111ea66", "Error", "Not able to aquire a valid websession controller connection.", @ScriptLineNumber)
             $run = -1
         Else
             $__AdditonalCmdLine = $AutoProp_ExtraArguments
      
             If StringLen($AutoProp_UserAgentString) > 0 Then 
                If StringLen($__AdditonalCmdLine) > 0 Then $__AdditonalCmdLine &= ";" 
                $__AdditonalCmdLine &= """--user-agent=" & $AutoProp_UserAgentString & """;"
             EndIf
      
             ; Chrome accepts only a path w/o a own logfile name:
             If $__LogFilePath = "" then $__LogFilePath = """" & StcGetLogFileFolder() & "stc_chrome_webdriver.log"""   
         
             If $AutoProp_EnableVerboseLogging Then  
                  If $__WebDriverOptions <> "" Then $__WebDriverOptions &= ";"
                  $__WebDriverOptions &= "EnableVerboseLogging;bool;true"
             EndIf
             If $AutoProp_HideCommandPrompt Then 
         	    If $__WebDriverOptions <> "" Then $__WebDriverOptions &= ";"
         	    ; add option to disable the command window:   
         	    $__WebDriverOptions &= "HideCommandPromptWindow;bool;true"   
             EndIf	
      
      
             $__DriverName = "Chrome" 
             $__WebdriverTimeout = $AutoProp_WebDriverTimeoutInSeconds
      
         
             If Not $IsChromeInstalled Then 
                ActionStepFeedbackEx("Web Session (Chrome)", "WebAutomation", "1a563d2d-372b-4223-96a2-77ad2111ea66", "Error", "Create chrome web session failed because the chrome browser is not installed.", @ScriptLineNumber)
                $Run = -1  
             EndIf
      
             If Not $__VersionCheckFailed And $IsChromeInstalled  Then
                 ; Evaluate contained inline and environement variables:
                 $__ProfileName = TranslateText($__ProfileName )
                 $__AdditonalCmdLine = TranslateText($__AdditonalCmdLine )
                 $__DebugLevel = TranslateText($__DebugLevel )
                 $__LogFilePath = TranslateText($__LogFilePath )
                 $__WebDriverOptions = TranslateText($__WebDriverOptions )
      
                 writelog( $__DriverName & "-Webdriver arguments: " & $__AdditonalCmdLine )
                 writelog( $__DriverName & "-Webdriver options string: " & $__WebDriverOptions )
                 writelog( $__DriverName & "-Webdriver debug path: " & $__LogFilePath )
                 writelog( $__DriverName & "-Webdriver loglevel: " & $__DebugLevel )
      
                 Local $WaErrorCode = $SWE_OK
                 Local $__URL =  TranslateText($AutoProp_StartUpURL, False, False)
         
                 Local $p_WsId, $p_Result
      
                 Local $__Success = __StcNgWaCreateChromeSession( $AutoProp_WebSessionId, _
                                                                   $__URL, _
                                                                  $__AdditonalCmdLine, _
                                                                  $__DebugLevel, _
                                                                  $__LogFilePath, _
                                                                  $__WebDriverOptions, _
                                                                  $__ProfileName, _
                                                                  $__WebdriverTimeout, _
                                                                  $AutoProp_DisableSupportForUnpackedExtensions, _
                                                                  $AutoProp_ScriptTimeout, _
                                                                  $AutoProp_WebdriverStartRetries, _
                                                                  $AutoProp_BrowserMismatchAsInt, _
                                                                  $__WebSessionConnectionId, _
                                                                  $p_WsId, _
                                                                  $p_Result, _
                                                                 "1a563d2d-372b-4223-96a2-77ad2111ea66", @ScriptLineNumber, "Web Session (Chrome)")  
      
                 $Web_Session_28Chrome29_52305233 = $p_WsId
      
                 If Not $__Success Then $run = -1
              
                                                                                                                                   If $__Success Then
                         If $AutoProp_WebSessionId_HasVarMapping Then
                             $Activity_Parameters_chrome_start = $p_Result
      
                                                    If IsDeclared( "Activity_Parameters_chrome_start" & "_Changed") Then Assign( "Activity_Parameters_chrome_start" & "_Changed", "True", 4)
      
                         EndIf
                     EndIf
                                                                                                                                                                                                                                                        
                If @error <> 0 Then $WaErrorCode = @error
      
             Else  
                 $WaErrorCode = $WaErrNotSupportedVersion
             EndIf
      
             If $WaErrorCode = $SWE_OK Then
                Local $__Pos =  _GetFreeDesktopArea()
                Local $p_Success = true;
                If $AutoProp_StartMaximized Then __StcNgWaSetBrowserWindowSize($Web_Session_28Chrome29_52305233, $__Pos[0],$__Pos[1], $__Pos[2],$__Pos[3], _
                                                                              $StcWebSessionConnectionId, _
                                                                              $p_Success, "1a563d2d-372b-4223-96a2-77ad2111ea66", @ScriptLineNumber, "Web Session (Chrome)" )
                If @error <> 0 Then $WaErrorCode = @error
            EndIf
      
            If $AutoProp_KeepOutMouse Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
      
            If $WaErrorCode = $SWE_OK Then
              $ActiveBrowserHandle = $Web_Session_28Chrome29_52305233
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Click Web Element", "743ef171-c78b-4b3a-aae6-43d869804dcb", 3, "Click Web Element")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Click Web Element"
          
            
          Global $AutoProp_ClickTypeId = 0, $AutoProp_ClickTypeId_HasVarMapping = False   
          Global $AutoProp_FindString = "//strong[1]/a[1]", $AutoProp_FindString_HasVarMapping = False 
          Global $AutoProp_WindowTitle = "Log in", $AutoProp_WindowTitle_HasVarMapping = False 
          Global $AutoProp_FrameHierachy = "", $AutoProp_FrameHierachy_HasVarMapping = False 
          Global $AutoProp_MaxFrameHierachy = "", $AutoProp_MaxFrameHierachy_HasVarMapping = False 
          Global $AutoProp_WindowTitleRegEx = False, $AutoProp_WindowTitleRegEx_HasVarMapping = False   
          Global $AutoProp_UseWindowtitle = False, $AutoProp_UseWindowtitle_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "743ef171-c78b-4b3a-aae6-43d869804dcb", "Click_Web_Element", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Click_Web_Element", "743ef171-c78b-4b3a-aae6-43d869804dcb", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Click Web Element")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
           
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Click Web Element;
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          
          If $Run > 0 then
              If $AutoProp_UseGeneralTimeout Then
                 $win_wait_timeout = StcGetGeneralTimeout()
              Else
                 $win_wait_timeout = $AutoProp_Timeout
              EndIf
              if $AutoProp_UseWindowtitle Then
                 Local $WindowTitle = $AutoProp_WindowTitle
              Else
                 Local $WindowTitle = ""
              EndIf
          
             Local $__Success = __StcNgWaClickAction( $Web_Session_28Chrome29_52305233, _
                                                    $AutoProp_FindString, _
                                                    $AutoProp_ClickTypeId, _
                                                    $win_wait_timeout, _
                                                    $WindowTitle, _
                                                    $AutoProp_FrameHierachy, _
                                                    $AutoProp_MaxFrameHierachy, _
                                                    $AutoProp_WindowTitleRegEx, _
                                                    $StcWebSessionConnectionId, _
                                                    "743ef171-c78b-4b3a-aae6-43d869804dcb",  @ScriptLineNumber, "Click Web Element")
          
             $Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "743ef171-c78b-4b3a-aae6-43d869804dcb", @ScriptLineNumber, "Click Web Element"  ) 
          
             ;~  $Run = StcAsWaClickAction( $Web_Session_28Chrome29_52305233,  $AutoProp_FindString, $AutoProp_ClickTypeId, 0,0, $win_wait_timeout, $WindowTitle, $AutoProp_FrameHierachy, $AutoProp_MaxFrameHierachy, $AutoProp_WindowTitleRegEx,"743ef171-c78b-4b3a-aae6-43d869804dcb", @ScriptLineNumber, "Click Web Element"   )
             ;~  $Run = CheckErrorHandling($ErrorHandling, $Run, "743ef171-c78b-4b3a-aae6-43d869804dcb", @ScriptLineNumber, "Click Web Element" )
          EndIf
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Click Web Element;
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Click Web Element", $run, "743ef171-c78b-4b3a-aae6-43d869804dcb", 3, "Click Web Element")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Keystrokes to Web Element", "58fe8e8f-228a-478e-8116-13a2b657bd16", 3, "Keystrokes to Web Element")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Keystrokes to Web Element"
          
            
          Global $AutoProp_Text = "lead_analyst_supply_chain@flexport.com", $AutoProp_Text_HasVarMapping = False 
          Global $AutoProp_FindString = "//div[1]/div[1]/input[1]", $AutoProp_FindString_HasVarMapping = False 
          Global $AutoProp_WindowTitle = "Log in", $AutoProp_WindowTitle_HasVarMapping = False 
          Global $AutoProp_FrameHierachy = "", $AutoProp_FrameHierachy_HasVarMapping = False 
          Global $AutoProp_MaxFrameHierachy = "", $AutoProp_MaxFrameHierachy_HasVarMapping = False 
          Global $AutoProp_WindowTitleRegEx = False, $AutoProp_WindowTitleRegEx_HasVarMapping = False   
          Global $AutoProp_UseWindowtitle = False, $AutoProp_UseWindowtitle_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "58fe8e8f-228a-478e-8116-13a2b657bd16", "Keystrokes_to_Web_Element", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Keystrokes_to_Web_Element", "58fe8e8f-228a-478e-8116-13a2b657bd16", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Keystrokes to Web Element")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
           
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Keystrokes to Web Element;
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          
          If $Run > 0 then
              If $AutoProp_UseGeneralTimeout Then
                 $win_wait_timeout = StcGetGeneralTimeout()
              Else
                 $win_wait_timeout = $AutoProp_Timeout
              EndIf
              if $AutoProp_UseWindowtitle Then
                 Local $WindowTitle = $AutoProp_WindowTitle
              Else
                 Local $WindowTitle = ""
              EndIf
          
              Local $__Success = __StcNgWaKeyStroke( $Web_Session_28Chrome29_52305233, _
                                                       $AutoProp_FindString, _
                                                       TranslateText( $AutoProp_Text), _
                                                       $win_wait_timeout, _
                                                       $WindowTitle, _
                                                       $AutoProp_FrameHierachy, _
                                                       $AutoProp_MaxFrameHierachy, _
                                                       $AutoProp_WindowTitleRegEx, _
                                                       $StcWebSessionConnectionId, _
                                                       $p_Success, _
                                                      "58fe8e8f-228a-478e-8116-13a2b657bd16",  @ScriptLineNumber, "Keystrokes to Web Element")
                                                      
              $Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "58fe8e8f-228a-478e-8116-13a2b657bd16", @ScriptLineNumber, "Keystrokes to Web Element"  ) 
          
             ;~  $Run = StcAsWaKeystroke( $Web_Session_28Chrome29_52305233,  $AutoProp_FindString, TranslateText( $AutoProp_Text), $win_wait_timeout, $WindowTitle, $AutoProp_FrameHierachy, $AutoProp_MaxFrameHierachy, $AutoProp_WindowTitleRegEx, "58fe8e8f-228a-478e-8116-13a2b657bd16", @ScriptLineNumber, "Keystrokes to Web Element"   )
             ;~  $Run = CheckErrorHandling($ErrorHandling, $Run, "58fe8e8f-228a-478e-8116-13a2b657bd16", @ScriptLineNumber, "Keystrokes to Web Element" )
          EndIf
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Keystrokes to Web Element;
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Keystrokes to Web Element", $run, "58fe8e8f-228a-478e-8116-13a2b657bd16", 3, "Keystrokes to Web Element")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Keystrokes to Web Element1", "e4052aea-ab8d-4055-b414-b48972b5857e", 3, "Keystrokes to Web Element")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Keystrokes to Web Element1"
          
            
          Global $AutoProp_Text = "xhAcT6nXY7^U", $AutoProp_Text_HasVarMapping = False 
          Global $AutoProp_FindString = "//div[2]/div[1]/input[1]", $AutoProp_FindString_HasVarMapping = False 
          Global $AutoProp_WindowTitle = "Log in", $AutoProp_WindowTitle_HasVarMapping = False 
          Global $AutoProp_FrameHierachy = "", $AutoProp_FrameHierachy_HasVarMapping = False 
          Global $AutoProp_MaxFrameHierachy = "", $AutoProp_MaxFrameHierachy_HasVarMapping = False 
          Global $AutoProp_WindowTitleRegEx = False, $AutoProp_WindowTitleRegEx_HasVarMapping = False   
          Global $AutoProp_UseWindowtitle = False, $AutoProp_UseWindowtitle_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "e4052aea-ab8d-4055-b414-b48972b5857e", "Keystrokes_to_Web_Element1", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Keystrokes_to_Web_Element1", "e4052aea-ab8d-4055-b414-b48972b5857e", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Keystrokes to Web Element1")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
           
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Keystrokes to Web Element1;
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          
          If $Run > 0 then
              If $AutoProp_UseGeneralTimeout Then
                 $win_wait_timeout = StcGetGeneralTimeout()
              Else
                 $win_wait_timeout = $AutoProp_Timeout
              EndIf
              if $AutoProp_UseWindowtitle Then
                 Local $WindowTitle = $AutoProp_WindowTitle
              Else
                 Local $WindowTitle = ""
              EndIf
          
              Local $__Success = __StcNgWaKeyStroke( $Web_Session_28Chrome29_52305233, _
                                                       $AutoProp_FindString, _
                                                       TranslateText( $AutoProp_Text), _
                                                       $win_wait_timeout, _
                                                       $WindowTitle, _
                                                       $AutoProp_FrameHierachy, _
                                                       $AutoProp_MaxFrameHierachy, _
                                                       $AutoProp_WindowTitleRegEx, _
                                                       $StcWebSessionConnectionId, _
                                                       $p_Success, _
                                                      "e4052aea-ab8d-4055-b414-b48972b5857e",  @ScriptLineNumber, "Keystrokes to Web Element1")
                                                      
              $Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "e4052aea-ab8d-4055-b414-b48972b5857e", @ScriptLineNumber, "Keystrokes to Web Element1"  ) 
          
             ;~  $Run = StcAsWaKeystroke( $Web_Session_28Chrome29_52305233,  $AutoProp_FindString, TranslateText( $AutoProp_Text), $win_wait_timeout, $WindowTitle, $AutoProp_FrameHierachy, $AutoProp_MaxFrameHierachy, $AutoProp_WindowTitleRegEx, "e4052aea-ab8d-4055-b414-b48972b5857e", @ScriptLineNumber, "Keystrokes to Web Element1"   )
             ;~  $Run = CheckErrorHandling($ErrorHandling, $Run, "e4052aea-ab8d-4055-b414-b48972b5857e", @ScriptLineNumber, "Keystrokes to Web Element1" )
          EndIf
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Keystrokes to Web Element1;
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Keystrokes to Web Element1", $run, "e4052aea-ab8d-4055-b414-b48972b5857e", 3, "Keystrokes to Web Element")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Image Search1", "aa5388df-845f-4653-9627-a06c5a39ee90", 3, "Image Search")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Image Search1 (Image Search for Appear)"
          
          $OutboundVar_FindCoordinate = Default 
            
          Global $AutoProp_PatternImageFileName = "IMGP_000008.bmp", $AutoProp_PatternImageFileName_HasVarMapping = False 
          Global $AutoProp_SearchAreaImageFileName = "IMGS_000007.jpg", $AutoProp_SearchAreaImageFileName_HasVarMapping = False 
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          Global $AutoProp_RelativeToCoordinate = "0;0", $AutoProp_RelativeToCoordinate_HasVarMapping = False   
          Global $AutoProp_IsSearchAreaFullScreen = True, $AutoProp_IsSearchAreaFullScreen_HasVarMapping = False   
          Global $AutoProp_RequiredPercent = 95, $AutoProp_RequiredPercent_HasVarMapping = False   
          Global $AutoProp_EdgeDetectionThreshold = 10, $AutoProp_EdgeDetectionThreshold_HasVarMapping = False   
          Global $AutoProp_HideMouse = False, $AutoProp_HideMouse_HasVarMapping = False   
          Global $AutoProp_WaitForImagePosStabilization = False, $AutoProp_WaitForImagePosStabilization_HasVarMapping = False   
          Global $AutoProp_TimeForImagePosStabilization_ms = 500, $AutoProp_TimeForImagePosStabilization_ms_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_IsLowPerformanceSearch = True, $AutoProp_IsLowPerformanceSearch_HasVarMapping = False   
          Global $AutoProp_InterruptTime = 100, $AutoProp_InterruptTime_HasVarMapping = False   
          Global $AutoProp_PerformanceLimit = 60, $AutoProp_PerformanceLimit_HasVarMapping = False   
          Global $AutoProp_SearchForPictureAppear = True, $AutoProp_SearchForPictureAppear_HasVarMapping = False   
          Global $AutoProp_SearchArea_X = 0, $AutoProp_SearchArea_X_HasVarMapping = False   
          Global $AutoProp_SearchArea_Y = 0, $AutoProp_SearchArea_Y_HasVarMapping = False   
          Global $AutoProp_SearchArea_Width = 1920, $AutoProp_SearchArea_Width_HasVarMapping = False   
          Global $AutoProp_SearchArea_Height = 1080, $AutoProp_SearchArea_Height_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_X = 778, $AutoProp_PatternImageRect_X_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_Y = 556, $AutoProp_PatternImageRect_Y_HasVarMapping = False   
          Global $AutoProp_AlgorithmName = 1, $AutoProp_AlgorithmName_HasVarMapping = False   
          Global $AutoProp_ThresholdOrMaskValue = 10, $AutoProp_ThresholdOrMaskValue_HasVarMapping = False   
          Global $AutoProp_ImageSearchModeId = 0, $AutoProp_ImageSearchModeId_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "aa5388df-845f-4653-9627-a06c5a39ee90", "Image_Search1_28Image_Search_for_Appear29", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Image_Search1_28Image_Search_for_Appear29", "aa5388df-845f-4653-9627-a06c5a39ee90", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Image Search1 (Image Search for Appear)")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of Transaction step: Image Search1 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          If @compiled = TRUE Then
              FileInstall("Images\IMGP_000008.bmp", "IMGP_000008.bmp", 1)
              FileInstall("Images\IMGS_000007.jpg", "IMGS_000007.jpg", 1)
          EndIf
          If $AutoProp_HideMouse then
          	Local $ImgMousePos = MouseGetPos();
          	MouseMove( $HideMousePosX, $HideMousePosY, 0 )
          EndIf
             
          $ErrorHandling = 1
          Local $__FindCoordinate = Default  
          StcImageSearch($AutoProp_PatternImageFileName , $AutoProp_SearchAreaImageFileName , $AutoProp_Timeout , $AutoProp_RelativeToCoordinate, _
                                  $AutoProp_IsSearchAreaFullScreen , $AutoProp_RequiredPercent , $AutoProp_EdgeDetectionThreshold , $AutoProp_HideMouse, _
                                  $AutoProp_WaitForImagePosStabilization , $AutoProp_TimeForImagePosStabilization_ms , $AutoProp_UseGeneralTimeout, _
                                  $AutoProp_IsLowPerformanceSearch , $AutoProp_InterruptTime , $AutoProp_PerformanceLimit , $AutoProp_SearchForPictureAppear, _
                                  $AutoProp_SearchArea_X , $AutoProp_SearchArea_Y , $AutoProp_SearchArea_Width , $AutoProp_SearchArea_Height , $AutoProp_PatternImageRect_X, _
                                  $AutoProp_PatternImageRect_Y , $AutoProp_AlgorithmName , $AutoProp_ThresholdOrMaskValue, _
                                  1920, 1080, 32, _
                                  $__FindCoordinate,"aa5388df-845f-4653-9627-a06c5a39ee90", @ScriptLineNumber, "Image Search1 (Image Search for Appear)")   
          $OutboundVar_FindCoordinate = $__FindCoordinate
          If $AutoProp_HideMouse then MouseMove( $ImgMousePos[0], $ImgMousePos[1], 0 )
          ;-----------------------------------------------------------------------
          ;#### End of Transaction step: Image Search1 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          
          
          EndIf  
            Global $Image_Search1_Find_Coordinate = $OutboundVar_FindCoordinate  ; declare variable source. Will be referenced by other action steps 
          
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Image Search1", $run, "aa5388df-845f-4653-9627-a06c5a39ee90", 3, "Image Search")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Mouse Actions", "ac8619c5-7589-4a0f-9c1a-a14ad8ccfba7", 3, "Mouse Actions")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Mouse Actions (Mouse Actions relative to ""Image Search1"")"
          
            
          Global $AutoProp_RelativeToCoordinate = _StcVarSysResolveVarReference( "Image_Search1_Find_Coordinate"), $AutoProp_RelativeToCoordinate_HasVarMapping = True 
          Global $AutoProp_MouseSpeed = 4, $AutoProp_MouseSpeed_HasVarMapping = False   
          Global $AutoProp_MouseClickDownDelay = 200, $AutoProp_MouseClickDownDelay_HasVarMapping = False   
          Global $AutoProp_MouseClickUpDelay = 10, $AutoProp_MouseClickUpDelay_HasVarMapping = False   
          
               Global $AutoProp_ModifierAndMouseStatus[1] 
                  Global $AutoProp_ClicksCount[1] 
                  Global $AutoProp_MouseActionDelay[1] 
                  Global $AutoProp_IsMouseActionDelayEnabled[1] 
                  Global $AutoProp_ClickPoint_X[1] 
                  Global $AutoProp_ClickPoint_Y[1] 
                  Global $AutoProp_ClickMouseButtonText[1] 
                  Global $AutoProp_MouseModifierText[1] 
                               $AutoProp_ModifierAndMouseStatus[0] = False                   
                      $AutoProp_ClicksCount[0] = 1                       
                      $AutoProp_MouseActionDelay[0] = 500                       
                          $AutoProp_IsMouseActionDelayEnabled[0] = False                   
                      $AutoProp_ClickPoint_X[0] = 157                       
                      $AutoProp_ClickPoint_Y[0] = 28                       
                  $AutoProp_ClickMouseButtonText[0] = "Left"                         
                  $AutoProp_MouseModifierText[0] = "None"                         
            
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "ac8619c5-7589-4a0f-9c1a-a14ad8ccfba7", "Mouse_Actions_28Mouse_Actions_relative_to_22Image_Search12229", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Mouse_Actions_28Mouse_Actions_relative_to_22Image_Search12229", "ac8619c5-7589-4a0f-9c1a-a14ad8ccfba7", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Mouse Actions (Mouse Actions relative to ""Image Search1"")")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Mouse Actions (Mouse Actions relative to ""Image Search1"");
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          Local $zeroPointPositionX = StcCoordinates_X($AutoProp_RelativeToCoordinate) 
          Local $zeroPointPositionY = StcCoordinates_Y($AutoProp_RelativeToCoordinate) 
          If $AutoProp_MouseClickDownDelay <> 10  Then  AutoItSetOption( "MouseClickDownDelay", $AutoProp_MouseClickDownDelay )
          If $AutoProp_MouseClickUpDelay <> 10  Then  AutoItSetOption( "MouseClickDelay", $AutoProp_MouseClickUpDelay )
          
          for $idx = 0 to  UBound( $AutoProp_ClicksCount ) - 1 
              Local $XMouse1 = $zeroPointPositionX + $AutoProp_ClickPoint_X[$idx]
              Local $YMouse1 = $zeroPointPositionY + $AutoProp_ClickPoint_Y[$idx]
          	 Local $mouseActionDelay = 0
          	If $AutoProp_IsMouseActionDelayEnabled[$idx] Then $mouseActionDelay = $Autoprop_MouseActionDelay[$idx]
          
             If $AutoProp_MouseModifierText[$idx] <> "None" Then 
                StcHoldMouseModifierKey($AutoProp_MouseModifierText[$idx])
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "ac8619c5-7589-4a0f-9c1a-a14ad8ccfba7", @ScriptLineNumber, "Mouse Actions (Mouse Actions relative to ""Image Search1"")")
                StcReleaseMouseModifierKey($AutoProp_MouseModifierText[$idx])
             else
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "ac8619c5-7589-4a0f-9c1a-a14ad8ccfba7", @ScriptLineNumber, "Mouse Actions (Mouse Actions relative to ""Image Search1"")")
             EndIf
          Next
          
          If $AutoProp_MouseClickDownDelay <> 10 Then AutoItSetOption( "MouseClickDownDelay", 10)
          If $AutoProp_MouseClickUpDelay <> 10 Then AutoItSetOption( "MouseClickDelay", 10)
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Mouse Actions (Mouse Actions relative to ""Image Search1"");
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Mouse Actions", $run, "ac8619c5-7589-4a0f-9c1a-a14ad8ccfba7", 3, "Mouse Actions")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Image Search", "b46def55-de89-482a-9896-d2f7861b451b", 3, "Image Search")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Image Search (Image Search for Appear)"
          
          $OutboundVar_FindCoordinate = Default 
            
          Global $AutoProp_PatternImageFileName = "IMGP_000004.bmp", $AutoProp_PatternImageFileName_HasVarMapping = False 
          Global $AutoProp_SearchAreaImageFileName = "IMGS_000003.jpg", $AutoProp_SearchAreaImageFileName_HasVarMapping = False 
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          Global $AutoProp_RelativeToCoordinate = "0;0", $AutoProp_RelativeToCoordinate_HasVarMapping = False   
          Global $AutoProp_IsSearchAreaFullScreen = False, $AutoProp_IsSearchAreaFullScreen_HasVarMapping = False   
          Global $AutoProp_RequiredPercent = 95, $AutoProp_RequiredPercent_HasVarMapping = False   
          Global $AutoProp_EdgeDetectionThreshold = 10, $AutoProp_EdgeDetectionThreshold_HasVarMapping = False   
          Global $AutoProp_HideMouse = False, $AutoProp_HideMouse_HasVarMapping = False   
          Global $AutoProp_WaitForImagePosStabilization = False, $AutoProp_WaitForImagePosStabilization_HasVarMapping = False   
          Global $AutoProp_TimeForImagePosStabilization_ms = 500, $AutoProp_TimeForImagePosStabilization_ms_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_IsLowPerformanceSearch = True, $AutoProp_IsLowPerformanceSearch_HasVarMapping = False   
          Global $AutoProp_InterruptTime = 100, $AutoProp_InterruptTime_HasVarMapping = False   
          Global $AutoProp_PerformanceLimit = 60, $AutoProp_PerformanceLimit_HasVarMapping = False   
          Global $AutoProp_SearchForPictureAppear = True, $AutoProp_SearchForPictureAppear_HasVarMapping = False   
          Global $AutoProp_SearchArea_X = 149, $AutoProp_SearchArea_X_HasVarMapping = False   
          Global $AutoProp_SearchArea_Y = 114, $AutoProp_SearchArea_Y_HasVarMapping = False   
          Global $AutoProp_SearchArea_Width = 1507, $AutoProp_SearchArea_Width_HasVarMapping = False   
          Global $AutoProp_SearchArea_Height = 632, $AutoProp_SearchArea_Height_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_X = 349, $AutoProp_PatternImageRect_X_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_Y = 264, $AutoProp_PatternImageRect_Y_HasVarMapping = False   
          Global $AutoProp_AlgorithmName = 1, $AutoProp_AlgorithmName_HasVarMapping = False   
          Global $AutoProp_ThresholdOrMaskValue = 10, $AutoProp_ThresholdOrMaskValue_HasVarMapping = False   
          Global $AutoProp_ImageSearchModeId = 0, $AutoProp_ImageSearchModeId_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "b46def55-de89-482a-9896-d2f7861b451b", "Image_Search_28Image_Search_for_Appear29", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Image_Search_28Image_Search_for_Appear29", "b46def55-de89-482a-9896-d2f7861b451b", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Image Search (Image Search for Appear)")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of Transaction step: Image Search (Image Search for Appear);
          ;-----------------------------------------------------------------------
          If @compiled = TRUE Then
              FileInstall("Images\IMGP_000004.bmp", "IMGP_000004.bmp", 1)
              FileInstall("Images\IMGS_000003.jpg", "IMGS_000003.jpg", 1)
          EndIf
          If $AutoProp_HideMouse then
          	Local $ImgMousePos = MouseGetPos();
          	MouseMove( $HideMousePosX, $HideMousePosY, 0 )
          EndIf
             
          $ErrorHandling = 1
          Local $__FindCoordinate = Default  
          StcImageSearch($AutoProp_PatternImageFileName , $AutoProp_SearchAreaImageFileName , $AutoProp_Timeout , $AutoProp_RelativeToCoordinate, _
                                  $AutoProp_IsSearchAreaFullScreen , $AutoProp_RequiredPercent , $AutoProp_EdgeDetectionThreshold , $AutoProp_HideMouse, _
                                  $AutoProp_WaitForImagePosStabilization , $AutoProp_TimeForImagePosStabilization_ms , $AutoProp_UseGeneralTimeout, _
                                  $AutoProp_IsLowPerformanceSearch , $AutoProp_InterruptTime , $AutoProp_PerformanceLimit , $AutoProp_SearchForPictureAppear, _
                                  $AutoProp_SearchArea_X , $AutoProp_SearchArea_Y , $AutoProp_SearchArea_Width , $AutoProp_SearchArea_Height , $AutoProp_PatternImageRect_X, _
                                  $AutoProp_PatternImageRect_Y , $AutoProp_AlgorithmName , $AutoProp_ThresholdOrMaskValue, _
                                  1920, 1080, 32, _
                                  $__FindCoordinate,"b46def55-de89-482a-9896-d2f7861b451b", @ScriptLineNumber, "Image Search (Image Search for Appear)")   
          $OutboundVar_FindCoordinate = $__FindCoordinate
          If $AutoProp_HideMouse then MouseMove( $ImgMousePos[0], $ImgMousePos[1], 0 )
          ;-----------------------------------------------------------------------
          ;#### End of Transaction step: Image Search (Image Search for Appear);
          ;-----------------------------------------------------------------------
          
          
          EndIf  
            Global $Image_Search_Find_Coordinate = $OutboundVar_FindCoordinate  ; declare variable source. Will be referenced by other action steps 
          
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Image Search", $run, "b46def55-de89-482a-9896-d2f7861b451b", 3, "Image Search")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Mouse Actions1", "799f81d1-69ea-468d-b53b-4877c65c562a", 3, "Mouse Actions")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Mouse Actions1"
          
            
          Global $AutoProp_RelativeToCoordinate = "0;0", $AutoProp_RelativeToCoordinate_HasVarMapping = False   
          Global $AutoProp_MouseSpeed = 4, $AutoProp_MouseSpeed_HasVarMapping = False   
          Global $AutoProp_MouseClickDownDelay = 200, $AutoProp_MouseClickDownDelay_HasVarMapping = False   
          Global $AutoProp_MouseClickUpDelay = 10, $AutoProp_MouseClickUpDelay_HasVarMapping = False   
          
               Global $AutoProp_ModifierAndMouseStatus[1] 
                  Global $AutoProp_ClicksCount[1] 
                  Global $AutoProp_MouseActionDelay[1] 
                  Global $AutoProp_IsMouseActionDelayEnabled[1] 
                  Global $AutoProp_ClickPoint_X[1] 
                  Global $AutoProp_ClickPoint_Y[1] 
                  Global $AutoProp_ClickMouseButtonText[1] 
                  Global $AutoProp_MouseModifierText[1] 
                               $AutoProp_ModifierAndMouseStatus[0] = False                   
                      $AutoProp_ClicksCount[0] = 48                       
                      $AutoProp_MouseActionDelay[0] = 500                       
                          $AutoProp_IsMouseActionDelayEnabled[0] = False                   
                      $AutoProp_ClickPoint_X[0] = 1869                       
                      $AutoProp_ClickPoint_Y[0] = 3590                       
                  $AutoProp_ClickMouseButtonText[0] = "WheelDown"                         
                  $AutoProp_MouseModifierText[0] = "None"                         
            
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "799f81d1-69ea-468d-b53b-4877c65c562a", "Mouse_Actions1", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Mouse_Actions1", "799f81d1-69ea-468d-b53b-4877c65c562a", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Mouse Actions1")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Mouse Actions1;
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          Local $zeroPointPositionX = StcCoordinates_X($AutoProp_RelativeToCoordinate) 
          Local $zeroPointPositionY = StcCoordinates_Y($AutoProp_RelativeToCoordinate) 
          If $AutoProp_MouseClickDownDelay <> 10  Then  AutoItSetOption( "MouseClickDownDelay", $AutoProp_MouseClickDownDelay )
          If $AutoProp_MouseClickUpDelay <> 10  Then  AutoItSetOption( "MouseClickDelay", $AutoProp_MouseClickUpDelay )
          
          for $idx = 0 to  UBound( $AutoProp_ClicksCount ) - 1 
              Local $XMouse1 = $zeroPointPositionX + $AutoProp_ClickPoint_X[$idx]
              Local $YMouse1 = $zeroPointPositionY + $AutoProp_ClickPoint_Y[$idx]
          	 Local $mouseActionDelay = 0
          	If $AutoProp_IsMouseActionDelayEnabled[$idx] Then $mouseActionDelay = $Autoprop_MouseActionDelay[$idx]
          
             If $AutoProp_MouseModifierText[$idx] <> "None" Then 
                StcHoldMouseModifierKey($AutoProp_MouseModifierText[$idx])
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "799f81d1-69ea-468d-b53b-4877c65c562a", @ScriptLineNumber, "Mouse Actions1")
                StcReleaseMouseModifierKey($AutoProp_MouseModifierText[$idx])
             else
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "799f81d1-69ea-468d-b53b-4877c65c562a", @ScriptLineNumber, "Mouse Actions1")
             EndIf
          Next
          
          If $AutoProp_MouseClickDownDelay <> 10 Then AutoItSetOption( "MouseClickDownDelay", 10)
          If $AutoProp_MouseClickUpDelay <> 10 Then AutoItSetOption( "MouseClickDelay", 10)
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Mouse Actions1;
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Mouse Actions1", $run, "799f81d1-69ea-468d-b53b-4877c65c562a", 3, "Mouse Actions")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Click Web Element1", "b2e72b5f-ce82-4ee8-a3ca-3bc31219511f", 3, "Click Web Element")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Click Web Element1"
          
            
          Global $AutoProp_ClickTypeId = 0, $AutoProp_ClickTypeId_HasVarMapping = False   
          Global $AutoProp_FindString = "/html/body/div[3]/div/div/div/div/section/div/div[2]/div[1]/div/div[10]/div/section/div/div[1]/h2", $AutoProp_FindString_HasVarMapping = False 
          Global $AutoProp_WindowTitle = "BOC Operations Dashboard", $AutoProp_WindowTitle_HasVarMapping = False 
          Global $AutoProp_FrameHierachy = "", $AutoProp_FrameHierachy_HasVarMapping = False 
          Global $AutoProp_MaxFrameHierachy = "", $AutoProp_MaxFrameHierachy_HasVarMapping = False 
          Global $AutoProp_WindowTitleRegEx = False, $AutoProp_WindowTitleRegEx_HasVarMapping = False   
          Global $AutoProp_UseWindowtitle = False, $AutoProp_UseWindowtitle_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "b2e72b5f-ce82-4ee8-a3ca-3bc31219511f", "Click_Web_Element1", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Click_Web_Element1", "b2e72b5f-ce82-4ee8-a3ca-3bc31219511f", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Click Web Element1")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
           
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Click Web Element1;
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          
          If $Run > 0 then
              If $AutoProp_UseGeneralTimeout Then
                 $win_wait_timeout = StcGetGeneralTimeout()
              Else
                 $win_wait_timeout = $AutoProp_Timeout
              EndIf
              if $AutoProp_UseWindowtitle Then
                 Local $WindowTitle = $AutoProp_WindowTitle
              Else
                 Local $WindowTitle = ""
              EndIf
          
             Local $__Success = __StcNgWaClickAction( $Web_Session_28Chrome29_52305233, _
                                                    $AutoProp_FindString, _
                                                    $AutoProp_ClickTypeId, _
                                                    $win_wait_timeout, _
                                                    $WindowTitle, _
                                                    $AutoProp_FrameHierachy, _
                                                    $AutoProp_MaxFrameHierachy, _
                                                    $AutoProp_WindowTitleRegEx, _
                                                    $StcWebSessionConnectionId, _
                                                    "b2e72b5f-ce82-4ee8-a3ca-3bc31219511f",  @ScriptLineNumber, "Click Web Element1")
          
             $Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "b2e72b5f-ce82-4ee8-a3ca-3bc31219511f", @ScriptLineNumber, "Click Web Element1"  ) 
          
             ;~  $Run = StcAsWaClickAction( $Web_Session_28Chrome29_52305233,  $AutoProp_FindString, $AutoProp_ClickTypeId, 0,0, $win_wait_timeout, $WindowTitle, $AutoProp_FrameHierachy, $AutoProp_MaxFrameHierachy, $AutoProp_WindowTitleRegEx,"b2e72b5f-ce82-4ee8-a3ca-3bc31219511f", @ScriptLineNumber, "Click Web Element1"   )
             ;~  $Run = CheckErrorHandling($ErrorHandling, $Run, "b2e72b5f-ce82-4ee8-a3ca-3bc31219511f", @ScriptLineNumber, "Click Web Element1" )
          EndIf
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Click Web Element1;
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Click Web Element1", $run, "b2e72b5f-ce82-4ee8-a3ca-3bc31219511f", 3, "Click Web Element")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Click Web Element2", "cd43732e-c78b-437b-bf2b-ddeb7ed31f88", 3, "Click Web Element")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Click Web Element2"
          
            
          Global $AutoProp_ClickTypeId = 0, $AutoProp_ClickTypeId_HasVarMapping = False   
          Global $AutoProp_FindString = "//div[10]/div[1]/div[1]/button[1]", $AutoProp_FindString_HasVarMapping = False 
          Global $AutoProp_WindowTitle = "BOC Operations Dashboard", $AutoProp_WindowTitle_HasVarMapping = False 
          Global $AutoProp_FrameHierachy = "", $AutoProp_FrameHierachy_HasVarMapping = False 
          Global $AutoProp_MaxFrameHierachy = "", $AutoProp_MaxFrameHierachy_HasVarMapping = False 
          Global $AutoProp_WindowTitleRegEx = False, $AutoProp_WindowTitleRegEx_HasVarMapping = False   
          Global $AutoProp_UseWindowtitle = False, $AutoProp_UseWindowtitle_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "cd43732e-c78b-437b-bf2b-ddeb7ed31f88", "Click_Web_Element2", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Click_Web_Element2", "cd43732e-c78b-437b-bf2b-ddeb7ed31f88", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Click Web Element2")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
           
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Click Web Element2;
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          
          If $Run > 0 then
              If $AutoProp_UseGeneralTimeout Then
                 $win_wait_timeout = StcGetGeneralTimeout()
              Else
                 $win_wait_timeout = $AutoProp_Timeout
              EndIf
              if $AutoProp_UseWindowtitle Then
                 Local $WindowTitle = $AutoProp_WindowTitle
              Else
                 Local $WindowTitle = ""
              EndIf
          
             Local $__Success = __StcNgWaClickAction( $Web_Session_28Chrome29_52305233, _
                                                    $AutoProp_FindString, _
                                                    $AutoProp_ClickTypeId, _
                                                    $win_wait_timeout, _
                                                    $WindowTitle, _
                                                    $AutoProp_FrameHierachy, _
                                                    $AutoProp_MaxFrameHierachy, _
                                                    $AutoProp_WindowTitleRegEx, _
                                                    $StcWebSessionConnectionId, _
                                                    "cd43732e-c78b-437b-bf2b-ddeb7ed31f88",  @ScriptLineNumber, "Click Web Element2")
          
             $Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "cd43732e-c78b-437b-bf2b-ddeb7ed31f88", @ScriptLineNumber, "Click Web Element2"  ) 
          
             ;~  $Run = StcAsWaClickAction( $Web_Session_28Chrome29_52305233,  $AutoProp_FindString, $AutoProp_ClickTypeId, 0,0, $win_wait_timeout, $WindowTitle, $AutoProp_FrameHierachy, $AutoProp_MaxFrameHierachy, $AutoProp_WindowTitleRegEx,"cd43732e-c78b-437b-bf2b-ddeb7ed31f88", @ScriptLineNumber, "Click Web Element2"   )
             ;~  $Run = CheckErrorHandling($ErrorHandling, $Run, "cd43732e-c78b-437b-bf2b-ddeb7ed31f88", @ScriptLineNumber, "Click Web Element2" )
          EndIf
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Click Web Element2;
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Click Web Element2", $run, "cd43732e-c78b-437b-bf2b-ddeb7ed31f88", 3, "Click Web Element")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Click Web Element3", "fa076fad-8645-4620-9749-5038db724658", 3, "Click Web Element")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Click Web Element3"
          
            
          Global $AutoProp_ClickTypeId = 0, $AutoProp_ClickTypeId_HasVarMapping = False   
          Global $AutoProp_FindString = "//div[1]/ul[1]/li[2]/button[1]", $AutoProp_FindString_HasVarMapping = False 
          Global $AutoProp_WindowTitle = "BOC Operations Dashboard", $AutoProp_WindowTitle_HasVarMapping = False 
          Global $AutoProp_FrameHierachy = "", $AutoProp_FrameHierachy_HasVarMapping = False 
          Global $AutoProp_MaxFrameHierachy = "", $AutoProp_MaxFrameHierachy_HasVarMapping = False 
          Global $AutoProp_WindowTitleRegEx = False, $AutoProp_WindowTitleRegEx_HasVarMapping = False   
          Global $AutoProp_UseWindowtitle = False, $AutoProp_UseWindowtitle_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "fa076fad-8645-4620-9749-5038db724658", "Click_Web_Element3", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Click_Web_Element3", "fa076fad-8645-4620-9749-5038db724658", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Click Web Element3")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
           
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Click Web Element3;
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          
          If $Run > 0 then
              If $AutoProp_UseGeneralTimeout Then
                 $win_wait_timeout = StcGetGeneralTimeout()
              Else
                 $win_wait_timeout = $AutoProp_Timeout
              EndIf
              if $AutoProp_UseWindowtitle Then
                 Local $WindowTitle = $AutoProp_WindowTitle
              Else
                 Local $WindowTitle = ""
              EndIf
          
             Local $__Success = __StcNgWaClickAction( $Web_Session_28Chrome29_52305233, _
                                                    $AutoProp_FindString, _
                                                    $AutoProp_ClickTypeId, _
                                                    $win_wait_timeout, _
                                                    $WindowTitle, _
                                                    $AutoProp_FrameHierachy, _
                                                    $AutoProp_MaxFrameHierachy, _
                                                    $AutoProp_WindowTitleRegEx, _
                                                    $StcWebSessionConnectionId, _
                                                    "fa076fad-8645-4620-9749-5038db724658",  @ScriptLineNumber, "Click Web Element3")
          
             $Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "fa076fad-8645-4620-9749-5038db724658", @ScriptLineNumber, "Click Web Element3"  ) 
          
             ;~  $Run = StcAsWaClickAction( $Web_Session_28Chrome29_52305233,  $AutoProp_FindString, $AutoProp_ClickTypeId, 0,0, $win_wait_timeout, $WindowTitle, $AutoProp_FrameHierachy, $AutoProp_MaxFrameHierachy, $AutoProp_WindowTitleRegEx,"fa076fad-8645-4620-9749-5038db724658", @ScriptLineNumber, "Click Web Element3"   )
             ;~  $Run = CheckErrorHandling($ErrorHandling, $Run, "fa076fad-8645-4620-9749-5038db724658", @ScriptLineNumber, "Click Web Element3" )
          EndIf
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Click Web Element3;
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Click Web Element3", $run, "fa076fad-8645-4620-9749-5038db724658", 3, "Click Web Element")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Image Search2", "b8a86510-1290-45de-810d-663a1f99d780", 3, "Image Search")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Image Search2 (Image Search for Appear)"
          
          $OutboundVar_FindCoordinate = Default 
            
          Global $AutoProp_PatternImageFileName = "IMGP_000012.bmp", $AutoProp_PatternImageFileName_HasVarMapping = False 
          Global $AutoProp_SearchAreaImageFileName = "IMGS_000011.jpg", $AutoProp_SearchAreaImageFileName_HasVarMapping = False 
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          Global $AutoProp_RelativeToCoordinate = "0;0", $AutoProp_RelativeToCoordinate_HasVarMapping = False   
          Global $AutoProp_IsSearchAreaFullScreen = True, $AutoProp_IsSearchAreaFullScreen_HasVarMapping = False   
          Global $AutoProp_RequiredPercent = 95, $AutoProp_RequiredPercent_HasVarMapping = False   
          Global $AutoProp_EdgeDetectionThreshold = 10, $AutoProp_EdgeDetectionThreshold_HasVarMapping = False   
          Global $AutoProp_HideMouse = False, $AutoProp_HideMouse_HasVarMapping = False   
          Global $AutoProp_WaitForImagePosStabilization = False, $AutoProp_WaitForImagePosStabilization_HasVarMapping = False   
          Global $AutoProp_TimeForImagePosStabilization_ms = 500, $AutoProp_TimeForImagePosStabilization_ms_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_IsLowPerformanceSearch = True, $AutoProp_IsLowPerformanceSearch_HasVarMapping = False   
          Global $AutoProp_InterruptTime = 100, $AutoProp_InterruptTime_HasVarMapping = False   
          Global $AutoProp_PerformanceLimit = 60, $AutoProp_PerformanceLimit_HasVarMapping = False   
          Global $AutoProp_SearchForPictureAppear = True, $AutoProp_SearchForPictureAppear_HasVarMapping = False   
          Global $AutoProp_SearchArea_X = 0, $AutoProp_SearchArea_X_HasVarMapping = False   
          Global $AutoProp_SearchArea_Y = 0, $AutoProp_SearchArea_Y_HasVarMapping = False   
          Global $AutoProp_SearchArea_Width = 1920, $AutoProp_SearchArea_Width_HasVarMapping = False   
          Global $AutoProp_SearchArea_Height = 1080, $AutoProp_SearchArea_Height_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_X = 742, $AutoProp_PatternImageRect_X_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_Y = 200, $AutoProp_PatternImageRect_Y_HasVarMapping = False   
          Global $AutoProp_AlgorithmName = 1, $AutoProp_AlgorithmName_HasVarMapping = False   
          Global $AutoProp_ThresholdOrMaskValue = 10, $AutoProp_ThresholdOrMaskValue_HasVarMapping = False   
          Global $AutoProp_ImageSearchModeId = 0, $AutoProp_ImageSearchModeId_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "b8a86510-1290-45de-810d-663a1f99d780", "Image_Search2_28Image_Search_for_Appear29", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Image_Search2_28Image_Search_for_Appear29", "b8a86510-1290-45de-810d-663a1f99d780", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Image Search2 (Image Search for Appear)")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of Transaction step: Image Search2 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          If @compiled = TRUE Then
              FileInstall("Images\IMGP_000012.bmp", "IMGP_000012.bmp", 1)
              FileInstall("Images\IMGS_000011.jpg", "IMGS_000011.jpg", 1)
          EndIf
          If $AutoProp_HideMouse then
          	Local $ImgMousePos = MouseGetPos();
          	MouseMove( $HideMousePosX, $HideMousePosY, 0 )
          EndIf
             
          $ErrorHandling = 1
          Local $__FindCoordinate = Default  
          StcImageSearch($AutoProp_PatternImageFileName , $AutoProp_SearchAreaImageFileName , $AutoProp_Timeout , $AutoProp_RelativeToCoordinate, _
                                  $AutoProp_IsSearchAreaFullScreen , $AutoProp_RequiredPercent , $AutoProp_EdgeDetectionThreshold , $AutoProp_HideMouse, _
                                  $AutoProp_WaitForImagePosStabilization , $AutoProp_TimeForImagePosStabilization_ms , $AutoProp_UseGeneralTimeout, _
                                  $AutoProp_IsLowPerformanceSearch , $AutoProp_InterruptTime , $AutoProp_PerformanceLimit , $AutoProp_SearchForPictureAppear, _
                                  $AutoProp_SearchArea_X , $AutoProp_SearchArea_Y , $AutoProp_SearchArea_Width , $AutoProp_SearchArea_Height , $AutoProp_PatternImageRect_X, _
                                  $AutoProp_PatternImageRect_Y , $AutoProp_AlgorithmName , $AutoProp_ThresholdOrMaskValue, _
                                  1920, 1080, 32, _
                                  $__FindCoordinate,"b8a86510-1290-45de-810d-663a1f99d780", @ScriptLineNumber, "Image Search2 (Image Search for Appear)")   
          $OutboundVar_FindCoordinate = $__FindCoordinate
          If $AutoProp_HideMouse then MouseMove( $ImgMousePos[0], $ImgMousePos[1], 0 )
          ;-----------------------------------------------------------------------
          ;#### End of Transaction step: Image Search2 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          
          
          EndIf  
            Global $Image_Search2_Find_Coordinate = $OutboundVar_FindCoordinate  ; declare variable source. Will be referenced by other action steps 
          
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Image Search2", $run, "b8a86510-1290-45de-810d-663a1f99d780", 3, "Image Search")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Mouse Actions2", "8623783d-f95d-4313-8afc-5f9af61c4885", 3, "Mouse Actions")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Mouse Actions2 (Mouse Actions relative to ""Image Search2"")"
          
            
          Global $AutoProp_RelativeToCoordinate = _StcVarSysResolveVarReference( "Image_Search2_Find_Coordinate"), $AutoProp_RelativeToCoordinate_HasVarMapping = True 
          Global $AutoProp_MouseSpeed = 4, $AutoProp_MouseSpeed_HasVarMapping = False   
          Global $AutoProp_MouseClickDownDelay = 200, $AutoProp_MouseClickDownDelay_HasVarMapping = False   
          Global $AutoProp_MouseClickUpDelay = 10, $AutoProp_MouseClickUpDelay_HasVarMapping = False   
          
               Global $AutoProp_ModifierAndMouseStatus[2] 
                  Global $AutoProp_ClicksCount[2] 
                  Global $AutoProp_MouseActionDelay[2] 
                  Global $AutoProp_IsMouseActionDelayEnabled[2] 
                  Global $AutoProp_ClickPoint_X[2] 
                  Global $AutoProp_ClickPoint_Y[2] 
                  Global $AutoProp_ClickMouseButtonText[2] 
                  Global $AutoProp_MouseModifierText[2] 
                                                                         $AutoProp_ModifierAndMouseStatus[0] = False                   
                      $AutoProp_ClicksCount[0] = 1                       
                      $AutoProp_MouseActionDelay[0] = 500                       
                          $AutoProp_IsMouseActionDelayEnabled[0] = False                   
                      $AutoProp_ClickPoint_X[0] = 201                       
                      $AutoProp_ClickPoint_Y[0] = 20                       
                  $AutoProp_ClickMouseButtonText[0] = "LeftDown"                         
                  $AutoProp_MouseModifierText[0] = "None"                         
                            $AutoProp_ModifierAndMouseStatus[1] = False                   
                      $AutoProp_ClicksCount[1] = 1                       
                      $AutoProp_MouseActionDelay[1] = 500                       
                          $AutoProp_IsMouseActionDelayEnabled[1] = False                   
                      $AutoProp_ClickPoint_X[1] = 200                       
                      $AutoProp_ClickPoint_Y[1] = 17                       
                  $AutoProp_ClickMouseButtonText[1] = "LeftUp"                         
                  $AutoProp_MouseModifierText[1] = "None"                         
            
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "8623783d-f95d-4313-8afc-5f9af61c4885", "Mouse_Actions2_28Mouse_Actions_relative_to_22Image_Search22229", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Mouse_Actions2_28Mouse_Actions_relative_to_22Image_Search22229", "8623783d-f95d-4313-8afc-5f9af61c4885", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Mouse Actions2 (Mouse Actions relative to ""Image Search2"")")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Mouse Actions2 (Mouse Actions relative to ""Image Search2"");
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          Local $zeroPointPositionX = StcCoordinates_X($AutoProp_RelativeToCoordinate) 
          Local $zeroPointPositionY = StcCoordinates_Y($AutoProp_RelativeToCoordinate) 
          If $AutoProp_MouseClickDownDelay <> 10  Then  AutoItSetOption( "MouseClickDownDelay", $AutoProp_MouseClickDownDelay )
          If $AutoProp_MouseClickUpDelay <> 10  Then  AutoItSetOption( "MouseClickDelay", $AutoProp_MouseClickUpDelay )
          
          for $idx = 0 to  UBound( $AutoProp_ClicksCount ) - 1 
              Local $XMouse1 = $zeroPointPositionX + $AutoProp_ClickPoint_X[$idx]
              Local $YMouse1 = $zeroPointPositionY + $AutoProp_ClickPoint_Y[$idx]
          	 Local $mouseActionDelay = 0
          	If $AutoProp_IsMouseActionDelayEnabled[$idx] Then $mouseActionDelay = $Autoprop_MouseActionDelay[$idx]
          
             If $AutoProp_MouseModifierText[$idx] <> "None" Then 
                StcHoldMouseModifierKey($AutoProp_MouseModifierText[$idx])
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "8623783d-f95d-4313-8afc-5f9af61c4885", @ScriptLineNumber, "Mouse Actions2 (Mouse Actions relative to ""Image Search2"")")
                StcReleaseMouseModifierKey($AutoProp_MouseModifierText[$idx])
             else
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "8623783d-f95d-4313-8afc-5f9af61c4885", @ScriptLineNumber, "Mouse Actions2 (Mouse Actions relative to ""Image Search2"")")
             EndIf
          Next
          
          If $AutoProp_MouseClickDownDelay <> 10 Then AutoItSetOption( "MouseClickDownDelay", 10)
          If $AutoProp_MouseClickUpDelay <> 10 Then AutoItSetOption( "MouseClickDelay", 10)
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Mouse Actions2 (Mouse Actions relative to ""Image Search2"");
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Mouse Actions2", $run, "8623783d-f95d-4313-8afc-5f9af61c4885", 3, "Mouse Actions")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Image Search3", "5c0ff7d5-456e-4c9d-8bdb-ea97ec527f96", 3, "Image Search")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Image Search3 (Image Search for Appear)"
          
          $OutboundVar_FindCoordinate = Default 
            
          Global $AutoProp_PatternImageFileName = "IMGP_000016.bmp", $AutoProp_PatternImageFileName_HasVarMapping = False 
          Global $AutoProp_SearchAreaImageFileName = "IMGS_000015.jpg", $AutoProp_SearchAreaImageFileName_HasVarMapping = False 
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          Global $AutoProp_RelativeToCoordinate = "0;0", $AutoProp_RelativeToCoordinate_HasVarMapping = False   
          Global $AutoProp_IsSearchAreaFullScreen = True, $AutoProp_IsSearchAreaFullScreen_HasVarMapping = False   
          Global $AutoProp_RequiredPercent = 95, $AutoProp_RequiredPercent_HasVarMapping = False   
          Global $AutoProp_EdgeDetectionThreshold = 10, $AutoProp_EdgeDetectionThreshold_HasVarMapping = False   
          Global $AutoProp_HideMouse = False, $AutoProp_HideMouse_HasVarMapping = False   
          Global $AutoProp_WaitForImagePosStabilization = False, $AutoProp_WaitForImagePosStabilization_HasVarMapping = False   
          Global $AutoProp_TimeForImagePosStabilization_ms = 500, $AutoProp_TimeForImagePosStabilization_ms_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_IsLowPerformanceSearch = True, $AutoProp_IsLowPerformanceSearch_HasVarMapping = False   
          Global $AutoProp_InterruptTime = 100, $AutoProp_InterruptTime_HasVarMapping = False   
          Global $AutoProp_PerformanceLimit = 60, $AutoProp_PerformanceLimit_HasVarMapping = False   
          Global $AutoProp_SearchForPictureAppear = True, $AutoProp_SearchForPictureAppear_HasVarMapping = False   
          Global $AutoProp_SearchArea_X = 0, $AutoProp_SearchArea_X_HasVarMapping = False   
          Global $AutoProp_SearchArea_Y = 0, $AutoProp_SearchArea_Y_HasVarMapping = False   
          Global $AutoProp_SearchArea_Width = 1920, $AutoProp_SearchArea_Width_HasVarMapping = False   
          Global $AutoProp_SearchArea_Height = 1080, $AutoProp_SearchArea_Height_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_X = 739, $AutoProp_PatternImageRect_X_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_Y = 276, $AutoProp_PatternImageRect_Y_HasVarMapping = False   
          Global $AutoProp_AlgorithmName = 1, $AutoProp_AlgorithmName_HasVarMapping = False   
          Global $AutoProp_ThresholdOrMaskValue = 10, $AutoProp_ThresholdOrMaskValue_HasVarMapping = False   
          Global $AutoProp_ImageSearchModeId = 0, $AutoProp_ImageSearchModeId_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "5c0ff7d5-456e-4c9d-8bdb-ea97ec527f96", "Image_Search3_28Image_Search_for_Appear29", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Image_Search3_28Image_Search_for_Appear29", "5c0ff7d5-456e-4c9d-8bdb-ea97ec527f96", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Image Search3 (Image Search for Appear)")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of Transaction step: Image Search3 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          If @compiled = TRUE Then
              FileInstall("Images\IMGP_000016.bmp", "IMGP_000016.bmp", 1)
              FileInstall("Images\IMGS_000015.jpg", "IMGS_000015.jpg", 1)
          EndIf
          If $AutoProp_HideMouse then
          	Local $ImgMousePos = MouseGetPos();
          	MouseMove( $HideMousePosX, $HideMousePosY, 0 )
          EndIf
             
          $ErrorHandling = 1
          Local $__FindCoordinate = Default  
          StcImageSearch($AutoProp_PatternImageFileName , $AutoProp_SearchAreaImageFileName , $AutoProp_Timeout , $AutoProp_RelativeToCoordinate, _
                                  $AutoProp_IsSearchAreaFullScreen , $AutoProp_RequiredPercent , $AutoProp_EdgeDetectionThreshold , $AutoProp_HideMouse, _
                                  $AutoProp_WaitForImagePosStabilization , $AutoProp_TimeForImagePosStabilization_ms , $AutoProp_UseGeneralTimeout, _
                                  $AutoProp_IsLowPerformanceSearch , $AutoProp_InterruptTime , $AutoProp_PerformanceLimit , $AutoProp_SearchForPictureAppear, _
                                  $AutoProp_SearchArea_X , $AutoProp_SearchArea_Y , $AutoProp_SearchArea_Width , $AutoProp_SearchArea_Height , $AutoProp_PatternImageRect_X, _
                                  $AutoProp_PatternImageRect_Y , $AutoProp_AlgorithmName , $AutoProp_ThresholdOrMaskValue, _
                                  1920, 1080, 32, _
                                  $__FindCoordinate,"5c0ff7d5-456e-4c9d-8bdb-ea97ec527f96", @ScriptLineNumber, "Image Search3 (Image Search for Appear)")   
          $OutboundVar_FindCoordinate = $__FindCoordinate
          If $AutoProp_HideMouse then MouseMove( $ImgMousePos[0], $ImgMousePos[1], 0 )
          ;-----------------------------------------------------------------------
          ;#### End of Transaction step: Image Search3 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          
          
          EndIf  
            Global $Image_Search3_Find_Coordinate = $OutboundVar_FindCoordinate  ; declare variable source. Will be referenced by other action steps 
          
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Image Search3", $run, "5c0ff7d5-456e-4c9d-8bdb-ea97ec527f96", 3, "Image Search")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Mouse Actions3", "ecb0a0b4-712e-44e6-b699-e9cabfbdb1dd", 3, "Mouse Actions")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Mouse Actions3 (Mouse Actions relative to ""Image Search3"")"
          
            
          Global $AutoProp_RelativeToCoordinate = _StcVarSysResolveVarReference( "Image_Search3_Find_Coordinate"), $AutoProp_RelativeToCoordinate_HasVarMapping = True 
          Global $AutoProp_MouseSpeed = 4, $AutoProp_MouseSpeed_HasVarMapping = False   
          Global $AutoProp_MouseClickDownDelay = 200, $AutoProp_MouseClickDownDelay_HasVarMapping = False   
          Global $AutoProp_MouseClickUpDelay = 10, $AutoProp_MouseClickUpDelay_HasVarMapping = False   
          
               Global $AutoProp_ModifierAndMouseStatus[1] 
                  Global $AutoProp_ClicksCount[1] 
                  Global $AutoProp_MouseActionDelay[1] 
                  Global $AutoProp_IsMouseActionDelayEnabled[1] 
                  Global $AutoProp_ClickPoint_X[1] 
                  Global $AutoProp_ClickPoint_Y[1] 
                  Global $AutoProp_ClickMouseButtonText[1] 
                  Global $AutoProp_MouseModifierText[1] 
                               $AutoProp_ModifierAndMouseStatus[0] = False                   
                      $AutoProp_ClicksCount[0] = 1                       
                      $AutoProp_MouseActionDelay[0] = 500                       
                          $AutoProp_IsMouseActionDelayEnabled[0] = False                   
                      $AutoProp_ClickPoint_X[0] = 138                       
                      $AutoProp_ClickPoint_Y[0] = 17                       
                  $AutoProp_ClickMouseButtonText[0] = "Left"                         
                  $AutoProp_MouseModifierText[0] = "None"                         
            
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "ecb0a0b4-712e-44e6-b699-e9cabfbdb1dd", "Mouse_Actions3_28Mouse_Actions_relative_to_22Image_Search32229", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Mouse_Actions3_28Mouse_Actions_relative_to_22Image_Search32229", "ecb0a0b4-712e-44e6-b699-e9cabfbdb1dd", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Mouse Actions3 (Mouse Actions relative to ""Image Search3"")")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Mouse Actions3 (Mouse Actions relative to ""Image Search3"");
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          Local $zeroPointPositionX = StcCoordinates_X($AutoProp_RelativeToCoordinate) 
          Local $zeroPointPositionY = StcCoordinates_Y($AutoProp_RelativeToCoordinate) 
          If $AutoProp_MouseClickDownDelay <> 10  Then  AutoItSetOption( "MouseClickDownDelay", $AutoProp_MouseClickDownDelay )
          If $AutoProp_MouseClickUpDelay <> 10  Then  AutoItSetOption( "MouseClickDelay", $AutoProp_MouseClickUpDelay )
          
          for $idx = 0 to  UBound( $AutoProp_ClicksCount ) - 1 
              Local $XMouse1 = $zeroPointPositionX + $AutoProp_ClickPoint_X[$idx]
              Local $YMouse1 = $zeroPointPositionY + $AutoProp_ClickPoint_Y[$idx]
          	 Local $mouseActionDelay = 0
          	If $AutoProp_IsMouseActionDelayEnabled[$idx] Then $mouseActionDelay = $Autoprop_MouseActionDelay[$idx]
          
             If $AutoProp_MouseModifierText[$idx] <> "None" Then 
                StcHoldMouseModifierKey($AutoProp_MouseModifierText[$idx])
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "ecb0a0b4-712e-44e6-b699-e9cabfbdb1dd", @ScriptLineNumber, "Mouse Actions3 (Mouse Actions relative to ""Image Search3"")")
                StcReleaseMouseModifierKey($AutoProp_MouseModifierText[$idx])
             else
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "ecb0a0b4-712e-44e6-b699-e9cabfbdb1dd", @ScriptLineNumber, "Mouse Actions3 (Mouse Actions relative to ""Image Search3"")")
             EndIf
          Next
          
          If $AutoProp_MouseClickDownDelay <> 10 Then AutoItSetOption( "MouseClickDownDelay", 10)
          If $AutoProp_MouseClickUpDelay <> 10 Then AutoItSetOption( "MouseClickDelay", 10)
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Mouse Actions3 (Mouse Actions relative to ""Image Search3"");
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Mouse Actions3", $run, "ecb0a0b4-712e-44e6-b699-e9cabfbdb1dd", 3, "Mouse Actions")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Image Search4", "096d8967-bf76-4d60-946d-85c4c006e6d8", 3, "Image Search")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Image Search4 (Image Search for Appear)"
          
          $OutboundVar_FindCoordinate = Default 
            
          Global $AutoProp_PatternImageFileName = "IMGP_000022.bmp", $AutoProp_PatternImageFileName_HasVarMapping = False 
          Global $AutoProp_SearchAreaImageFileName = "IMGS_000021.jpg", $AutoProp_SearchAreaImageFileName_HasVarMapping = False 
          Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
          Global $AutoProp_RelativeToCoordinate = "0;0", $AutoProp_RelativeToCoordinate_HasVarMapping = False   
          Global $AutoProp_IsSearchAreaFullScreen = True, $AutoProp_IsSearchAreaFullScreen_HasVarMapping = False   
          Global $AutoProp_RequiredPercent = 95, $AutoProp_RequiredPercent_HasVarMapping = False   
          Global $AutoProp_EdgeDetectionThreshold = 10, $AutoProp_EdgeDetectionThreshold_HasVarMapping = False   
          Global $AutoProp_HideMouse = False, $AutoProp_HideMouse_HasVarMapping = False   
          Global $AutoProp_WaitForImagePosStabilization = False, $AutoProp_WaitForImagePosStabilization_HasVarMapping = False   
          Global $AutoProp_TimeForImagePosStabilization_ms = 500, $AutoProp_TimeForImagePosStabilization_ms_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_IsLowPerformanceSearch = True, $AutoProp_IsLowPerformanceSearch_HasVarMapping = False   
          Global $AutoProp_InterruptTime = 100, $AutoProp_InterruptTime_HasVarMapping = False   
          Global $AutoProp_PerformanceLimit = 60, $AutoProp_PerformanceLimit_HasVarMapping = False   
          Global $AutoProp_SearchForPictureAppear = True, $AutoProp_SearchForPictureAppear_HasVarMapping = False   
          Global $AutoProp_SearchArea_X = 0, $AutoProp_SearchArea_X_HasVarMapping = False   
          Global $AutoProp_SearchArea_Y = 0, $AutoProp_SearchArea_Y_HasVarMapping = False   
          Global $AutoProp_SearchArea_Width = 1920, $AutoProp_SearchArea_Width_HasVarMapping = False   
          Global $AutoProp_SearchArea_Height = 1080, $AutoProp_SearchArea_Height_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_X = 1062, $AutoProp_PatternImageRect_X_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_Y = 318, $AutoProp_PatternImageRect_Y_HasVarMapping = False   
          Global $AutoProp_AlgorithmName = 1, $AutoProp_AlgorithmName_HasVarMapping = False   
          Global $AutoProp_ThresholdOrMaskValue = 10, $AutoProp_ThresholdOrMaskValue_HasVarMapping = False   
          Global $AutoProp_ImageSearchModeId = 0, $AutoProp_ImageSearchModeId_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "096d8967-bf76-4d60-946d-85c4c006e6d8", "Image_Search4_28Image_Search_for_Appear29", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Image_Search4_28Image_Search_for_Appear29", "096d8967-bf76-4d60-946d-85c4c006e6d8", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Image Search4 (Image Search for Appear)")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of Transaction step: Image Search4 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          If @compiled = TRUE Then
              FileInstall("Images\IMGP_000022.bmp", "IMGP_000022.bmp", 1)
              FileInstall("Images\IMGS_000021.jpg", "IMGS_000021.jpg", 1)
          EndIf
          If $AutoProp_HideMouse then
          	Local $ImgMousePos = MouseGetPos();
          	MouseMove( $HideMousePosX, $HideMousePosY, 0 )
          EndIf
             
          $ErrorHandling = 1
          Local $__FindCoordinate = Default  
          StcImageSearch($AutoProp_PatternImageFileName , $AutoProp_SearchAreaImageFileName , $AutoProp_Timeout , $AutoProp_RelativeToCoordinate, _
                                  $AutoProp_IsSearchAreaFullScreen , $AutoProp_RequiredPercent , $AutoProp_EdgeDetectionThreshold , $AutoProp_HideMouse, _
                                  $AutoProp_WaitForImagePosStabilization , $AutoProp_TimeForImagePosStabilization_ms , $AutoProp_UseGeneralTimeout, _
                                  $AutoProp_IsLowPerformanceSearch , $AutoProp_InterruptTime , $AutoProp_PerformanceLimit , $AutoProp_SearchForPictureAppear, _
                                  $AutoProp_SearchArea_X , $AutoProp_SearchArea_Y , $AutoProp_SearchArea_Width , $AutoProp_SearchArea_Height , $AutoProp_PatternImageRect_X, _
                                  $AutoProp_PatternImageRect_Y , $AutoProp_AlgorithmName , $AutoProp_ThresholdOrMaskValue, _
                                  1920, 1080, 32, _
                                  $__FindCoordinate,"096d8967-bf76-4d60-946d-85c4c006e6d8", @ScriptLineNumber, "Image Search4 (Image Search for Appear)")   
          $OutboundVar_FindCoordinate = $__FindCoordinate
          If $AutoProp_HideMouse then MouseMove( $ImgMousePos[0], $ImgMousePos[1], 0 )
          ;-----------------------------------------------------------------------
          ;#### End of Transaction step: Image Search4 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          
          
          EndIf  
            Global $Image_Search4_Find_Coordinate = $OutboundVar_FindCoordinate  ; declare variable source. Will be referenced by other action steps 
          
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Image Search4", $run, "096d8967-bf76-4d60-946d-85c4c006e6d8", 3, "Image Search")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Mouse Actions4", "7269cf0e-6a2a-4bf3-a2c4-7ea313063512", 3, "Mouse Actions")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Mouse Actions4 (Mouse Actions relative to ""Image Search4"")"
          
            
          Global $AutoProp_RelativeToCoordinate = _StcVarSysResolveVarReference( "Image_Search4_Find_Coordinate"), $AutoProp_RelativeToCoordinate_HasVarMapping = True 
          Global $AutoProp_MouseSpeed = 4, $AutoProp_MouseSpeed_HasVarMapping = False   
          Global $AutoProp_MouseClickDownDelay = 200, $AutoProp_MouseClickDownDelay_HasVarMapping = False   
          Global $AutoProp_MouseClickUpDelay = 10, $AutoProp_MouseClickUpDelay_HasVarMapping = False   
          
               Global $AutoProp_ModifierAndMouseStatus[1] 
                  Global $AutoProp_ClicksCount[1] 
                  Global $AutoProp_MouseActionDelay[1] 
                  Global $AutoProp_IsMouseActionDelayEnabled[1] 
                  Global $AutoProp_ClickPoint_X[1] 
                  Global $AutoProp_ClickPoint_Y[1] 
                  Global $AutoProp_ClickMouseButtonText[1] 
                  Global $AutoProp_MouseModifierText[1] 
                               $AutoProp_ModifierAndMouseStatus[0] = False                   
                      $AutoProp_ClicksCount[0] = 1                       
                      $AutoProp_MouseActionDelay[0] = 500                       
                          $AutoProp_IsMouseActionDelayEnabled[0] = False                   
                      $AutoProp_ClickPoint_X[0] = 36                       
                      $AutoProp_ClickPoint_Y[0] = 11                       
                  $AutoProp_ClickMouseButtonText[0] = "Left"                         
                  $AutoProp_MouseModifierText[0] = "None"                         
            
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "7269cf0e-6a2a-4bf3-a2c4-7ea313063512", "Mouse_Actions4_28Mouse_Actions_relative_to_22Image_Search42229", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Mouse_Actions4_28Mouse_Actions_relative_to_22Image_Search42229", "7269cf0e-6a2a-4bf3-a2c4-7ea313063512", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Mouse Actions4 (Mouse Actions relative to ""Image Search4"")")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Mouse Actions4 (Mouse Actions relative to ""Image Search4"");
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          Local $zeroPointPositionX = StcCoordinates_X($AutoProp_RelativeToCoordinate) 
          Local $zeroPointPositionY = StcCoordinates_Y($AutoProp_RelativeToCoordinate) 
          If $AutoProp_MouseClickDownDelay <> 10  Then  AutoItSetOption( "MouseClickDownDelay", $AutoProp_MouseClickDownDelay )
          If $AutoProp_MouseClickUpDelay <> 10  Then  AutoItSetOption( "MouseClickDelay", $AutoProp_MouseClickUpDelay )
          
          for $idx = 0 to  UBound( $AutoProp_ClicksCount ) - 1 
              Local $XMouse1 = $zeroPointPositionX + $AutoProp_ClickPoint_X[$idx]
              Local $YMouse1 = $zeroPointPositionY + $AutoProp_ClickPoint_Y[$idx]
          	 Local $mouseActionDelay = 0
          	If $AutoProp_IsMouseActionDelayEnabled[$idx] Then $mouseActionDelay = $Autoprop_MouseActionDelay[$idx]
          
             If $AutoProp_MouseModifierText[$idx] <> "None" Then 
                StcHoldMouseModifierKey($AutoProp_MouseModifierText[$idx])
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "7269cf0e-6a2a-4bf3-a2c4-7ea313063512", @ScriptLineNumber, "Mouse Actions4 (Mouse Actions relative to ""Image Search4"")")
                StcReleaseMouseModifierKey($AutoProp_MouseModifierText[$idx])
             else
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "7269cf0e-6a2a-4bf3-a2c4-7ea313063512", @ScriptLineNumber, "Mouse Actions4 (Mouse Actions relative to ""Image Search4"")")
             EndIf
          Next
          
          If $AutoProp_MouseClickDownDelay <> 10 Then AutoItSetOption( "MouseClickDownDelay", 10)
          If $AutoProp_MouseClickUpDelay <> 10 Then AutoItSetOption( "MouseClickDelay", 10)
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Mouse Actions4 (Mouse Actions relative to ""Image Search4"");
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Mouse Actions4", $run, "7269cf0e-6a2a-4bf3-a2c4-7ea313063512", 3, "Mouse Actions")
              EndIf ; CheckBlock...
              
                        
              If CheckBlockIteration() Then  
                 OnActionStart("Managed", "891ef666-b43d-4018-a2d6-301081173663", 3, "Managed")
                 If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                     
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Managed"
          
            
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "891ef666-b43d-4018-a2d6-301081173663", "Managed", True, "Normal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Managed", "891ef666-b43d-4018-a2d6-301081173663", @ScriptLineNumber, "Normal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Managed")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of : Managed;
          ;-----------------------------------------------------------------------
          $LogfileIdent = 4
          $g_LastControlBlockLevelName = $g_ControlBlockLevelName
          $g_ControlBlockLevelName = "Managed"
          OnEnterManagedBlock()
          While NOT OnCheckAbortState() ; Catch-Block-Loop
             ;-------------------------------------------------------------------
             ; Try section
             ;-------------------------------------------------------------------
             writelog("[DoAction.Enter]",4);
             While 1     ; Try-Block-Loop
          
                If CheckBlockIteration() Then
                  OnActionStart("File Check", "331fd80e-8457-4a89-9ac4-82737b30ecbb", 4, "File Check")
                        
                ;---------<[ Auto generated WFE debug prefix section!  ]>------
                _StcVarSysResetValidation()
                $AsLastResultValue = $AsResultValue
                $AsLastResultInfo  = $AsResultInfo
                $AsResultValue = 0
                $AsResultInfo  = "no Info"
                $g_LastAction = "File Check (CheckMode: FileExists)"
                
                $OutboundVar_FileExists = Default 
                $OutboundVar_FileNameOut = Default 
                $OutboundVar_DirectoryPathOut = Default 
                  
                Global $AutoProp_CheckForMode = 1, $AutoProp_CheckForMode_HasVarMapping = False   
                Global $AutoProp_DirectoryPath = "C:\Users\%USERNAME%\Downloads", $AutoProp_DirectoryPath_HasVarMapping = False 
                Global $AutoProp_FileName = "Pending Non-Strategic LOI Shipments.xlsx", $AutoProp_FileName_HasVarMapping = False 
                Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
                Global $AutoProp_Timeout = 30, $AutoProp_Timeout_HasVarMapping = False   
                
                _DbgSetCurrentLevel( 6 )
                OnPrefixCodeExecuted( "331fd80e-8457-4a89-9ac4-82737b30ecbb", "File_Check_28CheckMode3A_FileExists29", True, "EhNormal", @ScriptLineNumber)
                If _StcVarSysValidateVarReference( "File_Check_28CheckMode3A_FileExists29", "331fd80e-8457-4a89-9ac4-82737b30ecbb", @ScriptLineNumber, "EhNormal" ) Then
                $LogfileIdent = 6 
                $TransStep = ("File Check (CheckMode: FileExists)")
                Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
                $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
                ;---------<[ End of debug prefix section!  ]>------------------
                
                ;-----------------------------------------------------------------------
                ;###### Start of transaction step: File Check (CheckMode: FileExists);
                ;-----------------------------------------------------------------------
                $check_file_timeout = $AutoProp_UseGeneralTimeout ? StcGetGeneralTimeout() : $AutoProp_Timeout
                
                Local $p_FileCheckSucceeded, $translatedDirectoryPath = TranslateText($AutoProp_DirectoryPath)
                Local $translatedFileName = TranslateText($AutoProp_FileName)
                
                Local $__Success = __StcNgCheckFile(String($translatedDirectoryPath), _
                									String($translatedFileName), _
                									$check_file_timeout, _
                									$AutoProp_CheckForMode, _
                									$p_FileCheckSucceeded, _
                									"331fd80e-8457-4a89-9ac4-82737b30ecbb",  @ScriptLineNumber, "File Check (CheckMode: FileExists)")  
                $Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "331fd80e-8457-4a89-9ac4-82737b30ecbb", @ScriptLineNumber, "File Check (CheckMode: FileExists)"  ) 
                $OutboundVar_DirectoryPathOut = $translatedDirectoryPath
                $OutboundVar_FileNameOut = $translatedFileName
                $OutboundVar_FileExists = $p_FileCheckSucceeded = "true" ? true : false
                
                $ErrorHandling = 1
                ;-----------------------------------------------------------------------
                ;###### End of transaction step: File Check (CheckMode: FileExists);
                ;-----------------------------------------------------------------------
                
                
                EndIf  
                  Global $File_Check_Check_Succeeded = $OutboundVar_FileExists  ; declare variable source. Will be referenced by other action steps 
                 Global $File_Check_File_Name = $OutboundVar_FileNameOut  ; declare variable source. Will be referenced by other action steps 
                 Global $File_Check_Directory_Path = $OutboundVar_DirectoryPathOut  ; declare variable source. Will be referenced by other action steps 
                
                ;---------<[ End of debug suffix section!  ]>------------------
          
                  OnActionEnd("File Check", $run, "331fd80e-8457-4a89-9ac4-82737b30ecbb", 4, "File Check")
                  If $run < 0 Then 
                     OnExitDoActionManagedBlock("a02e2397-f38c-4d2c-9909-fa1ad71e2ade")
                     writelog("[DoAction.End   File Check: File Check] Managed block detects failure | Action Step File Check failed | OnAction jumps to OnError Block",4);
                     ExitLoop 1
                  EndIf
                EndIf 
          
                If CheckBlockIteration() Then
                  OnActionStart("Set Variable1", "7f3e29cd-8680-4b93-897a-126be1832c31", 4, "Set Variable")
                        
                ;---------<[ Auto generated WFE debug prefix section!  ]>------
                _StcVarSysResetValidation()
                $AsLastResultValue = $AsResultValue
                $AsLastResultInfo  = $AsResultInfo
                $AsResultValue = 0
                $AsResultInfo  = "no Info"
                $g_LastAction = "Set Variable1"
                
                  
                Global $AutoProp_ModifiedVariable = _StcVarSysResolveVarReference( "Activity_Parameters_candownloadfile"), $AutoProp_ModifiedVariable_HasVarMapping = True 
                Global $AutoProp_NewValue = "True", $AutoProp_NewValue_HasVarMapping = False 
                
                _DbgSetCurrentLevel( 6 )
                OnPrefixCodeExecuted( "7f3e29cd-8680-4b93-897a-126be1832c31", "Set_Variable1", True, "EhNormal", @ScriptLineNumber)
                If _StcVarSysValidateVarReference( "Set_Variable1", "7f3e29cd-8680-4b93-897a-126be1832c31", @ScriptLineNumber, "EhNormal" ) Then
                $LogfileIdent = 6 
                $TransStep = ("Set Variable1")
                Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
                $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
                ;---------<[ End of debug prefix section!  ]>------------------
                
                ;-----------------------------------------------------------------------
                ;###### Start of transaction step: Set Variable1;
                ;-----------------------------------------------------------------------
                ;
                ; Possible Properties: Name:'AutoProp_ModifiedVariable'   VarValue:'Activity_Parameters_candownloadfile'  Type:'VARIABLE'  InternalTye:'System.String'
                ; Source Data Type: BOOL
                 If $AutoProp_ModifiedVariable_HasVarMapping Then 
                	 Local $__StcOldVarValue = StcStringTruncate( String($Activity_Parameters_candownloadfile) )
                	 Local $__StcModifiedVariableName = "Activity_Parameters_candownloadfile"
                	 	 	     $Activity_Parameters_candownloadfile = (String($AutoProp_NewValue) = "False" OR String($AutoProp_NewValue) = "0") ? False : True 	 	 	      
                     If IsDeclared( "Activity_Parameters_candownloadfile" & "_Changed") Then Assign( "Activity_Parameters_candownloadfile" & "_Changed", "True", 4)
                
                	 Local $__StcNewVarValue = StcStringTruncate( String($Activity_Parameters_candownloadfile) )
                 EndIf
                 ; Possible Properties: Name:'AutoProp_NewValue'   VarValue:'True'  Type:'STRING'  InternalTye:'System.String'
                ; Source Data Type: BOOL
                
                Local $__StcLocalMessageText = "Variable '" & $__StcModifiedVariableName & "' was set to '" & $__StcNewVarValue & "'. Old value was: '" & $__StcOldVarValue & "'."
                ActionStepFeedbackEx("Set Variable1", "Set Variable", "7f3e29cd-8680-4b93-897a-126be1832c31", "Info", $__StcLocalMessageText, @ScriptLineNumber) 
                _NgCoreLogAnnotationText("7f3e29cd-8680-4b93-897a-126be1832c31", $__StcLocalMessageText )	
                $__StcLocalMessageText = ""
                StcResetErrorState() ; for now we have no error conditions!
                $Run = CheckErrorHandling(1, $run, "7f3e29cd-8680-4b93-897a-126be1832c31", @ScriptLineNumber, "Set Variable1"  ) 
                $AsResultValue= $__StcNewVarValue
                $AsResultInfo = "New Variable content:"  
                ;-----------------------------------------------------------------------
                ;###### End of transaction step: Set Variable1;
                ;-----------------------------------------------------------------------
                
                
                EndIf  
                 
                ;---------<[ End of debug suffix section!  ]>------------------
          
                  OnActionEnd("Set Variable1", $run, "7f3e29cd-8680-4b93-897a-126be1832c31", 4, "Set Variable")
                  If $run < 0 Then 
                     OnExitDoActionManagedBlock("a02e2397-f38c-4d2c-9909-fa1ad71e2ade")
                     writelog("[DoAction.End   Set Variable: Set Variable1] Managed block detects failure | Action Step Set Variable1 failed | OnAction jumps to OnError Block",4);
                     ExitLoop 1
                  EndIf
                EndIf 
          
                writelog("[DoAction.End] Leave DoAction with no error!",4);
                OnExitDoActionManagedBlock("a02e2397-f38c-4d2c-9909-fa1ad71e2ade")
                ExitLoop 2
             WEnd     ; Try-Block-Loop End
          
             
             ;-------------------------------------------------------------------
             ; Catch section
             ;-------------------------------------------------------------------
             $Run = 1
          
             writelog("[OnError.Enter]",4);
             While NOT OnCheckAbortState() ;  Local Catch-Loop, loop over only if abort state is NOT reached!
                                           ;  This is only if the DoAction has executed an "Exit Workflow" AS!
          
                OnActionStart("Set Variable", "8574d69f-d4b3-42a8-8458-4c4d5dcab04c", 4, "Set Variable")
                      
                ;---------<[ Auto generated WFE debug prefix section!  ]>------
                _StcVarSysResetValidation()
                $AsLastResultValue = $AsResultValue
                $AsLastResultInfo  = $AsResultInfo
                $AsResultValue = 0
                $AsResultInfo  = "no Info"
                $g_LastAction = "Set Variable"
                
                  
                Global $AutoProp_ModifiedVariable = _StcVarSysResolveVarReference( "Activity_Parameters_candownloadfile"), $AutoProp_ModifiedVariable_HasVarMapping = True 
                Global $AutoProp_NewValue = "False", $AutoProp_NewValue_HasVarMapping = False 
                
                _DbgSetCurrentLevel( 6 )
                OnPrefixCodeExecuted( "8574d69f-d4b3-42a8-8458-4c4d5dcab04c", "Set_Variable", True, "EhNormal", @ScriptLineNumber)
                If _StcVarSysValidateVarReference( "Set_Variable", "8574d69f-d4b3-42a8-8458-4c4d5dcab04c", @ScriptLineNumber, "EhNormal" ) Then
                $LogfileIdent = 6 
                $TransStep = ("Set Variable")
                Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
                $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
                ;---------<[ End of debug prefix section!  ]>------------------
                
                ;-----------------------------------------------------------------------
                ;###### Start of transaction step: Set Variable;
                ;-----------------------------------------------------------------------
                ;
                ; Possible Properties: Name:'AutoProp_ModifiedVariable'   VarValue:'Activity_Parameters_candownloadfile'  Type:'VARIABLE'  InternalTye:'System.String'
                ; Source Data Type: BOOL
                 If $AutoProp_ModifiedVariable_HasVarMapping Then 
                	 Local $__StcOldVarValue = StcStringTruncate( String($Activity_Parameters_candownloadfile) )
                	 Local $__StcModifiedVariableName = "Activity_Parameters_candownloadfile"
                	 	 	     $Activity_Parameters_candownloadfile = (String($AutoProp_NewValue) = "False" OR String($AutoProp_NewValue) = "0") ? False : True 	 	 	      
                     If IsDeclared( "Activity_Parameters_candownloadfile" & "_Changed") Then Assign( "Activity_Parameters_candownloadfile" & "_Changed", "True", 4)
                
                	 Local $__StcNewVarValue = StcStringTruncate( String($Activity_Parameters_candownloadfile) )
                 EndIf
                 ; Possible Properties: Name:'AutoProp_NewValue'   VarValue:'False'  Type:'STRING'  InternalTye:'System.String'
                ; Source Data Type: BOOL
                
                Local $__StcLocalMessageText = "Variable '" & $__StcModifiedVariableName & "' was set to '" & $__StcNewVarValue & "'. Old value was: '" & $__StcOldVarValue & "'."
                ActionStepFeedbackEx("Set Variable", "Set Variable", "8574d69f-d4b3-42a8-8458-4c4d5dcab04c", "Info", $__StcLocalMessageText, @ScriptLineNumber) 
                _NgCoreLogAnnotationText("8574d69f-d4b3-42a8-8458-4c4d5dcab04c", $__StcLocalMessageText )	
                $__StcLocalMessageText = ""
                StcResetErrorState() ; for now we have no error conditions!
                $Run = CheckErrorHandling(1, $run, "8574d69f-d4b3-42a8-8458-4c4d5dcab04c", @ScriptLineNumber, "Set Variable"  ) 
                $AsResultValue= $__StcNewVarValue
                $AsResultInfo = "New Variable content:"  
                ;-----------------------------------------------------------------------
                ;###### End of transaction step: Set Variable;
                ;-----------------------------------------------------------------------
                
                
                EndIf  
                 
                ;---------<[ End of debug suffix section!  ]>------------------
          
                OnActionEnd("Set Variable", $run, "8574d69f-d4b3-42a8-8458-4c4d5dcab04c", 4, "Set Variable")
                If OnCheckAbortState() Then  ; Check if "Exit Workflow" was called. If so, leave block immediately 
                  writelog("[OnError.End   Exit Workflow executed in OnError Block]",4);
                  ExitLoop 2
                Endif 
                If $run < 0 Then
                  writelog("[OnError.End   Failure in OnError Block]",4);
                  OnExitDoErrorManagedBlock("9f210a10-94e8-4b74-919a-958af876862f")
                  ExitLoop 2
                EndIf
          
          
          
                writelog("[OnError.End] Leave OnError with no further errors.",4);
                OnExitDoErrorManagedBlock("9f210a10-94e8-4b74-919a-958af876862f")
                ExitLoop 2
             WEnd  ; Local Catch-Loop End
          WEnd  ; Catch-Block-Loop End
          
          
          ;-------------------------------------------------------------------
          ; Finally section
          ;-------------------------------------------------------------------
          If NOT OnCheckAbortState() Then
              Local $RunValueAtLevel_4 = $Run  ; DoAlways is error state neutral, so store value for current level
              $Run = 1
          
              writelog("[DoAlways.Enter] Following actions executed with no error handling by default!",4);
              While 1    ; Always-Block-Loop
          
             ; Actionstep: 'Insert Item here...' is  a dummy element . No code generated!
          
              writelog("[DoAlways.End",4);
              ExitLoop 1
              WEnd ; Always-Block-Loop
              $Run = $RunValueAtLevel_4  ; DoAlways is error state neutral, so get back value for this level
          
              $g_ControlBlockLevelName = $g_LastControlBlockLevelName 
              
              OnExitDoAlwaysManagedBlock("fae47e7a-c811-458e-a09c-a5e3d578529f")  
          EndIf
          
          
          
          OnLeaveManagedBlock()
          ;-----------------------------------------------------------------------
          ;#### End of : Managed;
          ;-----------------------------------------------------------------------
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                        
                 OnActionEnd("Managed", $run, "891ef666-b43d-4018-a2d6-301081173663", 3, "Managed")
              EndIf ; CheckBlock...
              
                    EndIf ; If @error  
      
        EndIf ; If $__WebSessionConnectionId
        
        If $run = -1 AND $StcScreenshotMode = 1 Then screenshot( "Start Web Session (Chrome) failed! See screenshot for details:", "1a563d2d-372b-4223-96a2-77ad2111ea66")
      
        If Not $AutoProp_WebSessionId_HasVarMapping Then
          If $ActiveBrowserHandle <> -1 Then __StcNgWaCloseSession($Web_Session_28Chrome29_52305233, _
                                              $__WebSessionConnectionId, _
                                              "1a563d2d-372b-4223-96a2-77ad2111ea66", @ScriptLineNumber, "Web Session (Chrome)")
        EndIf
      EndIf
      
      $Run = CheckErrorHandling($ErrorHandling, $Run, "1a563d2d-372b-4223-96a2-77ad2111ea66", @ScriptLineNumber, "Web Session (Chrome)" )
      
      ;-----------------------------------------------------------------------
      ;### End of transaction step: Web Session (Chrome);
      ;-----------------------------------------------------------------------
       
      
      EndIf  
       
      ;---------<[ End of debug suffix section!  ]>------------------
   
      OnActionEnd("Web Session (Chrome)", $run, "1a563d2d-372b-4223-96a2-77ad2111ea66", 2, "Web Session (Chrome)")
   EndIf
   
      ; Actionstep: 'Web Session (Chrome)1' is  disabled . No code generated!
   
   $g_ControlBlockLevelName = $g_LastControlBlockLevelName
   OnTransactionEnd("Transaction", "7d28f553-ca82-4d69-b08a-0883f68b2ba8")
   ;---------------------------------------------------------------------------
   ;## End of Transaction: Transaction;
   ;---------------------------------------------------------------------------
   
   
   EndIf  
    
   ;---------<[ End of debug suffix section!  ]>------------------
 
          OnMeasurementBlockEnd("Transaction", "7d28f553-ca82-4d69-b08a-0883f68b2ba8", 1, "Transaction")
       EndIf
  
       ;---------------------------------------------------------------------------
       ; Application exit, handling for return
       ;---------------------------------------------------------------------------
 
       If ($run < 0 OR OnCheckAbortState()) AND Not (_StcIsUserExitCausedBy_ExitOk()  or _StcIsStatusExitCode()) Then    ; negativ run or OnCheckAbortState() return true indicates a problem
          $Pass_Activity_Workflow = 0
 
          OnMeasurementTryFailed ("09353668-c73d-4971-a5dc-99224127f16d" )    ; notify Funclib subsystem 
          OnLastMeasurementExecuted("09353668-c73d-4971-a5dc-99224127f16d", False)
 
          ActionStepFeedbackEx( "Activity Workflow", "Workflow", "09353668-c73d-4971-a5dc-99224127f16d", "Error", StcMessages_AppExit_1( $MeasurementName) , @ScriptLineNumber ) 
          If OnCheckAbortState() Then
             writelog( StcMessages_AppExit_2($MeasurementName)  )
          Else
             writelog(  StcMessages_AppExit_3($MeasurementName) )
          EndIf
 
          If $enter >= $g_StcMaxConfiguredExecutionTries OR OnCheckAbortState() Then ; no hope, the end of retries was reached...
             $UsedErrorCycles = $enter                         ; pass current used error cycles to XML output variable
             ExitLoop 1
          Else  ;$enter < $g_StcMaxConfiguredExecutionTries     ; ok, one more again...
             writelog("<-------------------------------------------------------------------------------------------------------------------------------------->")
             writelog("[Enter Measurement Retry] Try: " & $enter+1 & " of " & $g_StcMaxConfiguredExecutionTries)
             StcErrorBox("Application measurement", StcMessages_AppExit_4($MeasurementName,  $retrydelay) , $retrydelay)
             ActionStepFeedbackEx( "Activity Workflow", "Workflow", "09353668-c73d-4971-a5dc-99224127f16d", "Warning", "Workflow now restarted due to prior error. This is measurement cycle: " & $enter+1 & " of " & $g_StcMaxConfiguredExecutionTries , @ScriptLineNumber ) 
             OnMeasurementLoopFailedAfterWaitDlg(STC_GetWorkflowProtocolTemplate())    ; notify subsystem after the message box was displayed! Otherwise the dialog time influence the measurement time.
             $enter += 1           ; next try
          EndIf
 
          Clearkeys ()                     ; take care about key states!
 
       Else
          OnLastMeasurementExecuted("09353668-c73d-4971-a5dc-99224127f16d", TRUE)
          ; some debug, if user has it selected
          writelog( StcMessages_AppExit_5($MeasurementName,  $retrydelay, $enter)  )
          ActionStepFeedbackEx( "Activity Workflow", "Workflow", "09353668-c73d-4971-a5dc-99224127f16d", "Info", StcMessages_AppExit_6( $MeasurementName, $enter, $g_StcMaxConfiguredExecutionTries ) , @ScriptLineNumber ) 
 
          $g_TransAction = "SUM_" & $MeasurementName ; Sum of Responsetimes in Process
          $UsedErrorCycles = $enter-1         ; pass current used error cycles to XML output variable
 
          $Pass_Activity_Workflow = $Pass_Activity_Workflow + 1 ; number of runs without errors
          writelog(  StcMessages_AppExit_7($MeasurementName, $enter, $Pass_Activity_Workflow) )
          ExitLoop 1
       EndIf
    Until $enter > $g_StcMaxConfiguredExecutionTries
 
   
 
 

   
 
 
 ;-----------------------------------------------------------------------
 ;# Start of finalization block: Workflow Finalization;
 ;-----------------------------------------------------------------------
 ; StcAssert(false, "$Run=" & $Run )
 ; StcAssert(false, "$AbortCurrentWorkflow=" & $AbortCurrentWorkflow )
 ; StcAssert(false, "$g_UserExecutionAbortCode=" & $g_UserExecutionAbortCode ) ; May contain 800 for Trigger case
 ; StcAssert(false, "$BreakNextLoop=" & $BreakNextLoop )
 ; StcAssert(false, "CheckBlockIteration()=" & CheckBlockIteration() )
 
 ; Save last workflow run state:
 Local $SavedWorkflowRunState = $Run
 Local $SavedWorkflowAbortState = $AbortCurrentWorkflow
 Local $SavedWorkflowBreakNextLoop = $BreakNextLoop
 Local $OnSuccessRunResult = 0 ; 0-> not processed 1->processed with okay  2->processed but failed
 Local $OnErrorRunResult = 0   ; 0-> not processed 1->processed with okay  2->processed but failed
 Local $OnErrorBlockHasNoActionSteps=False
 
 StcResetErrorState()
 $AbortCurrentWorkflow = False
 $BreakNextLoop = False
 
 $LogfileIdent = 1
 $g_ControlBlockLevelName = "Workflow Finalization"
 
 
 
 OnEnterManagedBlock()
 
 ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "7d74ca55-9c87-4017-91f1-f81b339f2662", "Info",  "Finalize Block reached. Finalize Block may change the overall workflow result!", @ScriptLineNumber  )
 
    ;-------------------------------------------------------------------
    ; 'Workflow run succeeded' section
    ;-------------------------------------------------------------------
    Local $__ProcessedAtLeastOneActionStep = false
    If $SavedWorkflowRunState = 1 AND $g_UserExecutionAbortCode = 1 Then     ; On Success Block
     writelog("[WorkflowRunSucceeded.Enter]",1);
     $OnSuccessRunResult = 1
     While 1     ; Try-Block-Loop
             
       ; Actionstep: 'Insert Item here...' is  a dummy element . No code generated!
             
       If $__ProcessedAtLeastOneActionStep Then ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "413206bd-3daa-410d-8dff-9356ff7a792c", "InfoPlus",  "Finalize Block: OnSuccess handling was successfully processed.", @ScriptLineNumber  )
       writelog("[WorkflowRunSucceeded.End] Leave 'Workflow run succeeded' with no error!",1);
       OnExitDoActionManagedBlock("413206bd-3daa-410d-8dff-9356ff7a792c")
       ExitLoop 1
     WEnd  
     If $run <> 1 Then $OnSuccessRunResult = 2
    EndIf     ; Try-Block-Loop End
 
                Local $__LastAction = $g_LastAction
    Local $__TransAction = $g_TransAction
 
 
       If $g_UserExecutionAbortCode <> 1 Then
           ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "7d74ca55-9c87-4017-91f1-f81b339f2662", "Warning",  "Finalize Block does only enter Common error handling because workflow was closed by a user exit code (e.g. Trigger or UserExit action step).", @ScriptLineNumber  )
    EndIf
   
    ;-------------------------------------------------------------------
    ; 'Workflow Run Failed' section
    ;-------------------------------------------------------------------
    $__ProcessedAtLeastOneActionStep = false
    If $SavedWorkflowRunState <> 1 Then ;  Local OnError. Loop over only if abort state is NOT reached!
                 
     writelog("[WorkflowRunFailed.Enter]",1);
 
     $Run = 1
     $OnErrorRunResult = 1
     While 1 ;  Local Catch-Loop, loop over only if abort state is NOT reached!
                                  ;  This is only if the DoAction has executed an "Exit Workflow" AS!
                   
       ; 'Workflow Run Failed' does not contain any active elements, so set error state
       $Run = -1
 
 
       If $__ProcessedAtLeastOneActionStep Then 
           ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "741b2278-5415-431f-95aa-fdd90c42ab8f", "InfoPlus",  "Finalize Block: ""Workflow run failed"" handling was successfully processed.", @ScriptLineNumber  )
           $OnErrorBlockHasNoActionSteps = False
       Else
           ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "741b2278-5415-431f-95aa-fdd90c42ab8f", "InfoPlus",  "Finalize Block: ""Workflow run failed"" handling was successfully processed but contained no further actions steps.", @ScriptLineNumber  )          
           $OnErrorBlockHasNoActionSteps = True
       EndIF
       writelog("[WorkflowRunFailed.End] Leave ""Workflow run failed"" with no further errors.",1);
       OnExitDoErrorManagedBlock("741b2278-5415-431f-95aa-fdd90c42ab8f")
       ExitLoop 1
     WEnd
     If $run <> 1 Then $OnErrorRunResult = 2
  EndIf  ; OnSuccess-Block-Loop End
 
 
 
 ;-------------------------------------------------------------------
 ; Finally section
 ;-------------------------------------------------------------------
 Local $RunValueAtLevel_1 = $Run  ; DoAlways is error state neutral, so store value for current level
 $Run = 1
 $__ProcessedAtLeastOneActionStep = false
 
 writelog("[DoAlways.Enter] Following actions executed with no error handling by default!",1);
 While 1    ; Always-Block-Loop
     
    ; Actionstep: 'Insert Item here...' is  a dummy element . No code generated!
    writelog("[DoAlways.End]",1)
 
   If $__ProcessedAtLeastOneActionStep Then ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "575545fb-d3f0-487f-bedc-a56c16d1d7be", "InfoPlus",  "Common finalize handling was successfully processed. Note: Possible failed actions steps do not change the workflow run result.", @ScriptLineNumber )
   ExitLoop 1
 WEnd ; Always-Block-Loop
 
 $g_TransAction = $__TransAction
 $g_LastAction = $__LastAction
 
 _StcWaCloseRegisteredSessions("7d74ca55-9c87-4017-91f1-f81b339f2662","Workflow Finalization") 
 
 
 $Run = $RunValueAtLevel_1  ; DoAlways is error state neutral, so get back value for this level
     
 OnExitDoAlwaysManagedBlock("575545fb-d3f0-487f-bedc-a56c16d1d7be")  
 
 OnLeaveManagedBlock()
 
 ; if was set or is now set, the overall state belongs to pesemistic..
 ;$AbortCurrentWorkflow = $SavedWorkflowAbortState OR $AbortCurrentWorkflow
 ;$OneOrMoreMeasurementFailed = true
 ;$LastMeasurementRunSucceeded  = false
 
 
 ActionStepFeedbackEx( $WorkflowName, "Workflow", "7d74ca55-9c87-4017-91f1-f81b339f2662", "Info", "Overall consumed time for this run: " & Round(TimerStop($MeasurementOverallTimeTimer )/1000,1) & "sec." , @ScriptLineNumber ) 
 
 OnMeasurementEnd ($g_TransAction,"7d74ca55-9c87-4017-91f1-f81b339f2662")    ; notify subsystem
 
 
 If $OnSuccessRunResult > 0 Then
    If $OnSuccessRunResult = 2 Then  ; OnSuccess runs into failed state! 
       ; now it depends what the user selected in Finalizer Wizard
       Switch (0)
          Case 0 ; User want to keep okay state 
             Actionstepfeedbackex( "Finalize block", "Finalize block", "413206bd-3daa-410d-8dff-9356ff7a792c", "Warning",  "The activity succeeded but failed in finalizer handling.", @scriptlinenumber  )               
             Actionstepfeedbackex( "Finalize block", "Finalize block", "7d74ca55-9c87-4017-91f1-f81b339f2662", "Warning",  "The activity succeeded but failed in finalizer handling. Termination mode is: Ingore failure and proceed with Success.", @scriptlinenumber  )               
             _StcSetSuccess_Workflow()  ; for TA and APM we still use Success Code
          Case 1 ; User want to proceed with process
             $OneOrMoreMeasurementFailed = true
             $LastMeasurementRunSucceeded  = false
             Actionstepfeedbackex( "Finalize block", "Finalize block", "413206bd-3daa-410d-8dff-9356ff7a792c", "Error",  "The activity succeeded but failed in finalizer handling.", @scriptlinenumber  )               
             ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "7d74ca55-9c87-4017-91f1-f81b339f2662", "Error",  "Finalize handling failed. Termination mode is: Proceed Process.", @ScriptLineNumber  )
             _StcSetStatusExit_Workflow($StcExit_RPA_ONSUCCESS_FAILED_BUT_PROCCED) ; for TA and APM we still use measurement failed value
          Case 2 ; User want to terminate process
             $OneOrMoreMeasurementFailed = true
             $LastMeasurementRunSucceeded  = false
             Actionstepfeedbackex( "Finalize block", "Finalize block", "413206bd-3daa-410d-8dff-9356ff7a792c", "Error",  "The activity succeeded but failed in finalizer handling.", @scriptlinenumber  )               
             ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "7d74ca55-9c87-4017-91f1-f81b339f2662", "Error",  "Finalize handling failed. Termination mode is: Terminate.", @ScriptLineNumber  )
             _StcSetStatusExit_Workflow($StcExit_Measurement_Failed) ; for TA and APM we still use measurement failed value
       EndSwitch
    Else
       _StcSetSuccess_Workflow()  ; for TA and APM we still use Success Code
    EndIf
 EndIf
 
 
 If $OnErrorRunResult > 0 Then 
    ; it doesn't matter if block failed again or not. Failed is still failed!
    ; now it depends what the user selected in Finalizer Wizard
  
    if $OnErrorRunResult = 2 AND Not $OnErrorBlockHasNoActionSteps Then ; in this case one of the actions in OnError has failed!
       ActionstepFeedbackEx( "Finalize block", "Finalize block", "741b2278-5415-431f-95aa-fdd90c42ab8f", "Error",  "One of the activities has failed.", @scriptlinenumber  )               
    EndIF
 
    Switch (1)
       Case 0 ; User want to proceed process
             $OneOrMoreMeasurementFailed = true
             $LastMeasurementRunSucceeded  = false
             ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "7d74ca55-9c87-4017-91f1-f81b339f2662", "Error",  "Activity failed. Termination mode is: Proceed Process.", @ScriptLineNumber  )
             _StcSetStatusExit_Workflow($StcExit_RPA_FAILED_BUT_PROCCED_PROCESS) ; for TA and APM we still use measurement failed value
       Case 1 ; User want to terminate process
             $OneOrMoreMeasurementFailed = true
             $LastMeasurementRunSucceeded  = false
             ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "7d74ca55-9c87-4017-91f1-f81b339f2662", "Error",  "Activity failed. Termination mode is: Terminate.", @ScriptLineNumber  )
             _StcSetStatusExit_Workflow($StcExit_Measurement_Failed) ; for TA and APM we still use measurement failed value
    EndSwitch
 EndIf
 
 
 
 
 ;-----------------------------------------------------------------------
 ;# End of finalization block: Workflow Finalization;
 ;-----------------------------------------------------------------------
 


__StcRpaFlushOutParams( "4c4d49ac-d76a-47f4-b191-724a7e35662c", @ScriptLineNumber, "Access Looker ()"  )
Local $__AcitivtyParameter_Path = StcGetLogFileFolder() & "\OutputActivityParameters.json"
Local $__AcitivtyParameter_Success = __StcSaveOutParameters($__AcitivtyParameter_Path, "4c4d49ac-d76a-47f4-b191-724a7e35662c", @ScriptLineNumber, "Access Looker ()"    ) 


  OnWorkflowEnd(  "4c4d49ac-d76a-47f4-b191-724a7e35662c" )
  return $_MeasurementScriptRunFinished
EndFunc

 
 ;-----------------------------------------------------------------------
 ; Static Section for STC-Protector START
 ;-----------------------------------------------------------------------
 Func __ProtectorGetWindowTitle( $Title, $ActName, $ActId, $Line)
     Local $windowTitle = _ExpandToTitleRegEx($Title)
     If @error = 1 AND NOT $g_StcProtectorAlreadyShowsError Then 
        ActionStepFeedbackEx( $ActName, "KeyStroke", $ActId, "Error", "The window title '" & $windowTitle & "' is not a valid regular expression!", $Line )
        $g_StcProtectorAlreadyShowsError = TRUE
     EndIf
     return $windowTitle
 EndFunc
 
 Func __DecAndCheckFailCounter( $ProtID, $Title, $ActName, $ActId, $Line) 
     $g__StcProtFailCounter[$ProtID] = $g__StcProtFailCounter[$ProtID] - 1
     If $g__StcProtFailCounter[$ProtID] = 0 Then
        ActionStepFeedbackEx( $ActName, "KeyStroke", $ActId, "Warning", "Proctector for window title '" & $Title & "' disabled because of consecutive '" & $g__StcProtFailLimit & "' failures.", $Line )     
        StcProtectorDisable()
     EndIf
 EndFunc           
 
 
 ; STC-Protector, function for closing of error windows, not wanted popups like update information, check runs every 250 miliseconds
 Func STC_Protector()
     __CheckAutoItMainThread()
     If $g__StcProtSkipNextRun OR NOT $g__StcProtEnabled Then
         $g__StcProtSkipNextRun = FALSE
         return
     EndIf
         
     If NOT IsDeclared("g_StcProtectorAlreadyShowsError") Then Global $g_StcProtectorAlreadyShowsError = FALSE
     ; check and force of reboot, waits till a running measurement is finished
     If $reboot = 1 AND @hour = $reboothour AND @min = $rebootMin Then $rebootforce = 1
 
  
 
 EndFunc
 
 ;-----------------------------------------------------------------------
 ; Static Section for STC-Protector END
 ;-----------------------------------------------------------------------
 


; Run protocol template xml:
Func STC_GetWorkflowProtocolTemplate()
 return "<?xml version=""1.0"" encoding=""utf-8""?>" & @CRLF & _
"<WorkflowRunProtocol xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" Id=""4c4d49ac-d76a-47f4-b191-724a7e35662c"" Name=""Access Looker"" Type=""ActivityWorkflow"" WorkflowRevision=""0"" WorkflowProjectID=""4c4d49ac-d76a-47f4-b191-724a7e35662c"" ModelRevision=""9"" WorkflowEditorVersion=""6.0.15086.1"" WorkflowRun=""0"" Author=""kmok"" CreationDate=""2022-10-11T14:33:58.3121435+08:00"">" & @CRLF & _
"  <Items>" & @CRLF & _
"    <Item Id=""8a31be49-e11a-4ab0-a659-2897bab04f39"" Name=""Workflow Initialization"" Type=""InitializeSectionActivity"">" & @CRLF & _
"      <Items>" & @CRLF & _
"        <Item Id=""e3dc6dd8-63e2-4ab2-a20f-e0d03e8813ef"" Name=""Activity Parameters"" Type=""ActivityParametersActivity"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"        <Item Id=""8ae8bb22-6e70-4714-bf5e-c134b2e8c611"" Name=""Pattern Gallery"" Type=""SearchPatternGalleryActivity"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"        <Item Id=""8ab9ef3a-3cc0-4b0b-9735-15341e5e041d"" Name=""Settings"" Type=""WorkflowSettingsActivity"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"      </Items>" & @CRLF & _
"      <RunResult State=""NotExecuted"" />" & @CRLF & _
"    </Item>" & @CRLF & _
"    <Item Id=""09353668-c73d-4971-a5dc-99224127f16d"" Name=""Activity Workflow"" Type=""ActivityWorkflowMeasurement"">" & @CRLF & _
"      <Items>" & @CRLF & _
"        <Item Id=""7d28f553-ca82-4d69-b08a-0883f68b2ba8"" Name=""Transaction"" Type=""Transaction"">" & @CRLF & _
"          <Items>" & @CRLF & _
"            <Item Id=""1a563d2d-372b-4223-96a2-77ad2111ea66"" Name=""Web Session (Chrome)"" Type=""WASessionChromeActivity"">" & @CRLF & _
"              <Items>" & @CRLF & _
"                <Item Id=""743ef171-c78b-4b3a-aae6-43d869804dcb"" Name=""Click Web Element"" Type=""WAClickActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""58fe8e8f-228a-478e-8116-13a2b657bd16"" Name=""Keystrokes to Web Element"" Type=""WAKeyStrokeActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""e4052aea-ab8d-4055-b414-b48972b5857e"" Name=""Keystrokes to Web Element: Keystrokes to Web Element1"" Type=""WAKeyStrokeActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""aa5388df-845f-4653-9627-a06c5a39ee90"" Name=""Image Search: Image Search1"" Type=""ImageSearchActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""ac8619c5-7589-4a0f-9c1a-a14ad8ccfba7"" Name=""Mouse Actions"" Type=""MouseClicksActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""b46def55-de89-482a-9896-d2f7861b451b"" Name=""Image Search"" Type=""ImageSearchActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""799f81d1-69ea-468d-b53b-4877c65c562a"" Name=""Mouse Actions: Mouse Actions1"" Type=""MouseClicksActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""b2e72b5f-ce82-4ee8-a3ca-3bc31219511f"" Name=""Click Web Element: Click Web Element1"" Type=""WAClickActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""cd43732e-c78b-437b-bf2b-ddeb7ed31f88"" Name=""Click Web Element: Click Web Element2"" Type=""WAClickActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""fa076fad-8645-4620-9749-5038db724658"" Name=""Click Web Element: Click Web Element3"" Type=""WAClickActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""b8a86510-1290-45de-810d-663a1f99d780"" Name=""Image Search: Image Search2"" Type=""ImageSearchActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""8623783d-f95d-4313-8afc-5f9af61c4885"" Name=""Mouse Actions: Mouse Actions2"" Type=""MouseClicksActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""5c0ff7d5-456e-4c9d-8bdb-ea97ec527f96"" Name=""Image Search: Image Search3"" Type=""ImageSearchActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""ecb0a0b4-712e-44e6-b699-e9cabfbdb1dd"" Name=""Mouse Actions: Mouse Actions3"" Type=""MouseClicksActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""096d8967-bf76-4d60-946d-85c4c006e6d8"" Name=""Image Search: Image Search4"" Type=""ImageSearchActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""7269cf0e-6a2a-4bf3-a2c4-7ea313063512"" Name=""Mouse Actions: Mouse Actions4"" Type=""MouseClicksActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""891ef666-b43d-4018-a2d6-301081173663"" Name=""Managed"" Type=""TryCatchOperator"">" & @CRLF & _
"                  <Items>" & @CRLF & _
"                    <Item Id=""a02e2397-f38c-4d2c-9909-fa1ad71e2ade"" Name=""DoAction"" Type=""TrySection"">" & @CRLF & _
"                      <Items>" & @CRLF & _
"                        <Item Id=""331fd80e-8457-4a89-9ac4-82737b30ecbb"" Name=""File Check"" Type=""FileCheckActivity"">" & @CRLF & _
"                          <RunResult State=""NotExecuted"" />" & @CRLF & _
"                        </Item>" & @CRLF & _
"                        <Item Id=""7f3e29cd-8680-4b93-897a-126be1832c31"" Name=""Set Variable: Set Variable1"" Type=""SetVariableActivity"">" & @CRLF & _
"                          <RunResult State=""NotExecuted"" />" & @CRLF & _
"                        </Item>" & @CRLF & _
"                      </Items>" & @CRLF & _
"                      <RunResult State=""NotExecuted"" />" & @CRLF & _
"                    </Item>" & @CRLF & _
"                    <Item Id=""9f210a10-94e8-4b74-919a-958af876862f"" Name=""OnError"" Type=""CatchSection"">" & @CRLF & _
"                      <Items>" & @CRLF & _
"                        <Item Id=""8574d69f-d4b3-42a8-8458-4c4d5dcab04c"" Name=""Set Variable"" Type=""SetVariableActivity"">" & @CRLF & _
"                          <RunResult State=""NotExecuted"" />" & @CRLF & _
"                        </Item>" & @CRLF & _
"                      </Items>" & @CRLF & _
"                      <RunResult State=""NotExecuted"" />" & @CRLF & _
"                    </Item>" & @CRLF & _
"                    <Item Id=""fae47e7a-c811-458e-a09c-a5e3d578529f"" Name=""DoAlways"" Type=""FinallySection"">" & @CRLF & _
"                      <RunResult State=""NotExecuted"" />" & @CRLF & _
"                    </Item>" & @CRLF & _
"                  </Items>" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"              </Items>" & @CRLF & _
"              <RunResult State=""NotExecuted"" />" & @CRLF & _
"            </Item>" & @CRLF & _
"          </Items>" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"      </Items>" & @CRLF & _
"      <RunResult State=""NotExecuted"" />" & @CRLF & _
"    </Item>" & @CRLF & _
"    <Item Id=""7d74ca55-9c87-4017-91f1-f81b339f2662"" Name=""Workflow Finalization"" Type=""WorkflowFinalizationActivity"">" & @CRLF & _
"      <Items>" & @CRLF & _
"        <Item Id=""413206bd-3daa-410d-8dff-9356ff7a792c"" Name=""Workflow run succeeded"" Type=""OnSuccessSection"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"        <Item Id=""741b2278-5415-431f-95aa-fdd90c42ab8f"" Name=""Workflow run failed"" Type=""OnErrorSection"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"        <Item Id=""575545fb-d3f0-487f-bedc-a56c16d1d7be"" Name=""Common finalization handling"" Type=""DoAlwaysSection"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"      </Items>" & @CRLF & _
"      <RunResult State=""NotExecuted"" />" & @CRLF & _
"    </Item>" & @CRLF & _
"  </Items>" & @CRLF & _
"  <RunResult State=""NotExecuted"" />" & @CRLF & _
"</WorkflowRunProtocol>"  
EndFunc

