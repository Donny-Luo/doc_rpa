;-------------------------------------------------------------------------------
; Code was generated by MuleSoft RPA Builder 6.0.15086.1
; Type is: RPA
; Copyright © MuleSoft LLC 2022
; Template Revision: $Revision: 6.0.1.0 $
; RPA-Workflow Author: kmok
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; include of standard functions
;-------------------------------------------------------------------------------
#include "StcFuncLib.stc3"

;-------------------------------------------------------------------------------
; Global value Setting 
;-------------------------------------------------------------------------------
Local $FutureUse = true  ; for now the scriptfeedback is always on!

; Don't change or remove following line! 
$g_UsedWorkflowEditorVersion = "6.0.15086.1"

;-------------------------------------------------------------------------------
; Set the workflow type for this workflow
;-------------------------------------------------------------------------------
_StcSetWfeWorkfowTypeId( 3 )

;-------------------------------------------------------------------------------
; Registering of runtime package cache paths (must be before Init is called!)
;-------------------------------------------------------------------------------

__StcRegisterRuntimePackageModul( "CommonRuntime_6_0_057BEB3330D7CDF6BEB5F9453118434D")  ; Source on WFE generated this script: $item.Value   

__StcRegisterRuntimePackageModul( "FlaUI_6_0_77D92E53486F7B312AA13FDD79B6AF89")  ; Source on WFE generated this script: $item.Value   

__StcRegisterRuntimePackageModul( "OCR-OpenCv_6_0_598A9EE4182C5AD7FE6226E438346613")  ; Source on WFE generated this script: $item.Value   


;-------------------------------------------------------------------------------
; Registering of runtime package cache paths (must be before Init is called!)
;-------------------------------------------------------------------------------

;--------------------------------------------------------------------------------

Local $MaxStcLogfile = 1 ;1MB
InitStcFunclib($MaxStcLogfile, $FutureUse, 0)

StcSetScreenShotExtension(".bmp")                                     ; default store as BMP (productive)

writelog("Info - Script was built by X1DS Rev.  : " & $g_UsedWorkflowEditorVersion & " []" & " at 20:42:04 ; 2022年10月12日 (local time)" )
writelog("Info - Script was built on machine    : DESKTOP-2U8FOJ9, OS Typ/Version: " & "Windows 10 x64 v10.0.19044" )
writelog("--------------------------------------------------------------------------------------------------------------")


;-------------------------------------------------------------------------------
;STC-Guard Konfiguration
;-------------------------------------------------------------------------------
__SetStcGuardOperationMode( True )    ; enable or disable Guard by project settings.
__StcRegisterKillByStcGuard( "")
__StcRegisterKillOnExit("" )
__StcRegisterKeepAliveList( "" )


;-------------------------------------------------------------------------------
;   Measurement values
;-------------------------------------------------------------------------------
; counter to count the number of tries
$enter = 1


;-------------------------------------------------------------------------------
;   Global Master Data Settings
;-------------------------------------------------------------------------------
$WorkflowName = "Upload Document" ;StcServerMasterDataVariable( "Workflowname", "STRING",  "Upload Document"  )
; For now the Applname ist not configurable in case of RPA type Workflows! 
; So in all cases where the application name is part of an output we should write: n/a !
$ApplName = "<n/a>"


;-------------------------------------------------------------------------------
;  Image processing settings       
;-------------------------------------------------------------------------------
StcEnableAutoBitsPerPixelFallback()                     


;-------------------------------------------------------------------------------
;  External Library Includes       
;-------------------------------------------------------------------------------


;-------------------------------------------------------------------------------
; Check if project uses AIS Functions. If so we call a special init to 
; precompile needed code. Otherwise first pattern search take more time than othhers!
;-------------------------------------------------------------------------------


;-------------------------------------------------------------------------------
;   Start of scheduler and measurement
; 
;-------------------------------------------------------------------------------
schedule()  ; !!! Ths is the main entry!!!!
   
;-------------------------------------------------------------------------------
; Start of Workflow
;   Measurement Workflows
;-------------------------------------------------------------------------------
Func measurement ()

  Local $LoopErrorHandling = 0
  Local $DoNotExecute = False

  __StcAisGlobalConfigs( $g__StcUseLegacyStaticAnalyseImages)
  
  OnWorkflowStart( "d6d5cd67-e0d2-422d-a95a-1b49705cb3b2",  STC_GetWorkflowProtocolTemplate() )

  ;---------------------------------------------------------------------------
  ;  Master Daten Section
  ;-------------------------------------------------------------------------------
  ActionStepFeedbackEx( "Upload Document ()", "Activity", "d6d5cd67-e0d2-422d-a95a-1b49705cb3b2", "Info", "Process name    : Batch Document Uploader.", @ScriptLineNumber ) 
  ActionStepFeedbackEx( "Upload Document ()", "Activity", "d6d5cd67-e0d2-422d-a95a-1b49705cb3b2", "Info", "Activity name   : Upload Document.", @ScriptLineNumber ) 
  ActionStepFeedbackEx( "Upload Document ()", "Activity", "d6d5cd67-e0d2-422d-a95a-1b49705cb3b2", "Info", "Workflow type is: " & StcGetWfeWorkflowType() & ".", @ScriptLineNumber ) 
  ActionStepFeedbackEx( "Upload Document ()", "Activity", "d6d5cd67-e0d2-422d-a95a-1b49705cb3b2", "Info", "Executed by user: '" & @UserName & "' at machine name: '" & @ComputerName & "'. OS-Version: " & @OSVersion & ".", @ScriptLineNumber ) 

  ;-------------------------------------------------------------------------------
  ;   Measurement Point INIT-Section 
  ;-------------------------------------------------------------------------------

  ; Simple Measurement Point Registration 
   
   ; Timer related Measurement Point Registration
   
   
 ;-----------------------------------------------------------------------
 ;# Start of Initialization Section: Workflow Initialization;
 ;-----------------------------------------------------------------------
 Local $__gStcInitSectionSuccess = True ; may set to false in one of the herein called init section AS
     
    If $__gStcInitSectionSuccess  Then  
         
   ;---------<[ Auto generated WFE debug prefix section!  ]>------
   _StcVarSysResetValidation()
   $AsLastResultValue = $AsResultValue
   $AsLastResultInfo  = $AsResultInfo
   $AsResultValue = 0
   $AsResultInfo  = "no Info"
   $g_LastAction = "Activity Parameters"
   
     
   
   _DbgSetCurrentLevel( 2 )
   OnPrefixCodeExecuted( "2d9e97d1-1690-4547-99c6-5d244dc755cd", "Activity_Parameters", False, "EhNormal", @ScriptLineNumber)
   If True Then
   $LogfileIdent = 2 
   $TransStep = ("Activity Parameters")
   Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
   $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
   ;---------<[ End of debug prefix section!  ]>------------------
   
   ;-----------------------------------------------------------------------
   ;## Start of Activity Parameter Definitions: Activity Parameters;
   ;-----------------------------------------------------------------------
   Local $__AcitivtyParameter_Path = StcGetLogFileFolder() & "\InputActivityParameters.json"
   Local $__AcitivtyParameter_Success = __StcInitInParameters($__AcitivtyParameter_Path, "2d9e97d1-1690-4547-99c6-5d244dc755cd", @ScriptLineNumber, "Activity Parameters"    ) 
   Local $__AcitivtyParameter_Value ; the last retrieved value as it is used within the variable system. Intrinic is as it is, complex is Jason
   Local $__ActivityParameter_Display ; the value i an always readable format.
   
   If $__AcitivtyParameter_Success Then
   Local $__AcitivtyParameter_ReadSuccess = True;
      ; List of in variables 
   If Not $__AcitivtyParameter_ReadSuccess then  $__gStcInitSectionSuccess = False  ; set global error at init flag!
   
   
   ; Register process out variables:
   Else
      $__gStcInitSectionSuccess=False  ; set global error at init flag!
   Endif
   
   $Run = CheckErrorHandling(1, $__AcitivtyParameter_Success ? 1 : -1 , "2d9e97d1-1690-4547-99c6-5d244dc755cd", @ScriptLineNumber, "Activity Parameters"  ) 
   
   
   ;-----------------------------------------------------------------------
   ;## End of Activity Parameter Definitions: Activity Parameters;
   ;-----------------------------------------------------------------------
   
   
   EndIf  
    
   ;---------<[ End of debug suffix section!  ]>------------------
 
    EndIf
    OnEndOfInitSectionItem( "2d9e97d1-1690-4547-99c6-5d244dc755cd", true )
        
    If $__gStcInitSectionSuccess  Then  
         
   ;---------<[ Auto generated WFE debug prefix section!  ]>------
   _StcVarSysResetValidation()
   $AsLastResultValue = $AsResultValue
   $AsLastResultInfo  = $AsResultInfo
   $AsResultValue = 0
   $AsResultInfo  = "no Info"
   $g_LastAction = "Pattern Gallery"
   
     
   
   _DbgSetCurrentLevel( 2 )
   OnPrefixCodeExecuted( "ce502395-0c9d-4d1b-8938-53027667c188", "Pattern_Gallery", True, "EhNormal", @ScriptLineNumber)
   If _StcVarSysValidateVarReference( "Pattern_Gallery", "ce502395-0c9d-4d1b-8938-53027667c188", @ScriptLineNumber, "EhNormal" ) Then
   $LogfileIdent = 2 
   $TransStep = ("Pattern Gallery")
   Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
   $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
   ;---------<[ End of debug prefix section!  ]>------------------
   
   ;-----------------------------------------------------------------------
   ;## Start of transaction step: Pattern Gallery;
   ;-----------------------------------------------------------------------
   $ErrorHandling = 1
   
   	
   
   ;-----------------------------------------------------------------------
   ;## End of transaction step: Pattern Gallery;
   ;-----------------------------------------------------------------------
   
   
   EndIf  
    
   ;---------<[ End of debug suffix section!  ]>------------------
 
    EndIf
    OnEndOfInitSectionItem( "ce502395-0c9d-4d1b-8938-53027667c188", true )
        
    If $__gStcInitSectionSuccess  Then  
         
   ;---------<[ Auto generated WFE debug prefix section!  ]>------
   _StcVarSysResetValidation()
   $AsLastResultValue = $AsResultValue
   $AsLastResultInfo  = $AsResultInfo
   $AsResultValue = 0
   $AsResultInfo  = "no Info"
   $g_LastAction = "Settings"
   
   $OutboundVar_BasePathOut = Default 
     
   Global $AutoProp_BasePath = "%temp%", $AutoProp_BasePath_HasVarMapping = False 
   Global $AutoProp_RemoveBasePathSubfolderOnExit = True, $AutoProp_RemoveBasePathSubfolderOnExit_HasVarMapping = False   
   Global $AutoProp_GenerateSubFolder = True, $AutoProp_GenerateSubFolder_HasVarMapping = False   
   Global $AutoProp_UseAllowedPathsLimitation = False, $AutoProp_UseAllowedPathsLimitation_HasVarMapping = False   
   Global $AutoProp_ProxySettingAsInt = 0, $AutoProp_ProxySettingAsInt_HasVarMapping = False   
   Global $AutoProp_IsUseProxyAuthChecked = False, $AutoProp_IsUseProxyAuthChecked_HasVarMapping = False   
   Global $AutoProp_ProxyUrl = "", $AutoProp_ProxyUrl_HasVarMapping = False 
   Global $AutoProp_ProxyAccount = "{""Magic"":""$__ServiceTraceVariable__$"",""Content"":{""Type"":8,""UserName"":"""",""Token"":"""",""Password"":"""",""CryptUser"":"""",""CryptPassword"":""""},""Name"":""Name"",""Id"":""50d2015f-f9bf-4dc4-ac64-24524dd6a6f6"",""Access"":""RW"",""Tags"":null}", $AutoProp_ProxyAccount_HasVarMapping = False   
   Global $AutoProp_ProxyAccountAsString = "{""Magic"":""$__ServiceTraceVariable__$"",""Content"":{""Type"":8,""UserName"":"""",""Token"":"""",""Password"":"""",""CryptUser"":"""",""CryptPassword"":""""},""Name"":""Name"",""Id"":""50d2015f-f9bf-4dc4-ac64-24524dd6a6f6"",""Access"":""RW"",""Tags"":null}", $AutoProp_ProxyAccountAsString_HasVarMapping = False 
   
   _DbgSetCurrentLevel( 2 )
   OnPrefixCodeExecuted( "35f6df8c-5d22-41a6-8c66-581d7388761a", "Settings", True, "EhNormal", @ScriptLineNumber)
   If _StcVarSysValidateVarReference( "Settings", "35f6df8c-5d22-41a6-8c66-581d7388761a", @ScriptLineNumber, "EhNormal" ) Then
   $LogfileIdent = 2 
   $TransStep = ("Settings")
   Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
   $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
   ;---------<[ End of debug prefix section!  ]>------------------
   
   ;-----------------------------------------------------------------------
   ;## Start of transaction step: Settings;
   ;-----------------------------------------------------------------------
   $__gStcRemoveBasePathSubfolderOnExit = $AutoProp_RemoveBasePathSubfolderOnExit
   $translatedBasePath = TranslateText($AutoProp_BasePath)
   
   ;Handle run-sub folder generation & removal
   if $AutoProp_GenerateSubFolder then 
   $OutboundVar_BasePathOut = $translatedBasePath & "\" & $StcRunGuid & "\"
   ActionStepFeedbackEx("Workflow Settings","Action","35f6df8c-5d22-41a6-8c66-581d7388761a", "Info", "An additional subfolder: " & $StcRunGuid &" will be generated for the current workflow run.",0)
   _NgCoreLogAnnotationText( "35f6df8c-5d22-41a6-8c66-581d7388761a", "An additional subfolder: " & $StcRunGuid &" was generated for the current workflow run.")
   If True then
   ActionStepFeedbackEx("Workflow Settings","Action","35f6df8c-5d22-41a6-8c66-581d7388761a", "Info", "Removing Base Path subfolder on exit is enabled.",0)
   _NgCoreLogAnnotationText( "35f6df8c-5d22-41a6-8c66-581d7388761a", "Removing Base Path subfolder on exit was enabled.")
   else
   ActionStepFeedbackEx("Workflow Settings","Action","35f6df8c-5d22-41a6-8c66-581d7388761a", "Info", "Removing Base Path subfolder on exit is disabled.",0)
   EndIf
   
   else
   
   $OutboundVar_BasePathOut = $translatedBasePath & "\"
   
   EndIf
   
   
   
   ;Base Path registration
   If FileExists($translatedBasePath) Then
   
   	StcSetBasePathFolder($OutboundVar_BasePathOut)
   
   	Local $p_ResultText
   	Local $__Success = True ; local check for NgCore Call success
   	$__Success = __StcNgRegisterBasePath($OutboundVar_BasePathOut, $p_ResultText, "35f6df8c-5d22-41a6-8c66-581d7388761a",  @ScriptLineNumber, "Settings")
   
   	Local $__BasePathFeedbackType = $__Success ? "Info" : "Error"
   	Local $__BasePathMessage = $__Success ? "StwsBasePath registration for the current run succeeded: '" & $OutboundVar_BasePathOut & "'" _
   			  : ("StwsBasePath registration for the current run failed. Error details: " & $p_ResultText)
   
   	ActionStepFeedbackEx("Workflow Settings","Action","35f6df8c-5d22-41a6-8c66-581d7388761a", $__BasePathFeedbackType, $__BasePathMessage, 0)
   	_NgCoreLogAnnotationText( "35f6df8c-5d22-41a6-8c66-581d7388761a", $__BasePathMessage)
   
   	;Allowed paths registration
   	
   	If $__Success Then
   					__DisableAllowedPathsLimitation("35f6df8c-5d22-41a6-8c66-581d7388761a",  @ScriptLineNumber, "Settings")
   			writelog("Allowed Path Limitation for File Operations is disabled")
   			ActionStepFeedbackEx("Workflow Settings","Action","35f6df8c-5d22-41a6-8c66-581d7388761a", "Info", "Allowed Path Limitation for File Operations is disabled.",0)
   		
   		$__Success = __StcNgRegisterProxySettings($AutoProp_ProxySettingAsInt, $AutoProp_ProxyUrl, $AutoProp_IsUseProxyAuthChecked, $AutoProp_ProxyAccount, "35f6df8c-5d22-41a6-8c66-581d7388761a",  @ScriptLineNumber, "Settings")
   	EndIf
   
   	; if one of the allowed pahts calls failed, we go to error state, but only if error handling is enabled:
   	$__gStcInitSectionSuccess = CheckErrorHandling(1, $__Success ? 1 : -1 , "35f6df8c-5d22-41a6-8c66-581d7388761a", @ScriptLineNumber, "Settings" ) < 0 ? False : True
   	$__gStcGenerateSubBasePathFolder = $AutoProp_GenerateSubFolder
   
   	$Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "35f6df8c-5d22-41a6-8c66-581d7388761a", @ScriptLineNumber, "Settings"  ) 
   
   Else
   
   	ActionStepFeedbackEx("Workflow Settings","Action","35f6df8c-5d22-41a6-8c66-581d7388761a", "Error", "Base path does not exist: '" & $translatedBasePath & "'", 0)
   	_NgCoreLogAnnotationText( "35f6df8c-5d22-41a6-8c66-581d7388761a", "Base path does not exist: '" & $translatedBasePath & "'")
   	$__gStcInitSectionSuccess = False
   	$Run = -1;
   
   EndIf
   
   
   ;-----------------------------------------------------------------------
   ;## End of transaction step: Settings;
   ;-----------------------------------------------------------------------
   
   
   EndIf  
     Global $Settings_BasePath = $OutboundVar_BasePathOut  ; declare variable source. Will be referenced by other action steps 
   
   ;---------<[ End of debug suffix section!  ]>------------------
 
    EndIf
    OnEndOfInitSectionItem( "35f6df8c-5d22-41a6-8c66-581d7388761a", true )
       
 OnEndOfInitSection( "1c23ed8f-335a-4518-b89a-1e7e3ba58cdc", true )
 ; Now it's save to enable the protector, because it may use variables defined by SBVs!
 StcProtectorEnable()
 ;-----------------------------------------------------------------------
 ;# End of Initialization Section: Workflow Initialization;
 ;-----------------------------------------------------------------------
  

   
 ;----------------<-----------------------------------------------------------
 ;--------------<
 ;------------<   Measurement: <Activity Workflow>
 ;--------------< 
 ;----------------<-----------------------------------------------------------
    Global $MeasurementName = "Activity Workflow"
    Global $Pass_Activity_Workflow
    Global $UsedErrorCycles = 0
    Global $g_LastControlBlockLevelName = ""
    Global $g_ControlBlockLevelName = "MainMeasurement"
    Global $PrepareCodeSuccess = True
    Global $MeasurementOverallTimeTimer = TimerStart()
    
    ; Set Default current measurement iteration!
    $enter = 1
 
    ; set default uuid as default uuid for actioin feedback:
    ActionFeedbackSetDefaultUuid("5b24049e-4411-439e-bca4-448aba59920f")
    ; Inform user about the disabled STC-Guard. In case of Design Mode run, the Guard may also disabled!
    If $StcDisableGuard Then ActionStepFeedbackEx( "StcGuardMode", "Action", default, "Warning", "The STC Guard is disabled by project setting.!", @ScriptLineNumber )
 
    
    StcSetGeneralTimeout( 5, True ) ;called internally!
    $g_StcMaxConfiguredExecutionTries = 1   ; internal STC funclib used value
    Local $errorcycles = $g_StcMaxConfiguredExecutionTries              ;  old legacy name, may removed in the future!
    ActionStepFeedbackEx( "Activity Workflow", "Workflow", "5b24049e-4411-439e-bca4-448aba59920f", "Info", "///-[ Workflow: 'Activity Workflow' started ]-\\\", @ScriptLineNumber ) 
    If StcIsDesignModeActive()  Then
       If $g_StcMaxConfiguredExecutionTries <> 1 Then
         $g_StcMaxConfiguredExecutionTries = 1
         ActionStepFeedbackEx( "Activity Workflow", "Workflow", "5b24049e-4411-439e-bca4-448aba59920f", "Warning", "The workflow was started from WorkflowEditor in Design mode. Retries reduced to 1.", @ScriptLineNumber ) 
       EndIf
    EndIf
    Local $retrydelay = 60
 
    OnMeasurementStart( $MeasurementName, "5b24049e-4411-439e-bca4-448aba59920f" )
    
 
    
    ;<<<<<<<<<<<<<       P r e p a r e  -- S e c t i o n    >>>>>>>>>>>>>>>>>>>>
    ; Some action steps may have prepare code which must be executed before the measurement starts.
 
 
    Do
       Local  $x = 0
       $Run = 1  ; don't make that local or global !!!
 
       ; if prepare code failed, so do abort workflow before it was started!
       If Not $PrepareCodeSuccess Then $Run = -1
         
       ;---------------------------------------------------------------------------
       ; Applications values
       ;---------------------------------------------------------------------------
       
             
       _StcTraDaHandleErrors() ; check here if TraceData Bridge error has occurred! If so script will be terminated!
 
       
       ;---------------------------------------------------------------------------
       ; Check if one of the InitSection AS has failed. If so, write action step feadback a terminate workflow run!
       If Not $__gStcInitSectionSuccess  Then
         ActionStepFeedbackEx( "Activity Workflow", "Workflow", "5b24049e-4411-439e-bca4-448aba59920f", "Error", "One of the steps in the initialize section has failed, so further execution is not possible!", @ScriptLineNumber ) 
         $Run = -1 ; abort further execution!
       EndIf
 
       ;---------------------------------------------------------------------------
       ; Start of Workflow
       ;---------------------------------------------------------------------------
       $Errortext = ""
   
       If $run > 0 AND NOT OnCheckAbortState() Then
          OnMeasurementBlockStart("Transaction", "7929da67-e891-4b73-9d65-09e4f8225a4f", 1, "Transaction")
            
   ;---------<[ Auto generated WFE debug prefix section!  ]>------
   _StcVarSysResetValidation()
   $AsLastResultValue = $AsResultValue
   $AsLastResultInfo  = $AsResultInfo
   $AsResultValue = 0
   $AsResultInfo  = "no Info"
   $g_LastAction = "Transaction"
   
     
   
   _DbgSetCurrentLevel( 2 )
   OnPrefixCodeExecuted( "7929da67-e891-4b73-9d65-09e4f8225a4f", "Transaction", False, "$Dbg.Item.ActivityErrorHandling", @ScriptLineNumber)
   If True Then
   $LogfileIdent = 2 
   $TransStep = ("Transaction")
   Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
   $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
   ;---------<[ End of debug prefix section!  ]>------------------
   
   ;---------------------------------------------------------------------------
   ;## Start of Transaction: Transaction;
   ;---------------------------------------------------------------------------
   
   OnTransactionStart("Transaction", "7929da67-e891-4b73-9d65-09e4f8225a4f")
   $g_LastControlBlockLevelName = $g_ControlBlockLevelName
   $g_ControlBlockLevelName = "Transaction"
   
   $__gStcTransactionSqx += 1
   $g_TransAction = "Transaction" 
   $TransStep = "Transaction"
   
   If CheckBlockIteration() Then
      OnActionStart("App Session", "76001479-e2bf-40cd-b541-a1b4c7f564ad", 2, "App Session")
         
      ;---------<[ Auto generated WFE debug prefix section!  ]>------
      _StcVarSysResetValidation()
      $AsLastResultValue = $AsResultValue
      $AsLastResultInfo  = $AsResultInfo
      $AsResultValue = 0
      $AsResultInfo  = "no Info"
      $g_LastAction = "App Session"
      
        
      Global $AutoProp_Success = False, $AutoProp_Success_HasVarMapping = False   
      Global $AutoProp_KeepOutMouse = False, $AutoProp_KeepOutMouse_HasVarMapping = False   
      Global $AutoProp_RepeatMouseKeepOut = False, $AutoProp_RepeatMouseKeepOut_HasVarMapping = False   
      Global $AutoProp_MouseParkingPositionValue = 1, $AutoProp_MouseParkingPositionValue_HasVarMapping = False   
      
      _DbgSetCurrentLevel( 3 )
      OnPrefixCodeExecuted( "76001479-e2bf-40cd-b541-a1b4c7f564ad", "App_Session", True, "EhNormal", @ScriptLineNumber)
      If _StcVarSysValidateVarReference( "App_Session", "76001479-e2bf-40cd-b541-a1b4c7f564ad", @ScriptLineNumber, "EhNormal" ) Then
      $LogfileIdent = 3 
      $TransStep = ("App Session")
      Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
      $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
      ;---------<[ End of debug prefix section!  ]>------------------
      
      ;-----------------------------------------------------------------------
      ;### Start of transaction step: App Session;
      ;-----------------------------------------------------------------------
      
      Local $App_Session_out_Success
      
      Local $__Success = __StcNgCreateGASession( _
                                  $App_Session_out_Success, _
                                  "76001479-e2bf-40cd-b541-a1b4c7f564ad",  @ScriptLineNumber, "App Session")
      
      If $AutoProp_KeepOutMouse Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
      
      If $__Success Then
      	;-------------------------------------------------------------------------------------------
      	; 	
      		If CheckBlockIteration() Then
                  OnActionStart("AI OCR (screen-based)", "31ce5b67-807a-4a1a-80d4-5d546af3de15", 3, "AI OCR (screen-based)")
      			If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                      
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "AI OCR (screen-based)"
          
          $OutboundVar_FindCoordinate = Default 
          $OutboundVar_TextRecognized = Default 
          $OutboundVar_MatchedText = Default 
          $OutboundVar_MultiMatchCount = Default 
            
          Global $AutoProp_RelativeTo = "0;0", $AutoProp_RelativeTo_HasVarMapping = False   
          Global $AutoProp_RelativeOffset = "0;0", $AutoProp_RelativeOffset_HasVarMapping = False   
          Global $AutoProp_SearchText = "Documents", $AutoProp_SearchText_HasVarMapping = False 
          Global $AutoProp_TextAffinity = 90, $AutoProp_TextAffinity_HasVarMapping = False   
          Global $AutoProp_ForceBlackBackground = False, $AutoProp_ForceBlackBackground_HasVarMapping = False   
          Global $AutoProp_IsNoiseFilterEnabled = False, $AutoProp_IsNoiseFilterEnabled_HasVarMapping = False   
          Global $AutoProp_EnhanceContrast = False, $AutoProp_EnhanceContrast_HasVarMapping = False   
          Global $AutoProp_ColorDepth = 0, $AutoProp_ColorDepth_HasVarMapping = False   
          Global $AutoProp_DebugModeEnabled = False, $AutoProp_DebugModeEnabled_HasVarMapping = False   
          Global $AutoProp_LastSearchActionPosition = "945;235", $AutoProp_LastSearchActionPosition_HasVarMapping = False   
          Global $AutoProp_InitialWaitTimeSec = 0, $AutoProp_InitialWaitTimeSec_HasVarMapping = False   
          Global $AutoProp_Retries = 3, $AutoProp_Retries_HasVarMapping = False   
          Global $AutoProp_GetModelAsXml = "<?xml version=""1.0""?>" & @CRLF & _
"<OpenCvTextRecognitionModel xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" & @CRLF & _
"  <UsedLanguages>" & @CRLF & _
"    <string>English</string>" & @CRLF & _
"  </UsedLanguages>" & @CRLF & _
"  <TextEngineVersion>1</TextEngineVersion>" & @CRLF & _
"  <OcrEngineVersion>3</OcrEngineVersion>" & @CRLF & _
"  <DebugModeEnabled>false</DebugModeEnabled>" & @CRLF & _
"  <Comp_SearchText>Documents</Comp_SearchText>" & @CRLF & _
"  <Comp_SearchMode>FuzzyComparison</Comp_SearchMode>" & @CRLF & _
"  <Comp_TextAffinity>90</Comp_TextAffinity>" & @CRLF & _
"  <IsNoiseFilterEnabled>false</IsNoiseFilterEnabled>" & @CRLF & _
"  <IsGrayModeEnabled>false</IsGrayModeEnabled>" & @CRLF & _
"  <AllowedCharacters />" & @CRLF & _
"  <ScanArea>" & @CRLF & _
"    <X>0</X>" & @CRLF & _
"    <Y>0</Y>" & @CRLF & _
"    <Width>0</Width>" & @CRLF & _
"    <Height>0</Height>" & @CRLF & _
"  </ScanArea>" & @CRLF & _
"  <ForceBlackMode>false</ForceBlackMode>" & @CRLF & _
"  <ScriptInfo_ActivityGuid>9ef1fb3a-8b70-41ea-80e8-e109d1bc955a</ScriptInfo_ActivityGuid>" & @CRLF & _
"  <ScriptInfo_ActivityName>AI OCR (screen-based)</ScriptInfo_ActivityName>" & @CRLF & _
"  <OriginalScreenSize>" & @CRLF & _
"    <Width>1920</Width>" & @CRLF & _
"    <Height>1080</Height>" & @CRLF & _
"  </OriginalScreenSize>" & @CRLF & _
"  <RelativeToAnchor>" & @CRLF & _
"    <X>0</X>" & @CRLF & _
"    <Y>0</Y>" & @CRLF & _
"  </RelativeToAnchor>" & @CRLF & _
"  <RelativeOffset>" & @CRLF & _
"    <X>0</X>" & @CRLF & _
"    <Y>0</Y>" & @CRLF & _
"  </RelativeOffset>" & @CRLF & _
"  <HasRelativeToSet>false</HasRelativeToSet>" & @CRLF & _
"  <LastSearchActionPosition>" & @CRLF & _
"    <X>945</X>" & @CRLF & _
"    <Y>235</Y>" & @CRLF & _
"  </LastSearchActionPosition>" & @CRLF & _
"  <PreScaleFactor>1</PreScaleFactor>" & @CRLF & _
"  <DummyValue>0</DummyValue>" & @CRLF & _
"  <OpenCvImplVers>1</OpenCvImplVers>" & @CRLF & _
"  <TesseractVersion>4</TesseractVersion>" & @CRLF & _
"  <ImageSoure>Screen</ImageSoure>" & @CRLF & _
"  <ColorDepth>0</ColorDepth>" & @CRLF & _
"  <EnhanceContrast>false</EnhanceContrast>" & @CRLF & _
"  <EnhanceResolution>false</EnhanceResolution>" & @CRLF & _
"  <RemoveShadows>false</RemoveShadows>" & @CRLF & _
"  <OcrStrategy>KiOnly</OcrStrategy>" & @CRLF & _
"  <AreaMode>Pixels</AreaMode>" & @CRLF & _
"  <Orientation>Automatic</Orientation>" & @CRLF & _
"  <BypassProcessingPipeline>false</BypassProcessingPipeline>" & @CRLF & _
"  <RelativeScanArea>" & @CRLF & _
"    <Location>" & @CRLF & _
"      <X>0</X>" & @CRLF & _
"      <Y>0</Y>" & @CRLF & _
"    </Location>" & @CRLF & _
"    <Size>" & @CRLF & _
"      <Width>0</Width>" & @CRLF & _
"      <Height>0</Height>" & @CRLF & _
"    </Size>" & @CRLF & _
"    <X>0</X>" & @CRLF & _
"    <Y>0</Y>" & @CRLF & _
"    <Width>0</Width>" & @CRLF & _
"    <Height>0</Height>" & @CRLF & _
"  </RelativeScanArea>" & @CRLF & _
"  <ImageFileFullPath />" & @CRLF & _
"  <BinaryFolderPath>E:\MuleSoft\RPABuilder\NgCore\bin\3rdParty\OCR-OpenCv</BinaryFolderPath>" & @CRLF & _
"  <LanguageFilesSubFolderName>tessdata</LanguageFilesSubFolderName>" & @CRLF & _
"  <DesignTimeImageFullPath />" & @CRLF & _
"  <UsedLanguage>English</UsedLanguage>" & @CRLF & _
"</OpenCvTextRecognitionModel>", $AutoProp_GetModelAsXml_HasVarMapping = False 
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "31ce5b67-807a-4a1a-80d4-5d546af3de15", "AI_OCR_28screen2Dbased29", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "AI_OCR_28screen2Dbased29", "31ce5b67-807a-4a1a-80d4-5d546af3de15", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("AI OCR (screen-based)")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          If $AutoProp_InitialWaitTimeSec >= 0 Then
              If $AutoProp_InitialWaitTimeSec > 300 Then $AutoProp_InitialWaitTimeSec = 300
          	Sleep ($AutoProp_InitialWaitTimeSec*1000)
          EndIf
          
          Local $RelativeTo = "0;0;0;0" 
          If $AutoProp_RelativeTo_HasVarMapping Then
             $RelativeTo = $AutoProp_RelativeTo  ; Must be in the format of: "X;Y;dx;dy". If set, the Search area postion is replaced by this coordinates.
          EndIF
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: AI OCR (screen-based);
          ;-----------------------------------------------------------------------
          Local $OutboundVar_FindCoordinate = default ; in case of wait for pattern w/o search patterns these var is not declared, so we do here a dummy declare.  
          Local $OutboundVar_TextRecognized = "" 
          
          Local $__Retries = 0
          If "FuzzyComparison" <> "None" Then 
             $__Retries = $AutoProp_Retries
          EndIf   
          
          Local $__OpenCvBinaryFolder = __StcOpenCv_RuntimeModulPath()
          Local $__Success = __StcNgTextRecognitionOpenCvScreen( $AutoProp_GetModelAsXml, TranslateText( $AutoProp_SearchText ), $RelativeTo, $AutoProp_RelativeTo_HasVarMapping, $__Retries, _
                                                         $__OpenCvBinaryFolder, _
                                                         $OutboundVar_FindCoordinate, $OutboundVar_TextRecognized, $OutBoundVar_MultiMatchCount, $OutBoundVar_MatchedText, _
                                                        "31ce5b67-807a-4a1a-80d4-5d546af3de15", @scriptlinenumber, "AI OCR (screen-based)")  
          ; FuzzyComparison
          ; $activity.GetRuntimePackageInfoId
              
          If "FuzzyComparison" = "None" Then
             _NgCoreLogAnnotationText( "31ce5b67-807a-4a1a-80d4-5d546af3de15", "Only recognized text was set. Text found: '" & StcStringTruncate($OutboundVar_TextRecognized,25) & "'." )	
          Else
             If $OutBoundVar_MultiMatchCount <= 0 Then                                           
                _NgCoreLogAnnotationText( "31ce5b67-807a-4a1a-80d4-5d546af3de15", "Search mode 'Fuzzy Comparison' searching for '" & StcStringTruncate($AutoProp_SearchText)  & "'. Text was not found." )	
             Else
                _NgCoreLogAnnotationText( "31ce5b67-807a-4a1a-80d4-5d546af3de15", "Search mode 'Fuzzy Comparison' searching for '" & StcStringTruncate($AutoProp_SearchText)  & "'. Text was found '"&$OutBoundVar_MultiMatchCount&"' times." )	
             EndIf 
          EndIf   
          $Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "31ce5b67-807a-4a1a-80d4-5d546af3de15", @ScriptLineNumber, "AI OCR (screen-based)"  ) 
          
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: AI OCR (screen-based);
          ;-----------------------------------------------------------------------
          
          
          EndIf  
            Global $AI_OCR_28screen2Dbased29_Find_Coordinate = $OutboundVar_FindCoordinate  ; declare variable source. Will be referenced by other action steps 
           Global $AI_OCR_28screen2Dbased29_Recognized_Text = $OutboundVar_TextRecognized  ; declare variable source. Will be referenced by other action steps 
           Global $AI_OCR_28screen2Dbased29_Matched_Text = $OutboundVar_MatchedText  ; declare variable source. Will be referenced by other action steps 
           Global $AI_OCR_28screen2Dbased29_Matches_Count = $OutboundVar_MultiMatchCount  ; declare variable source. Will be referenced by other action steps 
          
          ;---------<[ End of debug suffix section!  ]>------------------
      
                  OnActionEnd("AI OCR (screen-based)", $run, "31ce5b67-807a-4a1a-80d4-5d546af3de15", 3, "AI OCR (screen-based)")
      		EndIf
      			
      		If CheckBlockIteration() Then
                  OnActionStart("Mouse Actions1", "5761e013-d733-4f20-8050-47e8a5c651a6", 3, "Mouse Actions")
      			If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                      
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Mouse Actions1 (Mouse Actions relative to ""AI OCR (screen-based)"")"
          
            
          Global $AutoProp_RelativeToCoordinate = _StcVarSysResolveVarReference( "AI_OCR_28screen2Dbased29_Find_Coordinate"), $AutoProp_RelativeToCoordinate_HasVarMapping = True 
          Global $AutoProp_MouseSpeed = 4, $AutoProp_MouseSpeed_HasVarMapping = False   
          Global $AutoProp_MouseClickDownDelay = 200, $AutoProp_MouseClickDownDelay_HasVarMapping = False   
          Global $AutoProp_MouseClickUpDelay = 10, $AutoProp_MouseClickUpDelay_HasVarMapping = False   
          
               Global $AutoProp_ModifierAndMouseStatus[1] 
                  Global $AutoProp_ClicksCount[1] 
                  Global $AutoProp_MouseActionDelay[1] 
                  Global $AutoProp_IsMouseActionDelayEnabled[1] 
                  Global $AutoProp_ClickPoint_X[1] 
                  Global $AutoProp_ClickPoint_Y[1] 
                  Global $AutoProp_ClickMouseButtonText[1] 
                  Global $AutoProp_MouseModifierText[1] 
                               $AutoProp_ModifierAndMouseStatus[0] = False                   
                      $AutoProp_ClicksCount[0] = 1                       
                      $AutoProp_MouseActionDelay[0] = 500                       
                          $AutoProp_IsMouseActionDelayEnabled[0] = False                   
                      $AutoProp_ClickPoint_X[0] = 2                       
                      $AutoProp_ClickPoint_Y[0] = 4                       
                  $AutoProp_ClickMouseButtonText[0] = "Left"                         
                  $AutoProp_MouseModifierText[0] = "None"                         
            
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "5761e013-d733-4f20-8050-47e8a5c651a6", "Mouse_Actions1_28Mouse_Actions_relative_to_22AI_OCR_28screen2Dbased292229", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Mouse_Actions1_28Mouse_Actions_relative_to_22AI_OCR_28screen2Dbased292229", "5761e013-d733-4f20-8050-47e8a5c651a6", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Mouse Actions1 (Mouse Actions relative to ""AI OCR (screen-based)"")")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Mouse Actions1 (Mouse Actions relative to ""AI OCR (screen-based)"");
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          Local $zeroPointPositionX = StcCoordinates_X($AutoProp_RelativeToCoordinate) 
          Local $zeroPointPositionY = StcCoordinates_Y($AutoProp_RelativeToCoordinate) 
          If $AutoProp_MouseClickDownDelay <> 10  Then  AutoItSetOption( "MouseClickDownDelay", $AutoProp_MouseClickDownDelay )
          If $AutoProp_MouseClickUpDelay <> 10  Then  AutoItSetOption( "MouseClickDelay", $AutoProp_MouseClickUpDelay )
          
          for $idx = 0 to  UBound( $AutoProp_ClicksCount ) - 1 
              Local $XMouse1 = $zeroPointPositionX + $AutoProp_ClickPoint_X[$idx]
              Local $YMouse1 = $zeroPointPositionY + $AutoProp_ClickPoint_Y[$idx]
          	 Local $mouseActionDelay = 0
          	If $AutoProp_IsMouseActionDelayEnabled[$idx] Then $mouseActionDelay = $Autoprop_MouseActionDelay[$idx]
          
             If $AutoProp_MouseModifierText[$idx] <> "None" Then 
                StcHoldMouseModifierKey($AutoProp_MouseModifierText[$idx])
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "5761e013-d733-4f20-8050-47e8a5c651a6", @ScriptLineNumber, "Mouse Actions1 (Mouse Actions relative to ""AI OCR (screen-based)"")")
                StcReleaseMouseModifierKey($AutoProp_MouseModifierText[$idx])
             else
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "5761e013-d733-4f20-8050-47e8a5c651a6", @ScriptLineNumber, "Mouse Actions1 (Mouse Actions relative to ""AI OCR (screen-based)"")")
             EndIf
          Next
          
          If $AutoProp_MouseClickDownDelay <> 10 Then AutoItSetOption( "MouseClickDownDelay", 10)
          If $AutoProp_MouseClickUpDelay <> 10 Then AutoItSetOption( "MouseClickDelay", 10)
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Mouse Actions1 (Mouse Actions relative to ""AI OCR (screen-based)"");
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                  OnActionEnd("Mouse Actions1", $run, "5761e013-d733-4f20-8050-47e8a5c651a6", 3, "Mouse Actions")
      		EndIf
      			
      		If CheckBlockIteration() Then
                  OnActionStart("Image Search1", "a0ade1a6-e1d6-4aa2-8946-df2ee3dd53dd", 3, "Image Search")
      			If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                      
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Image Search1 (Image Search for Appear)"
          
          $OutboundVar_FindCoordinate = Default 
            
          Global $AutoProp_PatternImageFileName = "IMGP_000008.bmp", $AutoProp_PatternImageFileName_HasVarMapping = False 
          Global $AutoProp_SearchAreaImageFileName = "IMGS_000007.jpg", $AutoProp_SearchAreaImageFileName_HasVarMapping = False 
          Global $AutoProp_Timeout = 5, $AutoProp_Timeout_HasVarMapping = False   
          Global $AutoProp_RelativeToCoordinate = "0;0", $AutoProp_RelativeToCoordinate_HasVarMapping = False   
          Global $AutoProp_IsSearchAreaFullScreen = True, $AutoProp_IsSearchAreaFullScreen_HasVarMapping = False   
          Global $AutoProp_RequiredPercent = 95, $AutoProp_RequiredPercent_HasVarMapping = False   
          Global $AutoProp_EdgeDetectionThreshold = 10, $AutoProp_EdgeDetectionThreshold_HasVarMapping = False   
          Global $AutoProp_HideMouse = False, $AutoProp_HideMouse_HasVarMapping = False   
          Global $AutoProp_WaitForImagePosStabilization = False, $AutoProp_WaitForImagePosStabilization_HasVarMapping = False   
          Global $AutoProp_TimeForImagePosStabilization_ms = 500, $AutoProp_TimeForImagePosStabilization_ms_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_IsLowPerformanceSearch = True, $AutoProp_IsLowPerformanceSearch_HasVarMapping = False   
          Global $AutoProp_InterruptTime = 100, $AutoProp_InterruptTime_HasVarMapping = False   
          Global $AutoProp_PerformanceLimit = 60, $AutoProp_PerformanceLimit_HasVarMapping = False   
          Global $AutoProp_SearchForPictureAppear = True, $AutoProp_SearchForPictureAppear_HasVarMapping = False   
          Global $AutoProp_SearchArea_X = 0, $AutoProp_SearchArea_X_HasVarMapping = False   
          Global $AutoProp_SearchArea_Y = 0, $AutoProp_SearchArea_Y_HasVarMapping = False   
          Global $AutoProp_SearchArea_Width = 1920, $AutoProp_SearchArea_Width_HasVarMapping = False   
          Global $AutoProp_SearchArea_Height = 1080, $AutoProp_SearchArea_Height_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_X = 1364, $AutoProp_PatternImageRect_X_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_Y = 907, $AutoProp_PatternImageRect_Y_HasVarMapping = False   
          Global $AutoProp_AlgorithmName = 1, $AutoProp_AlgorithmName_HasVarMapping = False   
          Global $AutoProp_ThresholdOrMaskValue = 10, $AutoProp_ThresholdOrMaskValue_HasVarMapping = False   
          Global $AutoProp_ImageSearchModeId = 0, $AutoProp_ImageSearchModeId_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "a0ade1a6-e1d6-4aa2-8946-df2ee3dd53dd", "Image_Search1_28Image_Search_for_Appear29", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Image_Search1_28Image_Search_for_Appear29", "a0ade1a6-e1d6-4aa2-8946-df2ee3dd53dd", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Image Search1 (Image Search for Appear)")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of Transaction step: Image Search1 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          If @compiled = TRUE Then
              FileInstall("Images\IMGP_000008.bmp", "IMGP_000008.bmp", 1)
              FileInstall("Images\IMGS_000007.jpg", "IMGS_000007.jpg", 1)
          EndIf
          If $AutoProp_HideMouse then
          	Local $ImgMousePos = MouseGetPos();
          	MouseMove( $HideMousePosX, $HideMousePosY, 0 )
          EndIf
             
          $ErrorHandling = 1
          Local $__FindCoordinate = Default  
          StcImageSearch($AutoProp_PatternImageFileName , $AutoProp_SearchAreaImageFileName , $AutoProp_Timeout , $AutoProp_RelativeToCoordinate, _
                                  $AutoProp_IsSearchAreaFullScreen , $AutoProp_RequiredPercent , $AutoProp_EdgeDetectionThreshold , $AutoProp_HideMouse, _
                                  $AutoProp_WaitForImagePosStabilization , $AutoProp_TimeForImagePosStabilization_ms , $AutoProp_UseGeneralTimeout, _
                                  $AutoProp_IsLowPerformanceSearch , $AutoProp_InterruptTime , $AutoProp_PerformanceLimit , $AutoProp_SearchForPictureAppear, _
                                  $AutoProp_SearchArea_X , $AutoProp_SearchArea_Y , $AutoProp_SearchArea_Width , $AutoProp_SearchArea_Height , $AutoProp_PatternImageRect_X, _
                                  $AutoProp_PatternImageRect_Y , $AutoProp_AlgorithmName , $AutoProp_ThresholdOrMaskValue, _
                                  1920, 1080, 32, _
                                  $__FindCoordinate,"a0ade1a6-e1d6-4aa2-8946-df2ee3dd53dd", @ScriptLineNumber, "Image Search1 (Image Search for Appear)")   
          $OutboundVar_FindCoordinate = $__FindCoordinate
          If $AutoProp_HideMouse then MouseMove( $ImgMousePos[0], $ImgMousePos[1], 0 )
          ;-----------------------------------------------------------------------
          ;#### End of Transaction step: Image Search1 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          
          
          EndIf  
            Global $Image_Search1_Find_Coordinate = $OutboundVar_FindCoordinate  ; declare variable source. Will be referenced by other action steps 
          
          ;---------<[ End of debug suffix section!  ]>------------------
      
                  OnActionEnd("Image Search1", $run, "a0ade1a6-e1d6-4aa2-8946-df2ee3dd53dd", 3, "Image Search")
      		EndIf
      			
      		If CheckBlockIteration() Then
                  OnActionStart("Mouse Actions2", "6fa77bbf-9325-4e60-8ec6-f9679eda251c", 3, "Mouse Actions")
      			If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                      
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Mouse Actions2 (Mouse Actions relative to ""Image Search1"")"
          
            
          Global $AutoProp_RelativeToCoordinate = _StcVarSysResolveVarReference( "Image_Search1_Find_Coordinate"), $AutoProp_RelativeToCoordinate_HasVarMapping = True 
          Global $AutoProp_MouseSpeed = 4, $AutoProp_MouseSpeed_HasVarMapping = False   
          Global $AutoProp_MouseClickDownDelay = 200, $AutoProp_MouseClickDownDelay_HasVarMapping = False   
          Global $AutoProp_MouseClickUpDelay = 10, $AutoProp_MouseClickUpDelay_HasVarMapping = False   
          
               Global $AutoProp_ClicksCount[1] 
                  Global $AutoProp_IsMouseActionDelayEnabled[1] 
                  Global $AutoProp_ModifierAndMouseStatus[1] 
                  Global $AutoProp_MouseActionDelay[1] 
                  Global $AutoProp_ClickPoint_X[1] 
                  Global $AutoProp_ClickPoint_Y[1] 
                  Global $AutoProp_ClickMouseButtonText[1] 
                  Global $AutoProp_MouseModifierText[1] 
                           $AutoProp_ClicksCount[0] = 1                       
                          $AutoProp_IsMouseActionDelayEnabled[0] = False                   
                          $AutoProp_ModifierAndMouseStatus[0] = False                   
                      $AutoProp_MouseActionDelay[0] = 500                       
                      $AutoProp_ClickPoint_X[0] = 56                       
                      $AutoProp_ClickPoint_Y[0] = 14                       
                  $AutoProp_ClickMouseButtonText[0] = "Left"                         
                  $AutoProp_MouseModifierText[0] = "None"                         
            
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "6fa77bbf-9325-4e60-8ec6-f9679eda251c", "Mouse_Actions2_28Mouse_Actions_relative_to_22Image_Search12229", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Mouse_Actions2_28Mouse_Actions_relative_to_22Image_Search12229", "6fa77bbf-9325-4e60-8ec6-f9679eda251c", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Mouse Actions2 (Mouse Actions relative to ""Image Search1"")")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Mouse Actions2 (Mouse Actions relative to ""Image Search1"");
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          Local $zeroPointPositionX = StcCoordinates_X($AutoProp_RelativeToCoordinate) 
          Local $zeroPointPositionY = StcCoordinates_Y($AutoProp_RelativeToCoordinate) 
          If $AutoProp_MouseClickDownDelay <> 10  Then  AutoItSetOption( "MouseClickDownDelay", $AutoProp_MouseClickDownDelay )
          If $AutoProp_MouseClickUpDelay <> 10  Then  AutoItSetOption( "MouseClickDelay", $AutoProp_MouseClickUpDelay )
          
          for $idx = 0 to  UBound( $AutoProp_ClicksCount ) - 1 
              Local $XMouse1 = $zeroPointPositionX + $AutoProp_ClickPoint_X[$idx]
              Local $YMouse1 = $zeroPointPositionY + $AutoProp_ClickPoint_Y[$idx]
          	 Local $mouseActionDelay = 0
          	If $AutoProp_IsMouseActionDelayEnabled[$idx] Then $mouseActionDelay = $Autoprop_MouseActionDelay[$idx]
          
             If $AutoProp_MouseModifierText[$idx] <> "None" Then 
                StcHoldMouseModifierKey($AutoProp_MouseModifierText[$idx])
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "6fa77bbf-9325-4e60-8ec6-f9679eda251c", @ScriptLineNumber, "Mouse Actions2 (Mouse Actions relative to ""Image Search1"")")
                StcReleaseMouseModifierKey($AutoProp_MouseModifierText[$idx])
             else
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "6fa77bbf-9325-4e60-8ec6-f9679eda251c", @ScriptLineNumber, "Mouse Actions2 (Mouse Actions relative to ""Image Search1"")")
             EndIf
          Next
          
          If $AutoProp_MouseClickDownDelay <> 10 Then AutoItSetOption( "MouseClickDownDelay", 10)
          If $AutoProp_MouseClickUpDelay <> 10 Then AutoItSetOption( "MouseClickDelay", 10)
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Mouse Actions2 (Mouse Actions relative to ""Image Search1"");
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                  OnActionEnd("Mouse Actions2", $run, "6fa77bbf-9325-4e60-8ec6-f9679eda251c", 3, "Mouse Actions")
      		EndIf
      			
      		If CheckBlockIteration() Then
                  OnActionStart("Keystrokes to App Element", "0c5f3cfe-4943-4bef-9ba8-588918f45c30", 3, "Keystrokes to App Element")
      			If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                      
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Keystrokes to App Element"
          
            
          Global $AutoProp_Keystrokes = "C:\Users\mojia\Downloads\Pending Non-Strategic LOI Shipments.xlsx {ENTER}", $AutoProp_Keystrokes_HasVarMapping = False 
          Global $AutoProp_Success = False, $AutoProp_Success_HasVarMapping = False   
          Global $AutoProp_ElementXPath = "/Window/ComboBox[1]/Edit", $AutoProp_ElementXPath_HasVarMapping = False 
          Global $AutoProp_WindowTitle = "1810998 Shipment - Google Chrome - Kelvin (flexport)", $AutoProp_WindowTitle_HasVarMapping = False 
          Global $AutoProp_UseRegexToIdentifyTargetWindow = False, $AutoProp_UseRegexToIdentifyTargetWindow_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_Timeout = 5, $AutoProp_Timeout_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "0c5f3cfe-4943-4bef-9ba8-588918f45c30", "Keystrokes_to_App_Element", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Keystrokes_to_App_Element", "0c5f3cfe-4943-4bef-9ba8-588918f45c30", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Keystrokes to App Element")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Keystrokes to App Element;
          ;-----------------------------------------------------------------------
          
          Local $Keystrokes_to_App_Element_out_Success
          Local $__TranslatedWindowTitle = TranslateText($AutoProp_WindowTitle )
          Local $__TranslatedElementXPath = TranslateText($AutoProp_ElementXPath )
          
          Local $__Success = __StcNgGAKeystroke( _
                                      $__TranslatedWindowTitle, _
                                      $AutoProp_UseRegexToIdentifyTargetWindow, _
                                      $__TranslatedElementXPath, _
                                      $AutoProp_Timeout, _
                                      $Keystrokes_to_App_Element_out_Success, _
                                      "0c5f3cfe-4943-4bef-9ba8-588918f45c30",  @ScriptLineNumber, "Keystrokes to App Element")
          
          ;Using DefaultValues for InitialDelay, KeyUpDelay, KeyDownDelay because AS gives no configurability
          If $__Success Then
              StcAsSendKeystroke($g_TransAction, _
                              $AutoProp_Keystrokes, _
                              "", _
                              "", _
                              500, _
                              5, _
                              5, _
                              "0c5f3cfe-4943-4bef-9ba8-588918f45c30", _
                              @ScriptLineNumber, _
                              "Keystrokes to App Element" )
          EndIf
          
          $Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "0c5f3cfe-4943-4bef-9ba8-588918f45c30", @ScriptLineNumber, "Keystrokes to App Element"  ) 
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Keystrokes to App Element;
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                  OnActionEnd("Keystrokes to App Element", $run, "0c5f3cfe-4943-4bef-9ba8-588918f45c30", 3, "Keystrokes to App Element")
      		EndIf
      			
      		If CheckBlockIteration() Then
                  OnActionStart("Image Search", "f284ef6f-0cdb-4304-aafc-4226d1edb51d", 3, "Image Search")
      			If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                      
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Image Search (Image Search for Appear)"
          
          $OutboundVar_FindCoordinate = Default 
            
          Global $AutoProp_PatternImageFileName = "IMGP_000016.bmp", $AutoProp_PatternImageFileName_HasVarMapping = False 
          Global $AutoProp_SearchAreaImageFileName = "IMGS_000015.jpg", $AutoProp_SearchAreaImageFileName_HasVarMapping = False 
          Global $AutoProp_Timeout = 5, $AutoProp_Timeout_HasVarMapping = False   
          Global $AutoProp_RelativeToCoordinate = "0;0", $AutoProp_RelativeToCoordinate_HasVarMapping = False   
          Global $AutoProp_IsSearchAreaFullScreen = True, $AutoProp_IsSearchAreaFullScreen_HasVarMapping = False   
          Global $AutoProp_RequiredPercent = 95, $AutoProp_RequiredPercent_HasVarMapping = False   
          Global $AutoProp_EdgeDetectionThreshold = 10, $AutoProp_EdgeDetectionThreshold_HasVarMapping = False   
          Global $AutoProp_HideMouse = False, $AutoProp_HideMouse_HasVarMapping = False   
          Global $AutoProp_WaitForImagePosStabilization = False, $AutoProp_WaitForImagePosStabilization_HasVarMapping = False   
          Global $AutoProp_TimeForImagePosStabilization_ms = 500, $AutoProp_TimeForImagePosStabilization_ms_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_IsLowPerformanceSearch = True, $AutoProp_IsLowPerformanceSearch_HasVarMapping = False   
          Global $AutoProp_InterruptTime = 100, $AutoProp_InterruptTime_HasVarMapping = False   
          Global $AutoProp_PerformanceLimit = 60, $AutoProp_PerformanceLimit_HasVarMapping = False   
          Global $AutoProp_SearchForPictureAppear = True, $AutoProp_SearchForPictureAppear_HasVarMapping = False   
          Global $AutoProp_SearchArea_X = 0, $AutoProp_SearchArea_X_HasVarMapping = False   
          Global $AutoProp_SearchArea_Y = 0, $AutoProp_SearchArea_Y_HasVarMapping = False   
          Global $AutoProp_SearchArea_Width = 1920, $AutoProp_SearchArea_Width_HasVarMapping = False   
          Global $AutoProp_SearchArea_Height = 1080, $AutoProp_SearchArea_Height_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_X = 832, $AutoProp_PatternImageRect_X_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_Y = 794, $AutoProp_PatternImageRect_Y_HasVarMapping = False   
          Global $AutoProp_AlgorithmName = 1, $AutoProp_AlgorithmName_HasVarMapping = False   
          Global $AutoProp_ThresholdOrMaskValue = 10, $AutoProp_ThresholdOrMaskValue_HasVarMapping = False   
          Global $AutoProp_ImageSearchModeId = 0, $AutoProp_ImageSearchModeId_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "f284ef6f-0cdb-4304-aafc-4226d1edb51d", "Image_Search_28Image_Search_for_Appear29", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Image_Search_28Image_Search_for_Appear29", "f284ef6f-0cdb-4304-aafc-4226d1edb51d", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Image Search (Image Search for Appear)")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of Transaction step: Image Search (Image Search for Appear);
          ;-----------------------------------------------------------------------
          If @compiled = TRUE Then
              FileInstall("Images\IMGP_000016.bmp", "IMGP_000016.bmp", 1)
              FileInstall("Images\IMGS_000015.jpg", "IMGS_000015.jpg", 1)
          EndIf
          If $AutoProp_HideMouse then
          	Local $ImgMousePos = MouseGetPos();
          	MouseMove( $HideMousePosX, $HideMousePosY, 0 )
          EndIf
             
          $ErrorHandling = 1
          Local $__FindCoordinate = Default  
          StcImageSearch($AutoProp_PatternImageFileName , $AutoProp_SearchAreaImageFileName , $AutoProp_Timeout , $AutoProp_RelativeToCoordinate, _
                                  $AutoProp_IsSearchAreaFullScreen , $AutoProp_RequiredPercent , $AutoProp_EdgeDetectionThreshold , $AutoProp_HideMouse, _
                                  $AutoProp_WaitForImagePosStabilization , $AutoProp_TimeForImagePosStabilization_ms , $AutoProp_UseGeneralTimeout, _
                                  $AutoProp_IsLowPerformanceSearch , $AutoProp_InterruptTime , $AutoProp_PerformanceLimit , $AutoProp_SearchForPictureAppear, _
                                  $AutoProp_SearchArea_X , $AutoProp_SearchArea_Y , $AutoProp_SearchArea_Width , $AutoProp_SearchArea_Height , $AutoProp_PatternImageRect_X, _
                                  $AutoProp_PatternImageRect_Y , $AutoProp_AlgorithmName , $AutoProp_ThresholdOrMaskValue, _
                                  1920, 1080, 32, _
                                  $__FindCoordinate,"f284ef6f-0cdb-4304-aafc-4226d1edb51d", @ScriptLineNumber, "Image Search (Image Search for Appear)")   
          $OutboundVar_FindCoordinate = $__FindCoordinate
          If $AutoProp_HideMouse then MouseMove( $ImgMousePos[0], $ImgMousePos[1], 0 )
          ;-----------------------------------------------------------------------
          ;#### End of Transaction step: Image Search (Image Search for Appear);
          ;-----------------------------------------------------------------------
          
          
          EndIf  
            Global $Image_Search_Find_Coordinate = $OutboundVar_FindCoordinate  ; declare variable source. Will be referenced by other action steps 
          
          ;---------<[ End of debug suffix section!  ]>------------------
      
                  OnActionEnd("Image Search", $run, "f284ef6f-0cdb-4304-aafc-4226d1edb51d", 3, "Image Search")
      		EndIf
      			
      		If CheckBlockIteration() Then
                  OnActionStart("Mouse Actions", "af57f458-f1ac-4d18-92d3-0a1a7883adf0", 3, "Mouse Actions")
      			If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                      
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Mouse Actions (Mouse Actions relative to ""Image Search"")"
          
            
          Global $AutoProp_RelativeToCoordinate = _StcVarSysResolveVarReference( "Image_Search_Find_Coordinate"), $AutoProp_RelativeToCoordinate_HasVarMapping = True 
          Global $AutoProp_MouseSpeed = 4, $AutoProp_MouseSpeed_HasVarMapping = False   
          Global $AutoProp_MouseClickDownDelay = 200, $AutoProp_MouseClickDownDelay_HasVarMapping = False   
          Global $AutoProp_MouseClickUpDelay = 10, $AutoProp_MouseClickUpDelay_HasVarMapping = False   
          
               Global $AutoProp_ClicksCount[1] 
                  Global $AutoProp_IsMouseActionDelayEnabled[1] 
                  Global $AutoProp_ModifierAndMouseStatus[1] 
                  Global $AutoProp_MouseActionDelay[1] 
                  Global $AutoProp_ClickPoint_X[1] 
                  Global $AutoProp_ClickPoint_Y[1] 
                  Global $AutoProp_ClickMouseButtonText[1] 
                  Global $AutoProp_MouseModifierText[1] 
                           $AutoProp_ClicksCount[0] = 1                       
                          $AutoProp_IsMouseActionDelayEnabled[0] = False                   
                          $AutoProp_ModifierAndMouseStatus[0] = False                   
                      $AutoProp_MouseActionDelay[0] = 500                       
                      $AutoProp_ClickPoint_X[0] = 126                       
                      $AutoProp_ClickPoint_Y[0] = 15                       
                  $AutoProp_ClickMouseButtonText[0] = "Left"                         
                  $AutoProp_MouseModifierText[0] = "None"                         
            
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "af57f458-f1ac-4d18-92d3-0a1a7883adf0", "Mouse_Actions_28Mouse_Actions_relative_to_22Image_Search2229", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Mouse_Actions_28Mouse_Actions_relative_to_22Image_Search2229", "af57f458-f1ac-4d18-92d3-0a1a7883adf0", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Mouse Actions (Mouse Actions relative to ""Image Search"")")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Mouse Actions (Mouse Actions relative to ""Image Search"");
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          Local $zeroPointPositionX = StcCoordinates_X($AutoProp_RelativeToCoordinate) 
          Local $zeroPointPositionY = StcCoordinates_Y($AutoProp_RelativeToCoordinate) 
          If $AutoProp_MouseClickDownDelay <> 10  Then  AutoItSetOption( "MouseClickDownDelay", $AutoProp_MouseClickDownDelay )
          If $AutoProp_MouseClickUpDelay <> 10  Then  AutoItSetOption( "MouseClickDelay", $AutoProp_MouseClickUpDelay )
          
          for $idx = 0 to  UBound( $AutoProp_ClicksCount ) - 1 
              Local $XMouse1 = $zeroPointPositionX + $AutoProp_ClickPoint_X[$idx]
              Local $YMouse1 = $zeroPointPositionY + $AutoProp_ClickPoint_Y[$idx]
          	 Local $mouseActionDelay = 0
          	If $AutoProp_IsMouseActionDelayEnabled[$idx] Then $mouseActionDelay = $Autoprop_MouseActionDelay[$idx]
          
             If $AutoProp_MouseModifierText[$idx] <> "None" Then 
                StcHoldMouseModifierKey($AutoProp_MouseModifierText[$idx])
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "af57f458-f1ac-4d18-92d3-0a1a7883adf0", @ScriptLineNumber, "Mouse Actions (Mouse Actions relative to ""Image Search"")")
                StcReleaseMouseModifierKey($AutoProp_MouseModifierText[$idx])
             else
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "af57f458-f1ac-4d18-92d3-0a1a7883adf0", @ScriptLineNumber, "Mouse Actions (Mouse Actions relative to ""Image Search"")")
             EndIf
          Next
          
          If $AutoProp_MouseClickDownDelay <> 10 Then AutoItSetOption( "MouseClickDownDelay", 10)
          If $AutoProp_MouseClickUpDelay <> 10 Then AutoItSetOption( "MouseClickDelay", 10)
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Mouse Actions (Mouse Actions relative to ""Image Search"");
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                  OnActionEnd("Mouse Actions", $run, "af57f458-f1ac-4d18-92d3-0a1a7883adf0", 3, "Mouse Actions")
      		EndIf
      			
      		If CheckBlockIteration() Then
                  OnActionStart("Keystrokes to App Element1", "86293b89-bf89-438d-9229-edcca52d2dc9", 3, "Keystrokes to App Element")
      			If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                      
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Keystrokes to App Element1"
          
            
          Global $AutoProp_Keystrokes = "Strategic Commodities LOI {ENTER}", $AutoProp_Keystrokes_HasVarMapping = False 
          Global $AutoProp_Success = False, $AutoProp_Success_HasVarMapping = False   
          Global $AutoProp_ElementXPath = "/Document/Edit[5]", $AutoProp_ElementXPath_HasVarMapping = False 
          Global $AutoProp_WindowTitle = "1810998 Shipment - Google Chrome - Kelvin (flexport)", $AutoProp_WindowTitle_HasVarMapping = False 
          Global $AutoProp_UseRegexToIdentifyTargetWindow = False, $AutoProp_UseRegexToIdentifyTargetWindow_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_Timeout = 5, $AutoProp_Timeout_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "86293b89-bf89-438d-9229-edcca52d2dc9", "Keystrokes_to_App_Element1", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Keystrokes_to_App_Element1", "86293b89-bf89-438d-9229-edcca52d2dc9", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Keystrokes to App Element1")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Keystrokes to App Element1;
          ;-----------------------------------------------------------------------
          
          Local $Keystrokes_to_App_Element1_out_Success
          Local $__TranslatedWindowTitle = TranslateText($AutoProp_WindowTitle )
          Local $__TranslatedElementXPath = TranslateText($AutoProp_ElementXPath )
          
          Local $__Success = __StcNgGAKeystroke( _
                                      $__TranslatedWindowTitle, _
                                      $AutoProp_UseRegexToIdentifyTargetWindow, _
                                      $__TranslatedElementXPath, _
                                      $AutoProp_Timeout, _
                                      $Keystrokes_to_App_Element1_out_Success, _
                                      "86293b89-bf89-438d-9229-edcca52d2dc9",  @ScriptLineNumber, "Keystrokes to App Element1")
          
          ;Using DefaultValues for InitialDelay, KeyUpDelay, KeyDownDelay because AS gives no configurability
          If $__Success Then
              StcAsSendKeystroke($g_TransAction, _
                              $AutoProp_Keystrokes, _
                              "", _
                              "", _
                              500, _
                              5, _
                              5, _
                              "86293b89-bf89-438d-9229-edcca52d2dc9", _
                              @ScriptLineNumber, _
                              "Keystrokes to App Element1" )
          EndIf
          
          $Run = CheckErrorHandling(1, $__Success ? 1 : -1 , "86293b89-bf89-438d-9229-edcca52d2dc9", @ScriptLineNumber, "Keystrokes to App Element1"  ) 
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Keystrokes to App Element1;
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                  OnActionEnd("Keystrokes to App Element1", $run, "86293b89-bf89-438d-9229-edcca52d2dc9", 3, "Keystrokes to App Element")
      		EndIf
      			
      		If CheckBlockIteration() Then
                  OnActionStart("Image Search2", "1d74a939-5088-4e3c-9533-a99be5618cf9", 3, "Image Search")
      			If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                      
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Image Search2 (Image Search for Appear)"
          
          $OutboundVar_FindCoordinate = Default 
            
          Global $AutoProp_PatternImageFileName = "IMGP_000020.bmp", $AutoProp_PatternImageFileName_HasVarMapping = False 
          Global $AutoProp_SearchAreaImageFileName = "IMGS_000019.jpg", $AutoProp_SearchAreaImageFileName_HasVarMapping = False 
          Global $AutoProp_Timeout = 5, $AutoProp_Timeout_HasVarMapping = False   
          Global $AutoProp_RelativeToCoordinate = "0;0", $AutoProp_RelativeToCoordinate_HasVarMapping = False   
          Global $AutoProp_IsSearchAreaFullScreen = True, $AutoProp_IsSearchAreaFullScreen_HasVarMapping = False   
          Global $AutoProp_RequiredPercent = 95, $AutoProp_RequiredPercent_HasVarMapping = False   
          Global $AutoProp_EdgeDetectionThreshold = 10, $AutoProp_EdgeDetectionThreshold_HasVarMapping = False   
          Global $AutoProp_HideMouse = False, $AutoProp_HideMouse_HasVarMapping = False   
          Global $AutoProp_WaitForImagePosStabilization = False, $AutoProp_WaitForImagePosStabilization_HasVarMapping = False   
          Global $AutoProp_TimeForImagePosStabilization_ms = 500, $AutoProp_TimeForImagePosStabilization_ms_HasVarMapping = False   
          Global $AutoProp_UseGeneralTimeout = True, $AutoProp_UseGeneralTimeout_HasVarMapping = False   
          Global $AutoProp_IsLowPerformanceSearch = True, $AutoProp_IsLowPerformanceSearch_HasVarMapping = False   
          Global $AutoProp_InterruptTime = 100, $AutoProp_InterruptTime_HasVarMapping = False   
          Global $AutoProp_PerformanceLimit = 60, $AutoProp_PerformanceLimit_HasVarMapping = False   
          Global $AutoProp_SearchForPictureAppear = True, $AutoProp_SearchForPictureAppear_HasVarMapping = False   
          Global $AutoProp_SearchArea_X = 0, $AutoProp_SearchArea_X_HasVarMapping = False   
          Global $AutoProp_SearchArea_Y = 0, $AutoProp_SearchArea_Y_HasVarMapping = False   
          Global $AutoProp_SearchArea_Width = 1920, $AutoProp_SearchArea_Width_HasVarMapping = False   
          Global $AutoProp_SearchArea_Height = 1080, $AutoProp_SearchArea_Height_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_X = 824, $AutoProp_PatternImageRect_X_HasVarMapping = False   
          Global $AutoProp_PatternImageRect_Y = 780, $AutoProp_PatternImageRect_Y_HasVarMapping = False   
          Global $AutoProp_AlgorithmName = 1, $AutoProp_AlgorithmName_HasVarMapping = False   
          Global $AutoProp_ThresholdOrMaskValue = 10, $AutoProp_ThresholdOrMaskValue_HasVarMapping = False   
          Global $AutoProp_ImageSearchModeId = 0, $AutoProp_ImageSearchModeId_HasVarMapping = False   
          
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "1d74a939-5088-4e3c-9533-a99be5618cf9", "Image_Search2_28Image_Search_for_Appear29", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Image_Search2_28Image_Search_for_Appear29", "1d74a939-5088-4e3c-9533-a99be5618cf9", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Image Search2 (Image Search for Appear)")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of Transaction step: Image Search2 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          If @compiled = TRUE Then
              FileInstall("Images\IMGP_000020.bmp", "IMGP_000020.bmp", 1)
              FileInstall("Images\IMGS_000019.jpg", "IMGS_000019.jpg", 1)
          EndIf
          If $AutoProp_HideMouse then
          	Local $ImgMousePos = MouseGetPos();
          	MouseMove( $HideMousePosX, $HideMousePosY, 0 )
          EndIf
             
          $ErrorHandling = 1
          Local $__FindCoordinate = Default  
          StcImageSearch($AutoProp_PatternImageFileName , $AutoProp_SearchAreaImageFileName , $AutoProp_Timeout , $AutoProp_RelativeToCoordinate, _
                                  $AutoProp_IsSearchAreaFullScreen , $AutoProp_RequiredPercent , $AutoProp_EdgeDetectionThreshold , $AutoProp_HideMouse, _
                                  $AutoProp_WaitForImagePosStabilization , $AutoProp_TimeForImagePosStabilization_ms , $AutoProp_UseGeneralTimeout, _
                                  $AutoProp_IsLowPerformanceSearch , $AutoProp_InterruptTime , $AutoProp_PerformanceLimit , $AutoProp_SearchForPictureAppear, _
                                  $AutoProp_SearchArea_X , $AutoProp_SearchArea_Y , $AutoProp_SearchArea_Width , $AutoProp_SearchArea_Height , $AutoProp_PatternImageRect_X, _
                                  $AutoProp_PatternImageRect_Y , $AutoProp_AlgorithmName , $AutoProp_ThresholdOrMaskValue, _
                                  1920, 1080, 32, _
                                  $__FindCoordinate,"1d74a939-5088-4e3c-9533-a99be5618cf9", @ScriptLineNumber, "Image Search2 (Image Search for Appear)")   
          $OutboundVar_FindCoordinate = $__FindCoordinate
          If $AutoProp_HideMouse then MouseMove( $ImgMousePos[0], $ImgMousePos[1], 0 )
          ;-----------------------------------------------------------------------
          ;#### End of Transaction step: Image Search2 (Image Search for Appear);
          ;-----------------------------------------------------------------------
          
          
          EndIf  
            Global $Image_Search2_Find_Coordinate = $OutboundVar_FindCoordinate  ; declare variable source. Will be referenced by other action steps 
          
          ;---------<[ End of debug suffix section!  ]>------------------
      
                  OnActionEnd("Image Search2", $run, "1d74a939-5088-4e3c-9533-a99be5618cf9", 3, "Image Search")
      		EndIf
      			
      		If CheckBlockIteration() Then
                  OnActionStart("Mouse Actions3", "96593143-9bc3-483b-9950-9b2858f064bc", 3, "Mouse Actions")
      			If $AutoProp_KeepOutMouse AND $AutoProp_RepeatMouseKeepOut Then StcMoveMouseToParkposition( $AutoProp_MouseParkingPositionValue )
                      
          ;---------<[ Auto generated WFE debug prefix section!  ]>------
          _StcVarSysResetValidation()
          $AsLastResultValue = $AsResultValue
          $AsLastResultInfo  = $AsResultInfo
          $AsResultValue = 0
          $AsResultInfo  = "no Info"
          $g_LastAction = "Mouse Actions3 (Mouse Actions relative to ""Image Search2"")"
          
            
          Global $AutoProp_RelativeToCoordinate = _StcVarSysResolveVarReference( "Image_Search2_Find_Coordinate"), $AutoProp_RelativeToCoordinate_HasVarMapping = True 
          Global $AutoProp_MouseSpeed = 4, $AutoProp_MouseSpeed_HasVarMapping = False   
          Global $AutoProp_MouseClickDownDelay = 200, $AutoProp_MouseClickDownDelay_HasVarMapping = False   
          Global $AutoProp_MouseClickUpDelay = 10, $AutoProp_MouseClickUpDelay_HasVarMapping = False   
          
               Global $AutoProp_ClicksCount[1] 
                  Global $AutoProp_IsMouseActionDelayEnabled[1] 
                  Global $AutoProp_ModifierAndMouseStatus[1] 
                  Global $AutoProp_MouseActionDelay[1] 
                  Global $AutoProp_ClickPoint_X[1] 
                  Global $AutoProp_ClickPoint_Y[1] 
                  Global $AutoProp_ClickMouseButtonText[1] 
                  Global $AutoProp_MouseModifierText[1] 
                           $AutoProp_ClicksCount[0] = 1                       
                          $AutoProp_IsMouseActionDelayEnabled[0] = False                   
                          $AutoProp_ModifierAndMouseStatus[0] = False                   
                      $AutoProp_MouseActionDelay[0] = 500                       
                      $AutoProp_ClickPoint_X[0] = 45                       
                      $AutoProp_ClickPoint_Y[0] = 10                       
                  $AutoProp_ClickMouseButtonText[0] = "Left"                         
                  $AutoProp_MouseModifierText[0] = "None"                         
            
          _DbgSetCurrentLevel( 4 )
          OnPrefixCodeExecuted( "96593143-9bc3-483b-9950-9b2858f064bc", "Mouse_Actions3_28Mouse_Actions_relative_to_22Image_Search22229", True, "EhNormal", @ScriptLineNumber)
          If _StcVarSysValidateVarReference( "Mouse_Actions3_28Mouse_Actions_relative_to_22Image_Search22229", "96593143-9bc3-483b-9950-9b2858f064bc", @ScriptLineNumber, "EhNormal" ) Then
          $LogfileIdent = 4 
          $TransStep = ("Mouse Actions3 (Mouse Actions relative to ""Image Search2"")")
          Local $__StcTempActionStepSqx = INT("$Dbg.Item.StepNumber")
          $__gStcActionStepSqx = $__StcTempActionStepSqx = 0 ? $__gStcActionStepSqx : $__StcTempActionStepSqx   ; Sqx is 0 for block elements, so don't set an new number!
          ;---------<[ End of debug prefix section!  ]>------------------
          
          ;-----------------------------------------------------------------------
          ;#### Start of transaction step: Mouse Actions3 (Mouse Actions relative to ""Image Search2"");
          ;-----------------------------------------------------------------------
          $ErrorHandling = 1
          Local $zeroPointPositionX = StcCoordinates_X($AutoProp_RelativeToCoordinate) 
          Local $zeroPointPositionY = StcCoordinates_Y($AutoProp_RelativeToCoordinate) 
          If $AutoProp_MouseClickDownDelay <> 10  Then  AutoItSetOption( "MouseClickDownDelay", $AutoProp_MouseClickDownDelay )
          If $AutoProp_MouseClickUpDelay <> 10  Then  AutoItSetOption( "MouseClickDelay", $AutoProp_MouseClickUpDelay )
          
          for $idx = 0 to  UBound( $AutoProp_ClicksCount ) - 1 
              Local $XMouse1 = $zeroPointPositionX + $AutoProp_ClickPoint_X[$idx]
              Local $YMouse1 = $zeroPointPositionY + $AutoProp_ClickPoint_Y[$idx]
          	 Local $mouseActionDelay = 0
          	If $AutoProp_IsMouseActionDelayEnabled[$idx] Then $mouseActionDelay = $Autoprop_MouseActionDelay[$idx]
          
             If $AutoProp_MouseModifierText[$idx] <> "None" Then 
                StcHoldMouseModifierKey($AutoProp_MouseModifierText[$idx])
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "96593143-9bc3-483b-9950-9b2858f064bc", @ScriptLineNumber, "Mouse Actions3 (Mouse Actions relative to ""Image Search2"")")
                StcReleaseMouseModifierKey($AutoProp_MouseModifierText[$idx])
             else
                StcAsMouseControl($g_TransAction, $XMouse1, $YMouse1, $AutoProp_ClickMouseButtonText[$idx], $AutoProp_ClicksCount[$idx], $AutoProp_MouseSpeed, $mouseActionDelay, "96593143-9bc3-483b-9950-9b2858f064bc", @ScriptLineNumber, "Mouse Actions3 (Mouse Actions relative to ""Image Search2"")")
             EndIf
          Next
          
          If $AutoProp_MouseClickDownDelay <> 10 Then AutoItSetOption( "MouseClickDownDelay", 10)
          If $AutoProp_MouseClickUpDelay <> 10 Then AutoItSetOption( "MouseClickDelay", 10)
          
          ;-----------------------------------------------------------------------
          ;#### End of transaction step: Mouse Actions3 (Mouse Actions relative to ""Image Search2"");
          ;-----------------------------------------------------------------------
          
          
          EndIf  
           
          ;---------<[ End of debug suffix section!  ]>------------------
      
                  OnActionEnd("Mouse Actions3", $run, "96593143-9bc3-483b-9950-9b2858f064bc", 3, "Mouse Actions")
      		EndIf
      		
      	$App_Session_HasActionStepError = Not StcGetErrorState()
      EndIf
      
      $Run = CheckErrorHandling(1, $__Success And $App_Session_HasActionStepError ? 1 : -1 , "76001479-e2bf-40cd-b541-a1b4c7f564ad", @ScriptLineNumber, "App Session"  )
      
      If Not ($__Success And $App_Session_HasActionStepError) Then
      	StcSetErrorState()
      EndIf
      
      $g_ControlBlockLevelName = $g_LastControlBlockLevelName
      
      ;TODO: decide what to do with output parameters from above. If AS has Outbound variables, set them here using following syntax:
      ;$OutboundVar_%PROPERTY NAME IN ACTIVITY CLASS% = $App_Session_out_Success
      ;-----------------------------------------------------------------------
      ;### End of transaction step: App Session;
      ;-----------------------------------------------------------------------
      
      
      EndIf  
       
      ;---------<[ End of debug suffix section!  ]>------------------
   
      OnActionEnd("App Session", $run, "76001479-e2bf-40cd-b541-a1b4c7f564ad", 2, "App Session")
   EndIf
   
   $g_ControlBlockLevelName = $g_LastControlBlockLevelName
   OnTransactionEnd("Transaction", "7929da67-e891-4b73-9d65-09e4f8225a4f")
   ;---------------------------------------------------------------------------
   ;## End of Transaction: Transaction;
   ;---------------------------------------------------------------------------
   
   
   EndIf  
    
   ;---------<[ End of debug suffix section!  ]>------------------
 
          OnMeasurementBlockEnd("Transaction", "7929da67-e891-4b73-9d65-09e4f8225a4f", 1, "Transaction")
       EndIf
  
       ;---------------------------------------------------------------------------
       ; Application exit, handling for return
       ;---------------------------------------------------------------------------
 
       If ($run < 0 OR OnCheckAbortState()) AND Not (_StcIsUserExitCausedBy_ExitOk()  or _StcIsStatusExitCode()) Then    ; negativ run or OnCheckAbortState() return true indicates a problem
          $Pass_Activity_Workflow = 0
 
          OnMeasurementTryFailed ("5b24049e-4411-439e-bca4-448aba59920f" )    ; notify Funclib subsystem 
          OnLastMeasurementExecuted("5b24049e-4411-439e-bca4-448aba59920f", False)
 
          ActionStepFeedbackEx( "Activity Workflow", "Workflow", "5b24049e-4411-439e-bca4-448aba59920f", "Error", StcMessages_AppExit_1( $MeasurementName) , @ScriptLineNumber ) 
          If OnCheckAbortState() Then
             writelog( StcMessages_AppExit_2($MeasurementName)  )
          Else
             writelog(  StcMessages_AppExit_3($MeasurementName) )
          EndIf
 
          If $enter >= $g_StcMaxConfiguredExecutionTries OR OnCheckAbortState() Then ; no hope, the end of retries was reached...
             $UsedErrorCycles = $enter                         ; pass current used error cycles to XML output variable
             ExitLoop 1
          Else  ;$enter < $g_StcMaxConfiguredExecutionTries     ; ok, one more again...
             writelog("<-------------------------------------------------------------------------------------------------------------------------------------->")
             writelog("[Enter Measurement Retry] Try: " & $enter+1 & " of " & $g_StcMaxConfiguredExecutionTries)
             StcErrorBox("Application measurement", StcMessages_AppExit_4($MeasurementName,  $retrydelay) , $retrydelay)
             ActionStepFeedbackEx( "Activity Workflow", "Workflow", "5b24049e-4411-439e-bca4-448aba59920f", "Warning", "Workflow now restarted due to prior error. This is measurement cycle: " & $enter+1 & " of " & $g_StcMaxConfiguredExecutionTries , @ScriptLineNumber ) 
             OnMeasurementLoopFailedAfterWaitDlg(STC_GetWorkflowProtocolTemplate())    ; notify subsystem after the message box was displayed! Otherwise the dialog time influence the measurement time.
             $enter += 1           ; next try
          EndIf
 
          Clearkeys ()                     ; take care about key states!
 
       Else
          OnLastMeasurementExecuted("5b24049e-4411-439e-bca4-448aba59920f", TRUE)
          ; some debug, if user has it selected
          writelog( StcMessages_AppExit_5($MeasurementName,  $retrydelay, $enter)  )
          ActionStepFeedbackEx( "Activity Workflow", "Workflow", "5b24049e-4411-439e-bca4-448aba59920f", "Info", StcMessages_AppExit_6( $MeasurementName, $enter, $g_StcMaxConfiguredExecutionTries ) , @ScriptLineNumber ) 
 
          $g_TransAction = "SUM_" & $MeasurementName ; Sum of Responsetimes in Process
          $UsedErrorCycles = $enter-1         ; pass current used error cycles to XML output variable
 
          $Pass_Activity_Workflow = $Pass_Activity_Workflow + 1 ; number of runs without errors
          writelog(  StcMessages_AppExit_7($MeasurementName, $enter, $Pass_Activity_Workflow) )
          ExitLoop 1
       EndIf
    Until $enter > $g_StcMaxConfiguredExecutionTries
 
   
 
 

   
 
 
 ;-----------------------------------------------------------------------
 ;# Start of finalization block: Workflow Finalization;
 ;-----------------------------------------------------------------------
 ; StcAssert(false, "$Run=" & $Run )
 ; StcAssert(false, "$AbortCurrentWorkflow=" & $AbortCurrentWorkflow )
 ; StcAssert(false, "$g_UserExecutionAbortCode=" & $g_UserExecutionAbortCode ) ; May contain 800 for Trigger case
 ; StcAssert(false, "$BreakNextLoop=" & $BreakNextLoop )
 ; StcAssert(false, "CheckBlockIteration()=" & CheckBlockIteration() )
 
 ; Save last workflow run state:
 Local $SavedWorkflowRunState = $Run
 Local $SavedWorkflowAbortState = $AbortCurrentWorkflow
 Local $SavedWorkflowBreakNextLoop = $BreakNextLoop
 Local $OnSuccessRunResult = 0 ; 0-> not processed 1->processed with okay  2->processed but failed
 Local $OnErrorRunResult = 0   ; 0-> not processed 1->processed with okay  2->processed but failed
 Local $OnErrorBlockHasNoActionSteps=False
 
 StcResetErrorState()
 $AbortCurrentWorkflow = False
 $BreakNextLoop = False
 
 $LogfileIdent = 1
 $g_ControlBlockLevelName = "Workflow Finalization"
 
 
 
 OnEnterManagedBlock()
 
 ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "8e2dde03-6988-4608-a8f6-86c885f1b1b2", "Info",  "Finalize Block reached. Finalize Block may change the overall workflow result!", @ScriptLineNumber  )
 
    ;-------------------------------------------------------------------
    ; 'Workflow run succeeded' section
    ;-------------------------------------------------------------------
    Local $__ProcessedAtLeastOneActionStep = false
    If $SavedWorkflowRunState = 1 AND $g_UserExecutionAbortCode = 1 Then     ; On Success Block
     writelog("[WorkflowRunSucceeded.Enter]",1);
     $OnSuccessRunResult = 1
     While 1     ; Try-Block-Loop
             
       ; Actionstep: 'Insert Item here...' is  a dummy element . No code generated!
             
       If $__ProcessedAtLeastOneActionStep Then ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "172f3b8f-a253-43a5-b4d3-f7447ed93fa5", "InfoPlus",  "Finalize Block: OnSuccess handling was successfully processed.", @ScriptLineNumber  )
       writelog("[WorkflowRunSucceeded.End] Leave 'Workflow run succeeded' with no error!",1);
       OnExitDoActionManagedBlock("172f3b8f-a253-43a5-b4d3-f7447ed93fa5")
       ExitLoop 1
     WEnd  
     If $run <> 1 Then $OnSuccessRunResult = 2
    EndIf     ; Try-Block-Loop End
 
                Local $__LastAction = $g_LastAction
    Local $__TransAction = $g_TransAction
 
 
       If $g_UserExecutionAbortCode <> 1 Then
           ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "8e2dde03-6988-4608-a8f6-86c885f1b1b2", "Warning",  "Finalize Block does only enter Common error handling because workflow was closed by a user exit code (e.g. Trigger or UserExit action step).", @ScriptLineNumber  )
    EndIf
   
    ;-------------------------------------------------------------------
    ; 'Workflow Run Failed' section
    ;-------------------------------------------------------------------
    $__ProcessedAtLeastOneActionStep = false
    If $SavedWorkflowRunState <> 1 Then ;  Local OnError. Loop over only if abort state is NOT reached!
                 
     writelog("[WorkflowRunFailed.Enter]",1);
 
     $Run = 1
     $OnErrorRunResult = 1
     While 1 ;  Local Catch-Loop, loop over only if abort state is NOT reached!
                                  ;  This is only if the DoAction has executed an "Exit Workflow" AS!
                   
       ; 'Workflow Run Failed' does not contain any active elements, so set error state
       $Run = -1
 
 
       If $__ProcessedAtLeastOneActionStep Then 
           ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "58f7ba7b-7d6e-4a1e-8edd-32fa774dcefb", "InfoPlus",  "Finalize Block: ""Workflow run failed"" handling was successfully processed.", @ScriptLineNumber  )
           $OnErrorBlockHasNoActionSteps = False
       Else
           ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "58f7ba7b-7d6e-4a1e-8edd-32fa774dcefb", "InfoPlus",  "Finalize Block: ""Workflow run failed"" handling was successfully processed but contained no further actions steps.", @ScriptLineNumber  )          
           $OnErrorBlockHasNoActionSteps = True
       EndIF
       writelog("[WorkflowRunFailed.End] Leave ""Workflow run failed"" with no further errors.",1);
       OnExitDoErrorManagedBlock("58f7ba7b-7d6e-4a1e-8edd-32fa774dcefb")
       ExitLoop 1
     WEnd
     If $run <> 1 Then $OnErrorRunResult = 2
  EndIf  ; OnSuccess-Block-Loop End
 
 
 
 ;-------------------------------------------------------------------
 ; Finally section
 ;-------------------------------------------------------------------
 Local $RunValueAtLevel_1 = $Run  ; DoAlways is error state neutral, so store value for current level
 $Run = 1
 $__ProcessedAtLeastOneActionStep = false
 
 writelog("[DoAlways.Enter] Following actions executed with no error handling by default!",1);
 While 1    ; Always-Block-Loop
     
    ; Actionstep: 'Insert Item here...' is  a dummy element . No code generated!
    writelog("[DoAlways.End]",1)
 
   If $__ProcessedAtLeastOneActionStep Then ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "22cf2bcb-4a38-4788-a947-909a38f4c026", "InfoPlus",  "Common finalize handling was successfully processed. Note: Possible failed actions steps do not change the workflow run result.", @ScriptLineNumber )
   ExitLoop 1
 WEnd ; Always-Block-Loop
 
 $g_TransAction = $__TransAction
 $g_LastAction = $__LastAction
 
 _StcWaCloseRegisteredSessions("8e2dde03-6988-4608-a8f6-86c885f1b1b2","Workflow Finalization") 
 
 
 $Run = $RunValueAtLevel_1  ; DoAlways is error state neutral, so get back value for this level
     
 OnExitDoAlwaysManagedBlock("22cf2bcb-4a38-4788-a947-909a38f4c026")  
 
 OnLeaveManagedBlock()
 
 ; if was set or is now set, the overall state belongs to pesemistic..
 ;$AbortCurrentWorkflow = $SavedWorkflowAbortState OR $AbortCurrentWorkflow
 ;$OneOrMoreMeasurementFailed = true
 ;$LastMeasurementRunSucceeded  = false
 
 
 ActionStepFeedbackEx( $WorkflowName, "Workflow", "8e2dde03-6988-4608-a8f6-86c885f1b1b2", "Info", "Overall consumed time for this run: " & Round(TimerStop($MeasurementOverallTimeTimer )/1000,1) & "sec." , @ScriptLineNumber ) 
 
 OnMeasurementEnd ($g_TransAction,"8e2dde03-6988-4608-a8f6-86c885f1b1b2")    ; notify subsystem
 
 
 If $OnSuccessRunResult > 0 Then
    If $OnSuccessRunResult = 2 Then  ; OnSuccess runs into failed state! 
       ; now it depends what the user selected in Finalizer Wizard
       Switch (0)
          Case 0 ; User want to keep okay state 
             Actionstepfeedbackex( "Finalize block", "Finalize block", "172f3b8f-a253-43a5-b4d3-f7447ed93fa5", "Warning",  "The activity succeeded but failed in finalizer handling.", @scriptlinenumber  )               
             Actionstepfeedbackex( "Finalize block", "Finalize block", "8e2dde03-6988-4608-a8f6-86c885f1b1b2", "Warning",  "The activity succeeded but failed in finalizer handling. Termination mode is: Ingore failure and proceed with Success.", @scriptlinenumber  )               
             _StcSetSuccess_Workflow()  ; for TA and APM we still use Success Code
          Case 1 ; User want to proceed with process
             $OneOrMoreMeasurementFailed = true
             $LastMeasurementRunSucceeded  = false
             Actionstepfeedbackex( "Finalize block", "Finalize block", "172f3b8f-a253-43a5-b4d3-f7447ed93fa5", "Error",  "The activity succeeded but failed in finalizer handling.", @scriptlinenumber  )               
             ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "8e2dde03-6988-4608-a8f6-86c885f1b1b2", "Error",  "Finalize handling failed. Termination mode is: Proceed Process.", @ScriptLineNumber  )
             _StcSetStatusExit_Workflow($StcExit_RPA_ONSUCCESS_FAILED_BUT_PROCCED) ; for TA and APM we still use measurement failed value
          Case 2 ; User want to terminate process
             $OneOrMoreMeasurementFailed = true
             $LastMeasurementRunSucceeded  = false
             Actionstepfeedbackex( "Finalize block", "Finalize block", "172f3b8f-a253-43a5-b4d3-f7447ed93fa5", "Error",  "The activity succeeded but failed in finalizer handling.", @scriptlinenumber  )               
             ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "8e2dde03-6988-4608-a8f6-86c885f1b1b2", "Error",  "Finalize handling failed. Termination mode is: Terminate.", @ScriptLineNumber  )
             _StcSetStatusExit_Workflow($StcExit_Measurement_Failed) ; for TA and APM we still use measurement failed value
       EndSwitch
    Else
       _StcSetSuccess_Workflow()  ; for TA and APM we still use Success Code
    EndIf
 EndIf
 
 
 If $OnErrorRunResult > 0 Then 
    ; it doesn't matter if block failed again or not. Failed is still failed!
    ; now it depends what the user selected in Finalizer Wizard
  
    if $OnErrorRunResult = 2 AND Not $OnErrorBlockHasNoActionSteps Then ; in this case one of the actions in OnError has failed!
       ActionstepFeedbackEx( "Finalize block", "Finalize block", "58f7ba7b-7d6e-4a1e-8edd-32fa774dcefb", "Error",  "One of the activities has failed.", @scriptlinenumber  )               
    EndIF
 
    Switch (1)
       Case 0 ; User want to proceed process
             $OneOrMoreMeasurementFailed = true
             $LastMeasurementRunSucceeded  = false
             ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "8e2dde03-6988-4608-a8f6-86c885f1b1b2", "Error",  "Activity failed. Termination mode is: Proceed Process.", @ScriptLineNumber  )
             _StcSetStatusExit_Workflow($StcExit_RPA_FAILED_BUT_PROCCED_PROCESS) ; for TA and APM we still use measurement failed value
       Case 1 ; User want to terminate process
             $OneOrMoreMeasurementFailed = true
             $LastMeasurementRunSucceeded  = false
             ActionStepFeedbackEx( "Finalize Block", "Finalize Block", "8e2dde03-6988-4608-a8f6-86c885f1b1b2", "Error",  "Activity failed. Termination mode is: Terminate.", @ScriptLineNumber  )
             _StcSetStatusExit_Workflow($StcExit_Measurement_Failed) ; for TA and APM we still use measurement failed value
    EndSwitch
 EndIf
 
 
 
 
 ;-----------------------------------------------------------------------
 ;# End of finalization block: Workflow Finalization;
 ;-----------------------------------------------------------------------
 


__StcRpaFlushOutParams( "d6d5cd67-e0d2-422d-a95a-1b49705cb3b2", @ScriptLineNumber, "Upload Document ()"  )
Local $__AcitivtyParameter_Path = StcGetLogFileFolder() & "\OutputActivityParameters.json"
Local $__AcitivtyParameter_Success = __StcSaveOutParameters($__AcitivtyParameter_Path, "d6d5cd67-e0d2-422d-a95a-1b49705cb3b2", @ScriptLineNumber, "Upload Document ()"    ) 


  OnWorkflowEnd(  "d6d5cd67-e0d2-422d-a95a-1b49705cb3b2" )
  return $_MeasurementScriptRunFinished
EndFunc

 
 ;-----------------------------------------------------------------------
 ; Static Section for STC-Protector START
 ;-----------------------------------------------------------------------
 Func __ProtectorGetWindowTitle( $Title, $ActName, $ActId, $Line)
     Local $windowTitle = _ExpandToTitleRegEx($Title)
     If @error = 1 AND NOT $g_StcProtectorAlreadyShowsError Then 
        ActionStepFeedbackEx( $ActName, "KeyStroke", $ActId, "Error", "The window title '" & $windowTitle & "' is not a valid regular expression!", $Line )
        $g_StcProtectorAlreadyShowsError = TRUE
     EndIf
     return $windowTitle
 EndFunc
 
 Func __DecAndCheckFailCounter( $ProtID, $Title, $ActName, $ActId, $Line) 
     $g__StcProtFailCounter[$ProtID] = $g__StcProtFailCounter[$ProtID] - 1
     If $g__StcProtFailCounter[$ProtID] = 0 Then
        ActionStepFeedbackEx( $ActName, "KeyStroke", $ActId, "Warning", "Proctector for window title '" & $Title & "' disabled because of consecutive '" & $g__StcProtFailLimit & "' failures.", $Line )     
        StcProtectorDisable()
     EndIf
 EndFunc           
 
 
 ; STC-Protector, function for closing of error windows, not wanted popups like update information, check runs every 250 miliseconds
 Func STC_Protector()
     __CheckAutoItMainThread()
     If $g__StcProtSkipNextRun OR NOT $g__StcProtEnabled Then
         $g__StcProtSkipNextRun = FALSE
         return
     EndIf
         
     If NOT IsDeclared("g_StcProtectorAlreadyShowsError") Then Global $g_StcProtectorAlreadyShowsError = FALSE
     ; check and force of reboot, waits till a running measurement is finished
     If $reboot = 1 AND @hour = $reboothour AND @min = $rebootMin Then $rebootforce = 1
 
  
 
 EndFunc
 
 ;-----------------------------------------------------------------------
 ; Static Section for STC-Protector END
 ;-----------------------------------------------------------------------
 


; Run protocol template xml:
Func STC_GetWorkflowProtocolTemplate()
 return "<?xml version=""1.0"" encoding=""utf-8""?>" & @CRLF & _
"<WorkflowRunProtocol xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" Id=""d6d5cd67-e0d2-422d-a95a-1b49705cb3b2"" Name=""Upload Document"" Type=""ActivityWorkflow"" WorkflowRevision=""0"" WorkflowProjectID=""d6d5cd67-e0d2-422d-a95a-1b49705cb3b2"" ModelRevision=""9"" WorkflowEditorVersion=""6.0.15086.1"" WorkflowRun=""0"" Author=""kmok"" CreationDate=""2022-10-11T15:07:25.9619523+08:00"">" & @CRLF & _
"  <Items>" & @CRLF & _
"    <Item Id=""1c23ed8f-335a-4518-b89a-1e7e3ba58cdc"" Name=""Workflow Initialization"" Type=""InitializeSectionActivity"">" & @CRLF & _
"      <Items>" & @CRLF & _
"        <Item Id=""2d9e97d1-1690-4547-99c6-5d244dc755cd"" Name=""Activity Parameters"" Type=""ActivityParametersActivity"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"        <Item Id=""ce502395-0c9d-4d1b-8938-53027667c188"" Name=""Pattern Gallery"" Type=""SearchPatternGalleryActivity"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"        <Item Id=""35f6df8c-5d22-41a6-8c66-581d7388761a"" Name=""Settings"" Type=""WorkflowSettingsActivity"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"      </Items>" & @CRLF & _
"      <RunResult State=""NotExecuted"" />" & @CRLF & _
"    </Item>" & @CRLF & _
"    <Item Id=""5b24049e-4411-439e-bca4-448aba59920f"" Name=""Activity Workflow"" Type=""ActivityWorkflowMeasurement"">" & @CRLF & _
"      <Items>" & @CRLF & _
"        <Item Id=""7929da67-e891-4b73-9d65-09e4f8225a4f"" Name=""Transaction"" Type=""Transaction"">" & @CRLF & _
"          <Items>" & @CRLF & _
"            <Item Id=""76001479-e2bf-40cd-b541-a1b4c7f564ad"" Name=""App Session"" Type=""GASessionActivity"">" & @CRLF & _
"              <Items>" & @CRLF & _
"                <Item Id=""31ce5b67-807a-4a1a-80d4-5d546af3de15"" Name=""AI OCR (screen-based)"" Type=""TextRecognitionOpenCvActivity"" Description="""">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""5761e013-d733-4f20-8050-47e8a5c651a6"" Name=""Mouse Actions: Mouse Actions1"" Type=""MouseClicksActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""a0ade1a6-e1d6-4aa2-8946-df2ee3dd53dd"" Name=""Image Search: Image Search1"" Type=""ImageSearchActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""6fa77bbf-9325-4e60-8ec6-f9679eda251c"" Name=""Mouse Actions: Mouse Actions2"" Type=""MouseClicksActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""0c5f3cfe-4943-4bef-9ba8-588918f45c30"" Name=""Keystrokes to App Element"" Type=""GAKeystrokeActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""f284ef6f-0cdb-4304-aafc-4226d1edb51d"" Name=""Image Search"" Type=""ImageSearchActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""af57f458-f1ac-4d18-92d3-0a1a7883adf0"" Name=""Mouse Actions"" Type=""MouseClicksActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""86293b89-bf89-438d-9229-edcca52d2dc9"" Name=""Keystrokes to App Element: Keystrokes to App Element1"" Type=""GAKeystrokeActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""1d74a939-5088-4e3c-9533-a99be5618cf9"" Name=""Image Search: Image Search2"" Type=""ImageSearchActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"                <Item Id=""96593143-9bc3-483b-9950-9b2858f064bc"" Name=""Mouse Actions: Mouse Actions3"" Type=""MouseClicksActivity"">" & @CRLF & _
"                  <RunResult State=""NotExecuted"" />" & @CRLF & _
"                </Item>" & @CRLF & _
"              </Items>" & @CRLF & _
"              <RunResult State=""NotExecuted"" />" & @CRLF & _
"            </Item>" & @CRLF & _
"          </Items>" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"      </Items>" & @CRLF & _
"      <RunResult State=""NotExecuted"" />" & @CRLF & _
"    </Item>" & @CRLF & _
"    <Item Id=""8e2dde03-6988-4608-a8f6-86c885f1b1b2"" Name=""Workflow Finalization"" Type=""WorkflowFinalizationActivity"">" & @CRLF & _
"      <Items>" & @CRLF & _
"        <Item Id=""172f3b8f-a253-43a5-b4d3-f7447ed93fa5"" Name=""Workflow run succeeded"" Type=""OnSuccessSection"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"        <Item Id=""58f7ba7b-7d6e-4a1e-8edd-32fa774dcefb"" Name=""Workflow run failed"" Type=""OnErrorSection"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"        <Item Id=""22cf2bcb-4a38-4788-a947-909a38f4c026"" Name=""Common finalization handling"" Type=""DoAlwaysSection"">" & @CRLF & _
"          <RunResult State=""NotExecuted"" />" & @CRLF & _
"        </Item>" & @CRLF & _
"      </Items>" & @CRLF & _
"      <RunResult State=""NotExecuted"" />" & @CRLF & _
"    </Item>" & @CRLF & _
"  </Items>" & @CRLF & _
"  <RunResult State=""NotExecuted"" />" & @CRLF & _
"</WorkflowRunProtocol>"  
EndFunc

